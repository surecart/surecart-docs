---
openapi: 3.1.0
info:
  title: SureCart API
  termsOfService: https://surecart.com/terms-and-conditions
  version: '1.0'
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: api.surecart.com
security:
- bearer_auth: []
components:
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer
  schemas:
    abandoned_checkout_body:
      properties:
        notifications_enabled:
          type: boolean
          description: Whether or not notifications should be sent to the customer
            for this abandoned checkout.
    abandoned_checkout_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/abandoned_checkout_body"
      - properties:
          notification_status:
            type: string
            description: The current notification status for this abandonded checkout,
              which can be one of `not_scheduled`, `scheduled`, or `sent`.
          portal_url:
            type: string
            nullable: true
            description: A URL that will redirect to this abandoned checkout's correct
              portal page (hosted or external).
          checkout:
            type: string
            description: The associated checkout.
          customer:
            type: string
            description: The associated customer.
          promotion:
            type: string
            nullable: true
            description: The associated promotion that has been auto-generated for
              this abandoned checkout.
          recovered_at:
            type: integer
            nullable: true
            description: If the abandoned checkout has been recovered, the time it
              was recovered at.
          recovered_checkout:
            type: string
            nullable: true
            description: The associated recovered checkout.
      - "$ref": "#/components/schemas/model_timestamps"
    abandoned_checkout_protocol_body:
      properties:
        enabled:
          type: boolean
          description: If set to `true` abandonded checkout reminder emails will be
            sent to customers.
        first_promotion_notification:
          type: integer
          nullable: true
          description: The first notification that should have an auto-generated promotion
            code â€“ can be one of `1`, `2`, `3` or `null`. For example, if set to `2`
            the promotion code will be generated when the second notification is sent.
            If `null` a promotion code will never be generated.
        grace_period_days:
          type: integer
          description: The number of days to wait after a customer's purchase before
            allowing an abandoned checkout to be created. This helps to prevent abandoned
            checkouts being created for customers very soon after they have made a
            purchase.
        ignore_purchased_products:
          type: boolean
          description: Whether or not to ignore checkouts where the customer has already
            purchased all of the products in the checkout.
        notification_delays:
          type: array
          description: The timing schedule for abandoned checkout notifications. It
            is an array of integers representing the delay in seconds for all notifications.
            For example, a value of `[3600, 86400, 432000]` indicates that notifications
            will be sent 1 hour, 24 hours, and 5 days after a checkout is abandoned.
            The number of notifications (items in array) must be between 1 and 3.
        promotion_expires_after_days:
          type: integer
          nullable: true
          description: The number of days that the auto-generated promotion code should
            be valid for. If set to 'null' it is valid forever.
        test_mode_enabled:
          type: boolean
          description: Whether or not abandoned checkouts should be created for test
            mode checkouts.
    abandoned_checkout_protocol_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/abandoned_checkout_protocol_body"
      - properties:
          coupon:
            type: string
            description: The associated coupon that is used when creating promotions
              for abandoned checkouts.
      - "$ref": "#/components/schemas/model_timestamps"
    account_base:
      properties:
        currency:
          type: string
          description: The default currency for this account. This will be used as
            the default value for `Price`, `Checkout`, and other objects that have
            the `currency` attribute.
        name:
          type: string
          description: The full name, business name, or other short descriptor for
            this account.
        locale:
          type: string
          description: The language that will be used for all customer notifications,
            invoices, etc. Current available locales are `en`, `bg`, `de`, `es`, `fr`,
            `it`, `ja`, `nl`, `pl`, `pt`, `pt_br`.
        time_zone:
          type: string
          description: The time zone of the account. Values must be a valid IANA time
            zone database identifier.
        url:
          type: string
          nullable: true
          description: The URL of this account's store. This will be used as the base
            for all redirects back to your store.
    account_body:
      allOf:
      - "$ref": "#/components/schemas/account_base"
      - properties:
          address:
            description: The associated address.
            allOf:
            - "$ref": "#/components/schemas/address_body"
    account_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/account_base"
      - properties:
          abandoned_checkout_protocol:
            type: string
            description: The associated abandoned checkout protocol.
          address:
            type: string
            description: The associated legal business address.
          affililiation_protocol:
            type: string
            description: The associated affiliation protocol.
          brand:
            type: string
            description: The associated brand.
          cache_keys:
            type: object
            description: A collection of cache keys for various resource collections
              on this account. These values can be used to invalidate your local cache
              for each resource collection.
          claimed:
            type: boolean
            description: Whether or not this account has been claimed yet.
          claim_url:
            type: string
            nullable: true
            description: If not claimed, the URL where this account can be claimed.
          claim_window_ends_at:
            type: integer
            nullable: true
            description: If not claimed, the time at which the claim window for this
              account ends. Measured in seconds since the Unix epoch.
          currency_locked:
            type: boolean
            description: Whether or not the currency is locked for this account. The
              currency is locked once the first live order is created.
          customer_notification_protocol:
            type: string
            description: The associated customer notification protocol.
          customer_portal_protocol:
            type: string
            description: The associated customer portal protocol.
          entitlements:
            type: object
            description: The specific features that this account is entitled to.
          medias_total_byte_size:
            type: integer
            description: The total number of bytes from this account's medias.
          plan:
            type: object
            description: Details of the current plan this account is on.
          processors:
            type: array
            description: A list of connected processors.
          public_token:
            type: string
            description: The public API token for this account.
          review_protocol:
            type: string
            description: The associated review protocol
          shipping_protocol:
            type: string
            description: The associated shipping protocol.
          subscription_protocol:
            type: string
            description: The associated subscription protocol.
          tax_protocol:
            type: string
            description: The associated tax protocol.
          seeded_at:
            type: integer
            nullable: true
            description: Time when the account was seeded.
          test_data_purged_at:
            type: integer
            nullable: true
            description: Time at which the test data was last purged.
      - "$ref": "#/components/schemas/model_timestamps"
    activation_base:
      properties:
        fingerprint:
          type: string
          description: The identifier for this activation. For example a URL, a machine
            fingerprint, etc.
        name:
          type: string
          nullable: true
          description: The name of this activation.
    activation_body:
      allOf:
      - "$ref": "#/components/schemas/activation_base"
      - properties:
          license:
            type: string
            description: The UUID of the license.
    activation_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/activation_base"
      - properties:
          counted:
            type: boolean
            description: Whether or not this activation counts towards the activation
              limit.
          license:
            type: string
            nullable: true
            description: The associated license.
      - "$ref": "#/components/schemas/model_timestamps"
    address_body:
      properties:
        city:
          type: string
          description: City, district, suburb, town, or village.
        country:
          type: string
          description: Two-letter country code (ISO 3166-1 alpha-2).
        line_1:
          type: string
          description: Address line 1 (e.g., street, PO Box, or company name).
        line_2:
          type: string
          nullable: true
          description: Address line 2 (e.g., apartment, suite, unit, or building).
        name:
          type: string
          description: The full name or business name for this address. (If empty,
            this will fallback to the customer's name.)
        postal_code:
          type: string
          description: ZIP or postal code.
        state:
          type: string
          description: State, county, province, or region.
    address_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/address_body"
      - "$ref": "#/components/schemas/model_timestamps"
    affiliation_body:
      allOf:
      - properties:
          bio:
            type: string
            description: A short blurb from this affiliate describing how they will
              promote this store.
          code:
            type: string
            description: The affiliate's unique code.
          commission_structure:
            description: The commission structure to use when calculating referral
              commissions for this specific affiliation.
            allOf:
            - "$ref": "#/components/schemas/commission_structure_base"
          email:
            type: string
            description: The affiliate's email address.
          first_name:
            type: string
            description: The affiliate's first name.
          last_name:
            type: string
            nullable: true
            description: The affiliate's last name.
          payout_email:
            type: string
            nullable: true
            description: The affiliate's payout email address.
          url:
            type: string
            nullable: true
            description: The primary website or social media account of the affiliate.
      - "$ref": "#/components/schemas/model_metadata"
    affiliation_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - properties:
          active:
            type: boolean
            description: Whether or not the affiliate is active.
          affiliation_products:
            type: object
            nullable: true
            description: A list of associated affiliation products.
          commission_structure:
            type: string
            description: The associated commission structure.
            nullable: true
          portal_url:
            type: string
            nullable: true
            description: A URL that will redirect to this affiliation's correct portal
              page (hosted or external).
          referral_url:
            type: string
            description: The referral URL with the affiliate's code appended as a
              query parameter.
          total_commission_amount:
            type: integer
            description: The total commission amount earned by the affiliate.
          total_not_paid_commission_amount:
            type: integer
            description: The total commission amount earned by the affiliate that
              has not been paid out yet.
          clicks:
            type: object
            nullable: true
            description: A list of associated clicks.
          referrals:
            type: object
            nullable: true
            description: A list of associated referrals.
          payouts:
            type: object
            nullable: true
            description: A list of associated payouts.
      - "$ref": "#/components/schemas/model_discarded_timestamp"
      - "$ref": "#/components/schemas/model_timestamps"
    affiliation_product_body:
      allOf:
      - properties:
          affiliation:
            type: string
            description: The UUID of the affiliation.
          commission_structure:
            description: The commission structure to use when calculating referral
              commissions for this product and affiliation.
            allOf:
            - "$ref": "#/components/schemas/commission_structure_base"
          product:
            type: string
            description: The UUID of the product.
    affiliation_product_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - properties:
          affiliation:
            type: string
            description: The associated affiliation.
          commission_structure:
            type: string
            description: The associated commission structure.
          product:
            type: string
            description: The associated product.
      - "$ref": "#/components/schemas/model_timestamps"
    affiliation_protocol_base:
      allOf:
      - properties:
          affiliation_request_bio_label:
            type: string
            nullable: true
            description: The question affiliates are asked when they sign up.
          affiliation_request_payout_email_enabled:
            type: boolean
            description: Whether or not to include the payout email field on the affiliation
              request form.
          auto_approve_affiliations:
            type: boolean
            description: Whether or not to automatically approve affiliation requests.
          auto_approve_referrals:
            type: boolean
            description: Whether or not to automatically approve referrals.
          description:
            type: string
            nullable: true
            description: A short description of how this store's affiliate program
              works. This will be displayed when affiliates request to join.
          enabled:
            type: boolean
            description: Whether or not this store is accepting new affiliation requests.
          external_portal_enabled:
            type: boolean
            description: Whether or not an external affiliate portal is being used.
              If true, affiliates will be redirected to the store's URL when they
              visit the hosted affiliate portal.
          external_portal_url:
            type: string
            nullable: true
            description: If `external_portal_enabled=true`, where is the external
              portal hosted? If empty, the store's URL is used.
          payout_description:
            type: string
            nullable: true
            description: A short description of how this store pays out commissions
              to affiliates.
          portal_back_url:
            type: string
            nullable: true
            description: The back URL that is shown to affiliates on the affiliate
              portal.
          portal_heading:
            type: string
            nullable: true
            description: The heading to display in the affiliate portal sidebar.
          portal_description:
            type: string
            nullable: true
            description: The short description to display in the affiliate portal
              sidebar.
          referral_url:
            type: string
            nullable: true
            description: The URL to use for affiliate referrals. This will be used
              to generate affiliate referral links.
          referrer_type:
            type: string
            description: The referrer strategy to use for referrals â€“ one of `first`
              or `last`.
          terms_url:
            type: string
            nullable: true
            description: The URL to the terms and conditions for this store's affiliate
              program.
          tracking_length_days:
            type: integer
            description: The number of days to track affiliate clicks for. This determines
              how long the click tracking cookie will last for.
          wordpress_plugin_tracking_enabled:
            type: boolean
            description: Whether or not the WordPress plugin should automatically
              add the tracking script.
          zero_commission_amount_referrals_enabled:
            type: boolean
            description: Whether or not to create a referral from a checkout when
              the resulting referral has a `commission_amount` of 0.
    affiliation_protocol_body:
      allOf:
      - "$ref": "#/components/schemas/affiliation_protocol_base"
      - properties:
          commission_structure:
            description: The commission structure to use when calculating referral
              commissions.
            allOf:
            - "$ref": "#/components/schemas/commission_structure_base"
    affiliation_protocol_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/affiliation_protocol_base"
      - properties:
          commission_structure:
            type: string
            description: The associated commission structure.
      - "$ref": "#/components/schemas/model_timestamps"
    affiliation_request_body:
      allOf:
      - properties:
          bio:
            type: string
            description: A short blurb from this affiliate describing how they will
              promote this store.
          email:
            type: string
            description: The affiliate's email address.
          first_name:
            type: string
            description: The affiliate's first name.
          last_name:
            type: string
            nullable: true
            description: The affiliate's last name.
          payout_email:
            type: string
            nullable: true
            description: The affiliate's payout email address.
          url:
            type: string
            nullable: true
            description: The primary website or social media account of the affiliate.
      - "$ref": "#/components/schemas/model_metadata"
    affiliation_request_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/affiliation_request_body"
      - properties:
          portal_url:
            type: string
            nullable: true
            description: A URL that will redirect to this affiliation request's correct
              portal page (hosted or external).
          status:
            type: string
            description: The current status of this affiliation request, which can
              be one of `approved`, `denied`, or `pending`.
          used:
            type: boolean
            description: Whether or not the request has been used to register an affiliate.
      - "$ref": "#/components/schemas/model_timestamps"
    auto_fee_base:
      properties:
        enabled:
          type: boolean
          description: Whether the auto fee is enabled.
        amount_adjustment:
          type: integer
          nullable: true
          description: The amount in cents to be added or subtracted from subtotal
            of applicable checkout
        discount:
          type: boolean
          description: Whether this auto fee is a discount (subtracted from total)
            or a fee (added to total).
        end_at:
          type: integer
          nullable: true
          description: Time at which the auto fee becomes inactive. Measured in seconds
            since the Unix epoch.
        metadata:
          type: object
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
        name:
          type: string
          description: The name of the auto fee.
        percent_adjustment:
          type: number
          format: float
          nullable: true
          description: The percentage to be added or subtracted from subtotal of applicable
            checkout.
        rule_string:
          type: string
          nullable: true
          description: The rule string that determines when this auto fee applies.
            Uses the `auto_fees__line_item` rule schema.
        start_at:
          type: integer
          description: Time at which the auto fee becomes active. Measured in seconds
            since the Unix epoch.
    auto_fee_body:
      allOf:
      - "$ref": "#/components/schemas/auto_fee_base"
    auto_fee_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/auto_fee_base"
      - properties:
          currency:
            type: string
            description: Three-letter ISO currency code, in lowercase.
          expired:
            type: boolean
            description: Whether the auto fee has expired.
          ongoing:
            type: boolean
            description: Whether the auto fee is currently active.
      - "$ref": "#/components/schemas/model_discarded_timestamp"
      - "$ref": "#/components/schemas/model_timestamps"
    balance_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - properties:
          amount:
            type: integer
            description: The total balance amount for this customer in this currency.
          currency:
            type: string
            description: Three-letter ISO currency code, in lowercase.
          balance_transactions:
            type: object
            nullable: true
            description: The associated balance transactions.
          customer:
            type: string
            description: The associated customer.
      - "$ref": "#/components/schemas/model_timestamps"
    balance_transaction_base:
      properties:
        amount:
          type: integer
          description: The amount of the transaction. A negative value is a credit
            for the customerâ€™s balance, and a positive value is a debit to the customerâ€™s
            balance.
        currency:
          type: string
          description: Three-letter ISO currency code, in lowercase.
    balance_transaction_body:
      allOf:
      - "$ref": "#/components/schemas/balance_transaction_base"
      - properties:
          customer:
            type: string
            description: The UUID of the customer.
    balance_transaction_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/balance_transaction_base"
      - properties:
          balance:
            type: string
            description: The associated balance.
          customer:
            type: string
            description: The associated customer.
          ending_balance_amount:
            type: integer
            description: The balance amount after the transaction was applied.
          checkout:
            type: string
            nullable: true
            description: The associated checkout.
          transaction_type:
            type: string
            description: One of either `adjustment`, `applied_to_checkout`, `checkout_below_currency_minimum`,
              or `checkout_credit`. Balance transactions created through the API are
              always `adjustment` transactions.
      - "$ref": "#/components/schemas/model_timestamps"
    brand_base:
      properties:
        color:
          type: string
          nullable: true
          description: The primary brand color. Used for buttons, links, loading states,
            etc.
        email:
          type: string
          nullable: true
          description: The email address that will be shown to customers for support,
            on statements, etc.
        phone:
          type: string
          nullable: true
          description: The phone number that will be shown to customers for support,
            on statements, etc.
        website:
          type: string
          nullable: true
          description: The website that will be shown to customers for support, on
            statements, etc.
    brand_body:
      allOf:
      - "$ref": "#/components/schemas/brand_base"
      - properties:
          logo:
            type: string
            description: The UUID of the media.
          address:
            description: The associated address.
            allOf:
            - "$ref": "#/components/schemas/address_body"
    brand_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/brand_base"
      - properties:
          logo:
            type: string
            nullable: true
            description: The associated media.
          address:
            type: string
            nullable: true
            description: The associated address.
      - "$ref": "#/components/schemas/model_timestamps"
    bulk_action_body:
      allOf:
      - properties:
          action_type:
            type: string
            description: The type of action to be performed. Currently only supports
              `delete_products`.
          record_ids:
            type: array
            description: The id of records to perform the bulk action on.
    bulk_action_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/bulk_action_body"
      - properties:
          skipped_record_ids:
            type: array
            description: The array of ids that are skipped due to the action not being
              applicable to them.
          status:
            type: string
            description: |
              The status of the bulk action. Possible values include:
              - `completed`: The bulk action has been executed, possibly with some errors.
              - `invalid`: The bulk action contains no record_ids that support the given action.
              - `pending`: The bulk action is pending and not yet processed.
              - `processing`: The bulk action is currently being processed.
              - `succeeded`: The bulk action has succeeded with no errors for all the supporting record_ids.
      - "$ref": "#/components/schemas/model_timestamps"
    bump_base:
      allOf:
      - properties:
          amount_off:
            type: integer
            nullable: true
            description: Amount (in the `currency` of the price) that will be taken
              off line items associated with this bump.
          archived:
            type: boolean
            description: Whether or not this bump is archived.
          auto_apply:
            type: boolean
            description: Whether or not this bump should be automatically applied
              to applicable checkouts. If `false`, this bump must be manually added
              to a `line_item`.
          filter_match_type:
            type: string
            nullable: true
            description: The matching strategy to use when filtering bumps â€“ can be
              `null` or one of `all`, `any`, `none`. If `null`, the bump will not
              be filtered and will be applicable to all line items.
          filter_price_ids:
            type: array
            description: The prices to filter this bump by.
          filter_product_ids:
            type: array
            description: The products to filter this bump by.
          name:
            type: string
            nullable: true
            description: A name for this bump that will be visible to customers.
          percent_off:
            type: number
            nullable: true
            description: Percent that will be taken off line items associated with
              this bump.
          priority:
            type: integer
            description: The priority of this bump in relation to other bumps. Must
              be in the range of `1` - `5` with `5` being the highest priority and
              `1` being the lowest.
      - "$ref": "#/components/schemas/model_metadata"
    bump_body:
      allOf:
      - "$ref": "#/components/schemas/bump_base"
      - properties:
          price:
            type: string
            description: The UUID of the price.
    bump_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/bump_base"
      - properties:
          archived_at:
            type: integer
            nullable: true
            description: Time at which the object was archived. Measured in seconds
              since the Unix epoch.
          price:
            type: string
            description: The associated price.
      - "$ref": "#/components/schemas/model_discarded_timestamp"
      - "$ref": "#/components/schemas/model_timestamps"
    cancellation_act_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - properties:
          comment:
            type: string
            nullable: true
            description: The comment left by the customer when they canceled the subscription.
          coupon_applied:
            type: boolean
            description: Whether or not the preservation coupon was applied to the
              subscription when it was preserved.
          performed_at:
            type: integer
            description: Time at which the cancellation act was performed. Measured
              in seconds since the Unix epoch.
          preserved:
            type: boolean
            description: Whether or not this subscription was preserved when the customer
              went to cancel it.
          cancellation_reason:
            type: string
            description: The associated subscription.
          subscription:
            type: string
            description: The associated subscription.
      - "$ref": "#/components/schemas/model_timestamps"
    cancellation_reason_body:
      properties:
        archived:
          type: boolean
          description: Whether or not this cancellation reason is archived.
        comment_enabled:
          type: boolean
          description: Whether or not this cancellation reason should prompt the user
            for a comment.
        comment_prompt:
          type: string
          nullable: true
          description: A breif customer-facing prompt for more detail that will be
            shown when this cancellation reason is selected.
        coupon_enabled:
          type: boolean
          description: Whether or not this cancellation reason should offer the `subscription_protocol.cancellation_prevention_coupon`
            to the customer to preserve the subscription.
        label:
          type: string
          description: The customer-facing label for this cancellation reason.
        position:
          type: integer
          nullable: true
          description: The ordering position of this cancellation reason when displayed
            to customers.
    cancellation_reason_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/cancellation_reason_body"
      - properties:
          archived_at:
            type: integer
            nullable: true
            description: Time at which the object was archived. Measured in seconds
              since the Unix epoch.
      - "$ref": "#/components/schemas/model_discarded_timestamp"
      - "$ref": "#/components/schemas/model_timestamps"
    card_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - properties:
          brand:
            type: string
            description: The brand of the card, which can be `amex`, `diners`, `discover`,
              `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.
          exp_month:
            type: integer
            description: Two-digit number representing the cardâ€™s expiration month.
          exp_year:
            type: integer
            description: Four-digit number representing the cardâ€™s expiration year.
          last4:
            type: string
            description: The last four digits of the card.
          wallet_type:
            type: string
            nullable: true
            description: If this card is part of a card wallet, this will be set to
              the type of wallet. The current types are `amex_express_checkout`, `apple_pay`,
              `google_pay`, `masterpass`, `samsung_pay`, or `visa_checkout`.
      - "$ref": "#/components/schemas/model_timestamps"
    charge_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - properties:
          amount:
            type: integer
            description: The amount in cents that was charged, represented as a whole
              integer. For example `9900` is equivalent to `$99`.
          currency:
            type: string
            description: Three-letter ISO currency code, in lowercase.
          disputed_amount:
            type: integer
            description: The amount in cents that has been disputed.
          external_charge_id:
            type: string
            description: The external processor ID representing this charge.
          fully_refunded:
            type: boolean
            description: Whether or not this charge has been refunded completely.
          live_mode:
            type: boolean
            description: Set to `true` if this charge is in live mode, and set to
              `false` if it is in test mode.
          refunded_amount:
            type: integer
            description: Amount in cents refunded (can be less than the amount attribute
              on the charge if a partial refund was issued).
          customer:
            type: string
            nullable: true
            description: The associated customer.
          checkout:
            type: string
            nullable: true
            description: The associated checkout.
          disputes:
            type: object
            nullable: true
            description: A list of associated disputes.
          payment_intent:
            type: string
            description: The associated payment intent.
          payment_method:
            type: string
            nullable: true
            description: The associated payment method.
          refunds:
            type: object
            nullable: true
            description: A list of associated refunds.
      - "$ref": "#/components/schemas/model_timestamps"
    checkout_base:
      allOf:
      - properties:
          abandoned_checkout_enabled:
            type: boolean
            nullable: true
            description: If set to `true` abandonded checkout reminder emails will
              be sent to the customer.
          billing_matches_shipping:
            type: boolean
            description: If set to `true` the shipping address will be used for the
              billing address.
          currency:
            type: string
            description: Three-letter ISO currency code, in lowercase. This value
              will match the `Account` currency.
          email:
            type: string
            nullable: true
            description: The email of the customer. If customers exists with this
              email, the most recently active/updated customer will be associated.
              If no customers exist with this email, a new customer will be created.
              If a `customer_id` is also passed then this will take precedence and
              the customer will not be looked up by email.
          external_url:
            type: string
            nullable: true
            description: If set, this URL will be used whenever redirecting to the
              external checkout portal. If not set, the default `external_url` from
              the `CheckoutPortalProtocol` will be used.
          first_name:
            type: string
            nullable: true
            description: The customerâ€™s first name.
          ip_address:
            type: string
            nullable: true
            description: The IP address of the customer for this checkout.
          group_key:
            type: string
            nullable: true
            description: A key used to retrieve groups of checkouts dynamically from
              a static string.
          last_name:
            type: string
            nullable: true
            description: The customerâ€™s last name.
          live_mode:
            type: boolean
            description: Set to `true` if this checkout is in live mode, and set to
              `false` if it is in test mode.
          name:
            type: string
            nullable: true
            description: The customerâ€™s full name or business name. If set, this will
              take precedence over the separate `first_name` and `last_name` attributes.
          tax_behavior:
            type: string
            description: The tax behavior for this checkout. One of `exclusive` or
              `inclusive`.
          tax_enabled:
            type: boolean
            description: Whether or not tax is enabled for this checkout. This will
              default to the account's `tax_protocol.tax_enabled` value when the checkout
              is created.
      - "$ref": "#/components/schemas/model_metadata"
    checkout_body:
      allOf:
      - "$ref": "#/components/schemas/checkout_base"
      - properties:
          billing_address:
            description: The billing address for this checkout.
            allOf:
            - "$ref": "#/components/schemas/address_body"
          customer:
            type: string
            description: The UUID of the customer. (The customer can't be changed
              once the checkout has been paid.)
          discount:
            description: The parameters of the discount to be applied to this checkout.
            allOf:
            - "$ref": "#/components/schemas/discount_body"
          line_items:
            type: array
            description: A list of this checkout's line items. (The line items can't
              be updated through the checkout once it has been paid.)
            items:
              "$ref": "#/components/schemas/line_item_body"
          refresh_line_items:
            type: boolean
            nullable: true
            description: When set to true the prices and variants that are associated
              with each line item will be refreshed to reference the most recent version.
              (This should be used if you are receiving an error when trying to finalize
              a checkout that is referencing old price versions and/or variant versions.)
          selected_shipping_choice:
            type: string
            description: The UUID of the shipping choice.
          shipping_address:
            description: The shipping address for this checkout.
            allOf:
            - "$ref": "#/components/schemas/address_body"
          tax_identifier:
            description: The tax identifier to set for this checkout.
            allOf:
            - "$ref": "#/components/schemas/tax_identifier_body"
    checkout_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/checkout_base"
      - properties:
          amount_due:
            type: integer
            description: Total amount due after all adjustments (i.e. trials, credits,
              proration).
          applied_balance_amount:
            type: integer
            description: The customer balance amount that was applied to this checkout.
          available_countries:
            type: array
            description: A list of countries available for this checkout, represented
              in the two-letter (ISO 3166-1 alpha-2) format.
          billing_address:
            type: string
            nullable: true
            description: The associated billing address.
          charges:
            type: object
            nullable: true
            description: A list of associated charges.
          credited_balance_amount:
            type: integer
            description: The amount the customer's balance was credited from this
              checkout.
          current_payment_intent:
            type: string
            nullable: true
            description: The current payment intent to be used to pay the checkout.
              (This will only be set once the checkout has been finalized.)
          current_upsell:
            type: string
            nullable: true
            description: The upsell to be shown to the customer. (This will only be
              set once the checkout has been paid and an upsell funnel is set on the
              checkout.)
          customer:
            type: string
            nullable: true
            description: The associated customer. (This will only be set once the
              checkout has been finalized.)
          discount:
            type: string
            nullable: true
            description: The associated discount.
          discount_amount:
            type: integer
            description: Total discount amount of all line items.
          free_shipping_choice_shortage_amount:
            type: integer
            nullable: true
            description: The amount that needs to be added to the checkout to qualify
              for free shipping. If `null`, then a free shipping choice is not available
              or it has already qualified.
          full_amount:
            type: integer
            description: The full amount to be charged across all periods.
          g_weight:
            type: number
            description: Total weight of the entire checkout in grams.
          inherited_billing_address:
            type: string
            nullable: true
            description: The inherited billing address of the checkout or customer.
              This is controlled by the `inherit_customer_enabled` attribute on the
              account's order protocol.
          inherited_email:
            type: string
            nullable: true
            description: The inherited email of the checkout or customer. This is
              controlled by the `inherit_customer_enabled` attribute on the account's
              order protocol.
          inherited_name:
            type: string
            nullable: true
            description: The inherited name of the checkout or customer. This is controlled
              by the `inherit_customer_enabled` attribute on the account's order protocol.
          inherited_phone:
            type: string
            nullable: true
            description: The inherited phone of the checkout or customer. This is
              controlled by the `inherit_customer_enabled` attribute on the account's
              order protocol.
          inherited_shipping_address:
            type: string
            nullable: true
            description: The inherited shipping address of the checkout or customer.
              This is controlled by the `inherit_customer_enabled` attribute on the
              account's order protocol.
          inherited_tax_identifier:
            type: string
            nullable: true
            description: The inherited tax identifier of the checkout or customer.
              This is controlled by the `inherit_customer_enabled` attribute on the
              account's order protocol.
          invoice:
            type: string
            nullable: true
            description: The associated invoice.
          line_items:
            type: object
            nullable: true
            description: A list of associated line items.
          manual_charges:
            type: object
            nullable: true
            description: A list of associated manual charges.
          manual_payment:
            type: boolean
            description: Whether or not this checkout has been finalized with the
              `manual_payment=true` option.
          manual_payment_method:
            type: string
            nullable: true
            description: The associated manual payment method.
          remaining_amount_due:
            type: integer
            description: The remaining amount that is due for this checkout â€“ the
              `amount_due` - `paid_amount`.
          net_paid_amount:
            type: integer
            description: The net amount that has been paid for this checkout â€“ the
              `paid_amount` minus the `refunded_amount`.
          order:
            type: string
            nullable: true
            description: The associated order.
          paid_amount:
            type: integer
            description: The total amount that has been paid for this checkout â€“ the
              sum of charges and manual charges.
          paid_at:
            type: integer
            nullable: true
            description: Time at which the object was paid. Measured in seconds since
              the Unix epoch.
          payment_failures:
            type: object
            nullable: true
            description: A list of associated payment failures.
          payment_method_required:
            type: boolean
            description: Whether or not a payment method is required for this checkout.
              If false, the checkout will immediately transition to the `paid` state
              when finalized.
          portal_url:
            type: string
            nullable: true
            description: A URL that will redirect to this checkout's correct portal
              page (hosted or external).
          processor_data:
            type: object
            description: All of the additional data necessary to capture payment with
              each processor.
          proration_amount:
            type: integer
            description: Total amount to be prorated from this checkout.
          purchases:
            type: object
            nullable: true
            description: The associated purchases.
          recommended_bumps:
            type: object
            nullable: true
            description: A list of recommended bumps for this checkout.
          referral:
            type: string
            nullable: true
            description: The associated referral.
          refunded_amount:
            type: integer
            description: The total amount that has been refunded for this checkout
              â€“ the sum of refunds.
          reusable_payment_method_required:
            type: boolean
            description: Whether or not a reusable payment method is required for
              this checkout.
          selected_shipping_choice_required:
            type: boolean
            description: Whether or not a shipping choice must be selected for this
              checkout.
          selected_shipping_choice:
            type: string
            nullable: true
            description: The selected shipping choice.
          shipping_address:
            type: string
            nullable: true
            description: The associated shipping address.
          shipping_address_accuracy_requirement:
            type: string
            nullable: true
            description: The required level of accuracy for the shipping address â€“
              one of `full`, `tax`, or `none`.
          shipping_amount:
            type: integer
            description: Total shipping amount for the checkout.
          shipping_choices:
            type: object
            nullable: true
            description: A list of available shipping choices for this checkout.
          shipping_enabled:
            type: boolean
            description: Whether or not this checkout has products with `shipping_enabled=true`.
          shipping_tax_amount:
            type: number
            description: Total tax from shipping.
          shipping_tax_rate:
            type: number
            description: The tax rate applied to shipping.
          status:
            type: string
            description: The current status of this checkout, which can be one of
              `canceled`, `draft`, `finalized`, `paid`, `payment_intent_canceled`,
              `payment_failed`, or `processing`.
          subtotal_amount:
            type: integer
            description: Total of all line items and their fees before discounts or
              taxes are applied.
          tax_amount:
            type: integer
            description: Total tax amount of all line items.
          tax_breakdown:
            type: array
            description: The tax rate breakdown for this checkout.
          tax_label:
            type: string
            nullable: true
            description: The type of tax that is applied to this checkout. For example,
              in the EU this value will be `VAT` and in the US this value will be
              `Tax`.
          tax_status:
            type: string
            description: The status of tax calculations for this checkout. One of
              `address_invalid`, `calculated`, `disabled`, `estimated`, `reverse_charged`,
              or `tax_zone_not_found`.
          tax_identifier:
            type: string
            nullable: true
            description: The associated tax identifier.
          total_amount:
            type: integer
            description: Total of all line items after discounts and taxes are applied.
          total_savings_amount:
            type: integer
            description: The total amount in cents that was saved on this checkout
              taking into account all negative fees, discounts, and all price `scratch_amount`
              values.
          trial_amount:
            type: integer
            description: The total amount in cents that is removed from this checkout
              due to trial periods.
          upsells_expire_at:
            type: integer
            nullable: true
            description: The time at which upsells will expire for this checkout.
              Measured in seconds since the Unix epoch.
          upsell_funnel:
            type: string
            nullable: true
            description: The associated upsell funnel.
      - "$ref": "#/components/schemas/model_timestamps"
    checkout_portal_protocol_body:
      properties:
        back_url:
          type: string
          nullable: true
          description: The back URL that is shown to customers on the checkout portal.
            This can be overridden by a `back_url` on a `Checkout`.
        external_enabled:
          type: boolean
          description: Whether or not an external checkout portal is being used.
        external_url:
          type: string
          nullable: true
          description: If `external_enabled=true`, where is the external portal hosted?
            If empty, the store's URL is used.
        manual_checkout_finalize_enabled:
          type: boolean
          description: Whether or not finalizing a checkout with `manual_payment=true`
            is allowed.
        thank_you_heading:
          type: string
          nullable: true
          description: The heading that is shown to customers on the order thank you
            page.
        thank_you_description:
          type: string
          nullable: true
          description: The description that is shown to customers on the order thank
            you page.
        wordpress_plugin_enabled:
          type: boolean
          description: Whether or not the WordPress plugin is hosting the checkout
            portal.
    checkout_portal_protocol_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/checkout_portal_protocol_body"
      - "$ref": "#/components/schemas/model_timestamps"
    click_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - properties:
          anonymous_id:
            type: string
            description: The anonymous ID used for identifying a customer across multiple
              clicks.
          converted:
            type: boolean
            description: Whether or not this click is associated with any referrals.
          domain:
            type: string
            description: The domain of the click.
          expires_at:
            type: integer
            description: Time at which the click expires. Measured in seconds since
              the Unix epoch.
          referrer:
            type: string
            nullable: true
            description: The referring URL that the customer came from.
          url:
            type: string
            description: The URL where the click was tracked.
          affiliation:
            type: string
            description: The associated affiliation.
          previous_click:
            type: string
            nullable: true
            description: The associated previous click.
      - "$ref": "#/components/schemas/model_timestamps"
    commission_structure_base:
      properties:
        amount_commission:
          type: number
          nullable: true
          description: The default amount (in the `currency` of the store) of commission
            to be paid.
        percent_commission:
          type: number
          nullable: true
          description: The percentage of the checkout total to be paid to affiliates.
        recurring_commissions_enabled:
          type: boolean
          description: Whether or not to pay affiliates recurring commissions on subscriptions.
        recurring_commission_days:
          type: integer
          nullable: true
          description: The number of days to pay recurring commissions for.
        repeat_customer_commissions_enabled:
          type: boolean
          description: Whether or not to pay commissions to affiliates for repeat
            customers.
        repeat_customer_commission_days:
          type: integer
          nullable: true
          description: The number of days to pay commissions for repeat customers.
    coupon_base:
      allOf:
      - properties:
          archived:
            type: boolean
            description: Whether or not this coupon is archived.
          amount_off:
            type: integer
            nullable: true
            description: Amount (in the `currency` specified) that will be taken off
              the subtotal of any checkout.
          duration:
            type: string
            description: One of `forever`, `once`, and `repeating`. Describes how
              long a discount with this coupon will be applied. (The `repeating` and
              `forever` values only apply to subscriptions.)
            default: once
          duration_in_months:
            type: integer
            nullable: true
            description: If `duration` is `repeating`, the number of months the coupon
              applies. Null if coupon `duration` is `forever` or `once`.
          max_redemptions:
            type: integer
            nullable: true
            description: Maximum number of times this coupon can be redeemed in total
              across all customers.
          max_redemptions_per_customer:
            type: integer
            nullable: true
            description: Maximum number of times this coupon can be redeemed per customer.
          max_subtotal_amount:
            type: integer
            nullable: true
            description: The maximum `subtotal_amount` that is allowed for the coupon
              to be applicable to a checkout or subscription.
          min_subtotal_amount:
            type: integer
            nullable: true
            description: The minimum `subtotal_amount` that is required for the coupon
              to be applicable to a checkout or subscription.
          name:
            type: string
            description: Name of the coupon displayed to customers.
          percent_off:
            type: number
            nullable: true
            description: Percent that will be taken off the subtotal of any checkout.
              For example, a coupon with percent_off of `50` will make a $100 checkout
              $50 instead.
          product_ids:
            type: array
            description: An array of product IDs that this coupon applies to.
          redeem_by:
            type: integer
            nullable: true
            description: Date after which the coupon can no longer be redeemed.
      - "$ref": "#/components/schemas/model_metadata"
    coupon_body:
      allOf:
      - "$ref": "#/components/schemas/coupon_base"
      - properties:
          promotions:
            type: array
            description: A list of this product's promotions. (This can only be set
              when creating a new coupon.)
            items:
              "$ref": "#/components/schemas/promotion_body"
    coupon_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/coupon_base"
      - properties:
          archived_at:
            type: integer
            nullable: true
            description: Time at which the object was archived. Measured in seconds
              since the Unix epoch.
          currency:
            type: string
            description: Three-letter ISO currency code, in lowercase. This value
              will match the `Account` currency.
          discounts:
            type: object
            nullable: true
            description: A list of associated discounts (only redeemed discounts).
          expired:
            type: boolean
            description: Taking into account the above properties, whether this coupon
              can still be applied to a checkout.
          promotions:
            type: object
            nullable: true
            description: A list of associated promotions.
          times_redeemed:
            type: integer
            description: Number of times this coupon has been applied to a checkout
              and/or subscription.
      - "$ref": "#/components/schemas/model_discarded_timestamp"
      - "$ref": "#/components/schemas/model_timestamps"
    customer_base:
      properties:
        affiliation_expires_at:
          type: integer
          nullable: true
          description: Time at which the affiliation will expire.
        billing_matches_shipping:
          type: boolean
          description: If set to `true` the shipping address will be used for the
            billing address.
        email:
          type: string
          description: The customerâ€™s email address.
        first_name:
          type: string
          nullable: true
          description: The customerâ€™s first name.
        live_mode:
          type: boolean
          description: Set to `true` if this customer is in live mode, and set to
            `false` if it is in test mode.
        last_name:
          type: string
          nullable: true
          description: The customerâ€™s last name.
        name:
          type: string
          nullable: true
          description: The customerâ€™s full name or business name. If set, this will
            take precedence over the separate `first_name` and `last_name` attributes.
        phone:
          type: string
          nullable: true
          description: The customerâ€™s phone number.
        tax_enabled:
          type: boolean
          description: Whether or not tax should be calculated for checkouts associated
            with this customer.
        unsubscribed:
          type: boolean
          description: Set to `true` if this customer has unsubscribed from from opt-in
            emails (i.e. abandoned cart emails).
    customer_body:
      allOf:
      - "$ref": "#/components/schemas/customer_base"
      - properties:
          affiliation:
            type: string
            description: The affiliation associated with this customer.
          billing_address:
            description: The billing address for the customer.
            allOf:
            - "$ref": "#/components/schemas/address_body"
          default_payment_method:
            type: string
            description: The UUID of the default payment method.
          shipping_address:
            description: The shipping address for the customer.
            allOf:
            - "$ref": "#/components/schemas/address_body"
          tax_identifier:
            description: The tax identifier to set for this customer.
            allOf:
            - "$ref": "#/components/schemas/tax_identifier_body"
    customer_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/customer_base"
      - properties:
          first_name:
            type: string
            nullable: true
            description: The customerâ€™s first name.
          indexed:
            type: boolean
            description: Whether or not this customer is included in the `/customers`
              list endpoint. Only customers that have been manually created or have
              a purchase are indexed.
          last_name:
            type: string
            nullable: true
            description: The customerâ€™s last name.
          affiliation:
            type: object
            nullable: true
            description: The affiliation associated with this customer.
          balances:
            type: object
            nullable: true
            description: A list of this customer's balances.
          billing_address:
            type: string
            nullable: true
            description: The billing address for the customer.
          default_payment_method:
            type: string
            nullable: true
            description: The default payment method for the customer.
          licenses:
            type: object
            nullable: true
            description: A list of this customer's licenses.
          portal_url:
            type: string
            nullable: true
            description: A URL that will redirect to this customer's correct portal
              page (hosted or external).
          purchases:
            type: object
            nullable: true
            description: A list of this customer's purchases.
          shipping_address:
            type: string
            nullable: true
            description: The shipping address for the customer.
          tax_identifier:
            type: string
            nullable: true
            description: The associated tax identifier.
          reviews:
            type: object
            nullable: true
            description: A list of this customer's reviews.
      - "$ref": "#/components/schemas/model_timestamps"
    customer_link_body:
      properties:
        customer:
          type: string
          description: The UUID of the customer.
    customer_link_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - properties:
          customer:
            type: string
            description: The associated customer.
          expired:
            type: boolean
            description: Whether or not this customer link is valid.
          first_used_at:
            type: integer
            nullable: true
            description: Date when the customer link was first used.
      - "$ref": "#/components/schemas/model_timestamps"
    customer_notification_protocol_body:
      properties:
        free_order_enabled:
          type: boolean
          description: Whether or not order confirmation and subscription renewal
            emails will be sent to customers when the order is free.
        notifications_enabled:
          type: boolean
          description: Whether or not any notifications should be sent to customers.
            If `false` no notifications will be sent to customers and all other settings
            will be ignored.
        order_enabled:
          type: boolean
          description: Whether or not order confirmation emails will be sent to customers.
        payment_failure_enabled:
          type: boolean
          description: Whether or not subscription dunning emails will be sent to
            customers.
        purchase_enabled:
          type: boolean
          description: Whether or not product access emails will be sent to customers.
        refund_enabled:
          type: boolean
          description: Whether or not refund emails will be sent to customers.
        subscription_cancellation_enabled:
          type: boolean
          description: Whether or not subscription cancellation emails will be sent
            to customers.
        subscription_reminder_enabled:
          type: boolean
          description: Whether or not subscription reminder emails will be sent to
            customers.
        subscription_renewal_enabled:
          type: boolean
          description: Whether or not subscription renewal emails will be sent to
            customers.
        from_name:
          type: string
          nullable: true
          description: The from name to use when sending emails to customers.
        reply_to_email:
          type: string
          nullable: true
          description: The reply-to email address to use when sending emails to customers.
        upsell_accepted_enabled:
          type: boolean
          description: Whether or not post purchase offer accepted emails will be
            sent to customers.
    customer_notification_protocol_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/customer_notification_protocol_body"
      - "$ref": "#/components/schemas/model_timestamps"
    customer_portal_protocol_body:
      properties:
        back_url:
          type: string
          nullable: true
          description: The back URL that is shown to customers on the customer portal.
            This can be overridden by a `back_url` on a `CustomerPortalSession`.
        external_enabled:
          type: boolean
          description: Whether or not an external customer portal is being used.
        external_url:
          type: string
          nullable: true
          description: If `external_enabled=true`, where is the external portal hosted?
            If empty, the store's URL is used.
        login_enabled:
          type: boolean
          description: Whether or not customer's can login with their email and a
            verification code on the hosted customer portal. If disabled, the only
            way to authenticate a customer is with a `CustomerPortalSession`.
        privacy_url:
          type: string
          nullable: true
          description: The privacy policy link that is shown to customers on the customer
            portal.
        subscription_cancellations_enabled:
          type: boolean
          description: Whether or not customers can cancel subscriptions from the
            customer portal.
        subscription_updates_enabled:
          type: boolean
          description: Whether or not customers can make subscription changes from
            the customer portal.
        subscription_quantity_updates_enabled:
          type: boolean
          description: Whether or not customers can change subscription quantities
            from the customer portal.
        terms_url:
          type: string
          nullable: true
          description: The terms of service link that is shown to customers on the
            customer portal.
        wordpress_plugin_enabled:
          type: boolean
          description: Whether or not the WordPress plugin is hosting the customer
            portal.
    customer_portal_protocol_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/customer_portal_protocol_body"
      - "$ref": "#/components/schemas/model_timestamps"
    discount_body:
      properties:
        coupon:
          type: string
          description: The UUID of the coupon.
        promotion_code:
          type: string
          description: The customer-facing code that will be used to lookup the promotion.
    discount_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - properties:
          discount_amount:
            type: integer
            description: The total discount amount applied to the associated checkout.
          primary:
            type: boolean
            description: Whether or not this discount is a primary or secondary discount.
              Primary discounts are the first discount in a series of discounts when
              the associated coupon can be used multiple times. Secondary discounts
              are the subsequent discounts in the series.
          redeemable_status:
            type: string
            description: The status indicating if this discount can be redeemed (finalized
              with) or not and why. Possible values are `invalid`, `gone`, `expired`,
              `less_than_min_subtotal_amount`, greater_than_max_subtotal_amount`,
              `not_applicable`, `not_applicable_to_customer`, or `redeemable`.
          used_up:
            type: boolean
            description: Whether or not this discount has been used up. If not used
              up, this discount will create secondary discounts on future checkouts.
          checkout:
            type: string
            description: The associated checkout.
          coupon:
            type: string
            description: The associated coupon.
          customer:
            type: string
            nullable: true
            description: The associated customer.
          primary_discount:
            type: string
            nullable: true
            description: The associated primary discount.
          promotion:
            type: string
            nullable: true
            description: The associated promotion.
          secondary_discounts:
            type: object
            nullable: true
            description: The associated secondary discounts.
      - "$ref": "#/components/schemas/model_timestamps"
    display_currency_body:
      properties:
        currency:
          type: string
          description: Three-letter ISO currency code, in lowercase.
    display_currency_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/display_currency_body"
      - properties:
          current_exchange_rate:
            type: number
            description: The current exchange rate from the account's default currency
              to this display currency.
      - "$ref": "#/components/schemas/model_timestamps"
    dispute_base:
      allOf:
      - properties:
          amount:
            type: integer
            description: The amount in cents that is disputed, represented as a whole
              integer. For example `9900` is equivalent to `$99`.
          currency:
            type: string
            description: Three-letter ISO currency code, in lowercase.
          external_dispute_id:
            type: string
            description: The external processor ID representing this dispute.
          live_mode:
            type: boolean
            description: Set to `true` if this dispute is in live mode, and set to
              `false` if it is in test mode.
          processor_type:
            type: string
            description: The type of associated processor â€“ one of `mock`, `mollie`,
              `paypal`, `paystack`, or `stripe`.
          status:
            type: string
            description: The current status of this dispute, which can be one of `pending`,
              `won`, or `lost`.
    dispute_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/dispute_base"
      - properties:
          charge:
            type: string
            description: The associated charge.
      - "$ref": "#/components/schemas/model_timestamps"
    download_base:
      properties:
        alt:
          type: string
          nullable: true
          description: The HTML alt attribute for the download.
        archived:
          type: boolean
          description: Whether or not this download is archived.
        name:
          type: string
          nullable: true
          description: The name of this download which will be visible to customers.
            This is required if a `url` is used instead of attaching a `Media` record.
        title:
          type: string
          nullable: true
          description: The HTML title attribute for the download.
        url:
          type: string
          nullable: true
          description: Instead of attaching a `Media` record a public URL can be set.
            If set, customers will be directed to this URL.
    download_body:
      allOf:
      - "$ref": "#/components/schemas/download_base"
      - properties:
          media:
            type: string
            description: The UUID of the media.
          product:
            type: string
            description: The UUID of the product.
    download_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/download_base"
      - properties:
          archived_at:
            type: integer
            nullable: true
            description: Time at which the object was archived. Measured in seconds
              since the Unix epoch.
          media:
            type: string
            nullable: true
            description: The associated media.
          product:
            type: string
            description: The associated product.
      - "$ref": "#/components/schemas/model_timestamps"
    event_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - properties:
          account:
            type: string
            description: The associated account.
          created_at:
            type: integer
            description: Time at which the object was created. Measured in seconds
              since the Unix epoch.
          type:
            type: string
            description: Description of the event (e.g., subscription.updated or charge.updated).
    export_body:
      allOf:
      - properties:
          type:
            type: string
            description: The type of export â€“ one of `charges`, `coupons`, `customers`,
              `orders`, `prices`, `promotions`, `refunds`, `subscriptions`.
          email:
            type: string
            description: The email where the export will be sent.
    export_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/export_body"
      - properties:
          file_url:
            type: string
            nullable: true
            description: The URL for accessing the export file.
          status:
            type: string
            description: The status of the export â€“ one of `pending`, `processed`,
              or `sent`.
          record_count:
            type: number
            description: The number of records that were exported.
      - "$ref": "#/components/schemas/model_timestamps"
    fee_base:
      properties:
        amount:
          type: integer
          description: The amount in cents to be added or subtracted, represented
            as an integer. For example `9900` is equivalent to `$99`.
        description:
          type: string
          description: A short description of the fee.
    fee_body:
      allOf:
      - "$ref": "#/components/schemas/fee_base"
      - properties:
          line_item:
            type: string
            description: The UUID of the line_item.
    fee_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/fee_base"
      - properties:
          fee_type:
            type: string
            description: The type of fee â€“ one of `manual` or `bump`.
          line_item:
            type: string
            description: The associated line_item.
      - "$ref": "#/components/schemas/model_timestamps"
    fulfillment_base:
      allOf:
      - properties:
          notifications_enabled:
            type: boolean
            description: Whether or not notifications should be sent to customers
              when fulfillments are created and updated.
          shipment_status:
            type: string
            description: The current shipment status of this fulfillment â€“ one of
              `unshippable`, `unshipped`, `shipped`, or `delivered`.
      - "$ref": "#/components/schemas/model_metadata"
    fulfillment_body:
      allOf:
      - "$ref": "#/components/schemas/fulfillment_base"
      - properties:
          order:
            type: string
            description: The UUID of the order.
          fulfillment_items:
            type: array
            description: A list of this fulfillement's items.
            items:
              "$ref": "#/components/schemas/fulfillment_item_body"
          trackings:
            type: array
            description: A list of this fulfillement's trackings.
            items:
              "$ref": "#/components/schemas/tracking_body"
    fulfillment_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/fulfillment_base"
      - properties:
          g_weight:
            type: number
            description: Total weight of the entire fulfillment in grams.
          number:
            type: string
            description: The unique identifier for this fulfillment that is auto generated
              based on this account's order protocol.
          order:
            type: string
            description: The associated order.
          fulfillment_items:
            type: object
            nullable: true
            description: A list of associated fulfillment items.
          trackings:
            type: object
            nullable: true
            description: A list of associated trackings.
      - "$ref": "#/components/schemas/model_timestamps"
    fulfillment_item_base:
      allOf:
      - properties:
          quantity:
            type: integer
            description: The quantity of products being fulfilled. This must be less
              than or equal to the remaining unfulfilled quantity of the associated
              line item.
    fulfillment_item_body:
      allOf:
      - "$ref": "#/components/schemas/fulfillment_item_base"
      - properties:
          line_item:
            type: string
            description: The UUID of the line item.
    fulfillment_item_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/fulfillment_item_base"
      - properties:
          g_weight:
            type: number
            description: Total weight of all items (quantity * unit_g_weight) in grams.
          unit_g_weight:
            type: number
            description: Total weight of the product in grams.
          fulfillment:
            type: string
            description: The associated fulfillment.
          line_item:
            type: string
            description: The associated line item.
      - "$ref": "#/components/schemas/model_timestamps"
    product_import_body:
      allOf:
      - "$ref": "#/components/schemas/product_body"
      - properties:
          prices:
            type: array
            description: Array of prices to create for this product.
            items:
              "$ref": "#/components/schemas/price_base"
          product_medias:
            type: array
            description: Array of product media to attach to this product.
            items:
              type: object
              properties:
                url:
                  type: string
                  description: The URL of the media to attach.
    import_products_body:
      properties:
        data:
          type: array
          description: Array of products to import.
          items:
            "$ref": "#/components/schemas/product_import_body"
    import_coupons_body:
      properties:
        data:
          type: array
          description: Array of coupons to import
          items:
            "$ref": "#/components/schemas/coupon_body"
    import_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - properties:
          import_type:
            type: string
            description: The type of record imported â€“ one of `customer`, `product`,
              `coupon`, `purchase`, or `subscription`.
          import_rows:
            type: array
            description: A list of associated import rows.
          rows_imported:
            type: integer
            description: The number of rows successfully imported.
          status:
            type: string
            description: The status of the import â€“ one of `completed`, `invalid`,
              `pending`, or `processing`.
      - "$ref": "#/components/schemas/model_timestamps"
    import_row_base:
      properties:
        failure_reason:
          type: string
          nullable: true
          description: The reason for the import failure, if applicable.
        import_data:
          type: object
          description: The data to be imported.
        import_row_type:
          type: string
          description: The type of record to import â€“ one of `coupon` or `product`
        status:
          type: string
          description: The status of the import row â€“ one of `pending`, `succeeded`,
            or `failed`.
    import_row_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/import_row_base"
      - properties:
          import:
            type: string
            description: The UUID of associated import.
      - "$ref": "#/components/schemas/model_timestamps"
    invoice_body:
      allOf:
      - properties:
          automatic_collection:
            type: boolean
            description: Whether or not the invoice should be paid automatically using
              one of the customer's payment methods. The specific payment method will
              need to passed to the `/open` endpoint.
          due_date:
            type: integer
            nullable: true
            description: The date on which payment for this invoice is due. Measured
              in seconds since the Unix epoch.
          footer:
            type: string
            nullable: true
            description: Additional footer text to be displayed on the invoice.
          issue_date:
            type: integer
            nullable: true
            description: The date on which the invoice was issued. Measured in seconds
              since the Unix epoch.
          live_mode:
            type: boolean
            description: Whether or not the invoice is in live mode.
          memo:
            type: string
            nullable: true
            description: Additional memo text to be displayed on the invoice.
          notifications_enabled:
            type: boolean
            description: Whether or not notifications should be sent to customers
              when an invoice is opened and when it reaches its due date.
      - "$ref": "#/components/schemas/model_metadata"
    invoice_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/invoice_body"
      - properties:
          notification_sent_at:
            type: integer
            nullable: true
            description: The time at which the invoice notification was sent. Measured
              in seconds since the Unix epoch.
          order_number:
            type: string
            nullable: true
            description: The order number associated with this invoice.
          portal_url:
            type: string
            nullable: true
            description: A URL that will redirect to this invoice's correct portal
              page (hosted or external).
          reminder_notification_sent_at:
            type: integer
            nullable: true
            description: The time at which the reminder notification was sent. Measured
              in seconds since the Unix epoch.
          status:
            type: string
            description: The current status of this invoice, which can be one of `draft`,
              `open`, `paid` or void.
          checkout:
            type: string
            description: The associated checkout.
      - "$ref": "#/components/schemas/model_timestamps"
    license_base:
      properties:
        activation_limit:
          type: integer
          nullable: true
          description: The max number of activations allowed. If set to `null` then
            unlimited activations are allowed.
        key:
          type: string
          description: The unique identifier for this license. The default generated
            value is a UUID, but this can be set to any unique value within the scope
            of this account.
    license_body:
      allOf:
      - "$ref": "#/components/schemas/license_base"
      - properties:
          purchase:
            type: string
            description: The UUID of the purchase.
    license_base_response:
      allOf:
      - "$ref": "#/components/schemas/license_base"
      - properties:
          activations_count:
            type: integer
            description: The current number of activations.
          revokes_at:
            type: integer
            nullable: true
            description: Time at which the license will be revoked. Measured in seconds
              since the Unix epoch.
          status:
            type: string
            description: The status of this license which is one of `active`, `inactive`,
              or `revoked`. If the associated purchase is revoked then the license
              will be `revoked`. If the license has one or more activations then it
              will be `active`, otherwise it will be `inactive`.
    license_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/license_base_response"
      - properties:
          customer:
            type: string
            description: The associated customer.
          purchase:
            type: string
            description: The associated purchase.
          activations:
            type: object
            nullable: true
            description: The associated activations.
      - "$ref": "#/components/schemas/model_timestamps"
    line_item_base:
      properties:
        ad_hoc_amount:
          type: integer
          nullable: true
          description: The amount to use for this line item when the associated price
            is `ad_hoc=true`.
        quantity:
          type: integer
          description: The quantity of products being purchased.
        note:
          type: string
          nullable: true
          description: A custom note for this line item. Useful for adding context
            or special instructions related to the product or purchase.
    line_item_body:
      allOf:
      - "$ref": "#/components/schemas/line_item_base"
      - properties:
          bump:
            type: string
            description: The UUID of the bump.
          checkout:
            type: string
            description: The UUID of the checkout.
          price:
            type: string
            description: The UUID of the price.
          upsell:
            type: string
            description: The UUID of the upsell.
          variant:
            type: string
            description: The UUID of the variant.
    line_item_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/line_item_base"
      - properties:
          bump:
            type: string
            nullable: true
            description: The associated bump.
          checkout:
            type: string
            description: The associated checkout.
          discount_amount:
            type: integer
            description: Total discount amount.
          fees_amount:
            type: integer
            description: The total amount of fees applied to this line item.
          full_amount:
            type: integer
            description: The full amount to be charged across all periods.
          fulfilled_quantity:
            type: integer
            description: The quantity of products that have been fulfilled.
          g_weight:
            type: number
            description: Total weight of all items (quantity * unit_g_weight) in grams.
          locked:
            type: boolean
            description: Whether or not this line item is locked. If locked, it cannot
              be edited or deleted. Line items are locked when an invoice is opened.
          price:
            type: string
            description: The associated price.
          unit_g_weight:
            type: number
            description: Total weight of the product in grams.
          purchasable_status:
            type: string
            description: The status indicating if this line item can be purchased
              (finalized with) or not and why. Possible values are `price_gone`, `price_old_version`,
              `variant_mising`, `variant_gone`, `variant_old_version`, `out_of_stock`,
              `exceeds_purchase_limit`, or `purchasable`.
          scratch_amount:
            type: integer
            description: The amount in cents that should be shown as the original
              amount before any price reductions, also known as the pre-sale price.
          stock_held:
            type: boolean
            description: Whether or not stock is being held for this line item. (This
              only applies to the quantity that has not been fulfilled.)
          subtotal_amount:
            type: integer
            description: Total before any discounts or taxes are applied.
          swap:
            type: string
            nullable: true
            description: The associated swap.
          tax_amount:
            type: integer
            description: Total tax amount.
          tax_rate:
            type: number
            description: The tax rate for this line item.
          total_amount:
            type: integer
            description: Total after discounts and taxes are applied.
          total_savings_amount:
            type: integer
            description: The total amount in cents that was saved on this line item
              taking into account all negative fees, discounts, and all price `scratch_amount`
              values.
          trial:
            type: boolean
            description: Set to `true` if this line item is for a price that has a
              trial.
          trial_amount:
            type: integer
            description: The total amount in cents that is removed from this line
              item due to a trial period.
          upsell:
            type: string
            nullable: true
            description: The associated upsell.
          variant:
            type: string
            nullable: true
            description: The associated variant.
          variant_options:
            type: array
            nullable: true
            description: An array of the associated variant's options.
          variant_option_names:
            type: array
            nullable: true
            description: An array of the associated product's variant option names.
      - "$ref": "#/components/schemas/model_timestamps"
    manual_charge_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - properties:
          amount:
            type: integer
            description: The amount in cents that was charged, represented as a whole
              integer. For example `9900` is equivalent to `$99`.
          currency:
            type: string
            description: Three-letter ISO currency code, in lowercase.
          checkout:
            type: string
            nullable: true
            description: The associated checkout.
          manual_payment_method:
            type: string
            nullable: true
            description: The associated manual payment method.
      - "$ref": "#/components/schemas/model_timestamps"
    manual_payment_method_body:
      properties:
        archived:
          type: boolean
          description: Whether or not this manual payment method is archived.
        description:
          type: string
          nullable: true
          description: The description of this payment method that will be shown in
            the checkout.
        instructions:
          type: string
          nullable: true
          description: The instructions that you want your customers to follow to
            pay for an order. These instructions are shown on the confirmation page
            after a customer completes the checkout.
        name:
          type: string
          description: The name of this manual payment method.
        reuseable:
          type: boolean
          decription: Whether or not this manual payment method can be reused.
    manual_payment_method_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/manual_payment_method_body"
      - properties:
          archived_at:
            type: integer
            nullable: true
            description: Time at which the object was archived. Measured in seconds
              since the Unix epoch.
      - "$ref": "#/components/schemas/model_discarded_timestamp"
      - "$ref": "#/components/schemas/model_timestamps"
    media_body:
      properties:
        alt:
          type: string
          nullable: true
          description: The HTML alt attribute for the media.
        direct_upload_signed_id:
          type: string
          description: The signed_id from the direct upload.
        title:
          type: string
          nullable: true
          description: The HTML title attribute for the media.
    media_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - properties:
          byte_size:
            type: integer
            description: The size of the media in bytes.
          content_type:
            type: string
            description: The content type (i.e. image/png, image/jpg, application/pdf).
          extension:
            type: string
            description: The extension (i.e. png, jpg, pdf).
          filename:
            type: string
            description: The full filename with extension.
          height:
            type: string
            nullable: true
            description: If the media is an image, this will be the height in pixels.
          public_access:
            type: boolean
            description: Whether or not this media is publicly accessible.
          release_json:
            type: object
            nullable: true
            description: The JSON that was extracted from the `release.json` file
              within the ZIP file.
          url:
            type: string
            nullable: true
            description: The URL for accessing this media. If the media is public,
              this will be a permanent URL. If the media is private, this will be
              a short-lived URL if the media has been exposed.
          url_expires_at:
            type: integer
            nullable: true
            description: The time at which the URL expires. This will only be present
              if the media is private and has been exposed.
          width:
            type: string
            nullable: true
            description: If the media is an image, this will be the width in pixels.
      - "$ref": "#/components/schemas/model_timestamps"
    note_body:
      allOf:
      - properties:
          notable_type:
            type: string
            description: The type of object that this note belongs to â€“ one of `customer`,
              `order`, or `subscription`.
          notable_id:
            type: string
            description: The ID of the object that this note belongs to.
          body:
            type: string
            description: The body of the note.
      - "$ref": "#/components/schemas/model_metadata"
    note_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/note_body"
      - "$ref": "#/components/schemas/model_timestamps"
    order_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - properties:
          checkout:
            type: string
            description: The associated checkout.
          fulfillment_status:
            type: string
            description: The overall fulfillment status of this order based on all
              fulfillments â€“ one of `fulfilled`, `partially_fulfilled`, or `unfulfilled`.
          live_mode:
            type: boolean
            description: Set to `true` if this order is in live mode, and set to `false`
              if it is in test mode.
          number:
            type: string
            description: The unique identifier for this order that is auto generated
              based on this account's order protocol.
          order_type:
            type: string
            description: One of either `checkout` or `subscription`.
          portal_url:
            type: string
            nullable: true
            description: A URL that will redirect to this order's correct portal page
              (hosted or external).
          return_status:
            type: string
            description: The overall return status of this order based on all return
              requests â€“ one of `not_returned`, `partially_returned`, `return_request_open`,
              or `returned`.
          shipment_status:
            type: string
            description: The overall shipment status of this order based on all fulfillments
              â€“ one of `unshippable`, `unshipped`, `shipped`, `partially_shipped`,
              or `delivered`.
          statement_url:
            type: string
            nullable: true
            description: The link to view and download the "invoice" or "receipt"
              statement of this order.
          status:
            type: string
            description: The current status of this order, which can be one of `draft`,
              `paid`, `payment_failed`, `processing`, or `void`.
      - "$ref": "#/components/schemas/model_timestamps"
    order_protocol_body:
      properties:
        inherit_customer_enabled:
          type: boolean
          description: |-
            Each order has a series of attributes `inherited_billing_address`, `inherited_shipping_address`, `inherited_tax_identifier`, `inherited_name`, `inherited_phone`, and `inherited_email`.
            If this is enabled, the order will inherit these attributes from the customer when they are not present on the associated checkout.
            This allows changes to a customers details to be reflected on past orders and statements.
        footer:
          type: string
          nullable: true
          description: The default footer that is shown on all order statements (i.e.
            invoices and receipts).
        memo:
          type: string
          nullable: true
          description: The default memo that is shown on all order statements (i.e.
            invoices and receipts).
        next_sequential_number:
          type: integer
          description: Specified to change the next sequential number to be used.
            If changed, must be larger than the highest current sequential number.
        number_prefix:
          type: string
          nullable: true
          description: The prefix that is added to all order numbers. Must be between
            3-12 characters and only include letters.
        number_type:
          type: string
          description: The type of number to use for orders â€“ one of `sequential`
            or `token`.
        require_reusable_payment_methods:
          type: boolean
          decription: Whether or not to force all payment methods to be reusable even
            if a checkout does not contain a subscription.
        upsells_expire_after_minutes:
          type: integer
          description: The number of minutes after an order is paid that upsells will
            be available for.
    order_protocol_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/order_protocol_body"
      - "$ref": "#/components/schemas/model_timestamps"
    payment_intent_base:
      properties:
        amount:
          type: integer
          description: The amount intended to be collected by this payment intent.
        payment_method_type:
          type: string
          description: The payment method type to use for this payment intent. This
            is only applicable for `mollie` processors.
        return_url:
          type: string
          description: The URL the customer will be redirected to after the payment
            process. This is only applicable for `mollie` processors.
    payment_intent_full_base:
      allOf:
      - "$ref": "#/components/schemas/payment_intent_base"
      - properties:
          live_mode:
            type: boolean
            description: Set to `true` if this checkout is in live mode, and set to
              `false` if it is in test mode.
          processor_type:
            type: string
            description: The processor being used for this checkout. The only allowed
              processors right now are `stripe` and `paypal`.
    payment_intent_body:
      allOf:
      - "$ref": "#/components/schemas/payment_intent_full_base"
      - properties:
          customer:
            type: string
            description: The UUID of the customer.
    payment_intent_update_body:
      allOf:
      - "$ref": "#/components/schemas/payment_intent_base"
      - properties:
          customer:
            type: string
            description: The UUID of the customer.
    payment_intent_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/payment_intent_full_base"
      - properties:
          currency:
            type: string
            description: Three-letter ISO currency code, in lowercase. This value
              will match the `Account` currency.
          customer:
            type: string
            nullable: true
            description: The associated customer.
          external_intent_id:
            type: string
            description: The external ID necessary to capture payment through this
              processor. For example, if processing through Stripe, the `external_intent_id`
              will be set to the `Stripe::PaymentIntent` ID.
          off_session:
            type: boolean
            description: Set to true to indicate that the customer is not in the checkout
              flow during the payment attempt. When `off_session=true` payment collection
              will be attempted immediately.
          payment_method:
            type: string
            nullable: true
            description: The associated payment method.
          platform_fee:
            type: string
            nullable: true
            description: The associated platform fee.
          processor_data:
            type: object
            description: All of the additional data necessary to capture payment with
              this processor.
          reusable:
            type: boolean
            description: Whether or not the payment method that is generated from
              this payment intent should be reusable or not.
          service_fee:
            type: string
            nullable: true
            description: The associated service fee (agency commission).
          status:
            type: string
            description: The status of this payment intent, one of `pending`, `canceled`,
              `failed`, `processing`, `requires_action`, `requires_capture`, or `succeeded`.
      - "$ref": "#/components/schemas/model_timestamps"
    payment_method_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - properties:
          external_payment_method_id:
            type: string
            description: The external processor ID representing this payment method.
          live_mode:
            type: boolean
            description: Set to `true` if this charge is in live mode, and set to
              `false` if it is in test mode.
          processor_type:
            type: string
            description: The specific type of processor. The only allowed processors
              right now are `stripe` and `paypal`.
          reusable:
            type: boolean
            description: Whether or not this payment method can be reused. Only reusable
              payment methods can be attached to subscriptions and set as a customer's
              default.
          supported_currencies:
            type: array
            nullable: true
            description: A list of currencies that this payment method supports. If
              `null`, this payment method supports all currencies.
          type:
            type: string
            description: The type of payment method. One of `bank_account, `card`,
              `payment_instrument`, or `paypal_account`.
          bank_account:
            type: string
            nullable: true
            description: The associated bank account.
          card:
            type: string
            nullable: true
            description: The associated card.
          customer:
            type: string
            nullable: true
            description: The associated customer.
          payment_instrument:
            type: string
            nullable: true
            description: The associated payment instrument.
          paypal_account:
            type: string
            nullable: true
            description: The associated paypal account.
      - "$ref": "#/components/schemas/model_timestamps"
    payout_base:
      properties:
        description:
          type: string
          nullable: true
          description: An optional brief description of what this payout is for.
        end_date:
          type: integer
          description: All approved referrals through this day will be included in
            the payout.
        live_mode:
          type: boolean
          description: Set to `true` if this payout is in live mode, and set to `false`
            if it is in test mode.
        manual:
          type: boolean
          description: Whether or not this payout was created manually or automatically
            from approved referrals.
        total_commission_amount:
          type: integer
          description: The amount in cents that will be paid out to the affiliate.
            For manual payouts, this is set directly. For automatic payouts, this
            is calculated from the sum of approved referrals.
    payout_body:
      allOf:
      - "$ref": "#/components/schemas/payout_base"
      - properties:
          affiliation:
            type: string
            description: The UUID of the affiliation.
    payout_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/payout_base"
      - properties:
          currency:
            type: string
            description: Three-letter ISO currency code, in lowercase. If not set,
              this value will fallback to the default `Account` currency.
          status:
            type: string
            description: The status of the payout â€“ one of `completed` or `processing`.
          affiliation:
            type: string
            description: The associated affiliation.
          payout_group:
            type: string
            nullable: true
            description: The associated payout group.
          payout_email:
            type: string
            nullable: true
            description: The affiliate's payout email address.
          referrals:
            type: object
            nullable: true
            description: A list of associated referrals.
      - "$ref": "#/components/schemas/model_timestamps"
    payout_group_body:
      properties:
        end_date:
          type: integer
          description: All approved referrals through this day will be included in
            the payout.
        live_mode:
          type: boolean
          description: Set to `true` if this payout group is in live mode, and set
            to `false` if it is in test mode.
        min_commission_amount:
          type: integer
          nullable: true
          description: The minimum amount of commission that must be earned before
            a payout is generated for an affiliate.
    payout_group_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/payout_group_body"
      - properties:
          currency:
            type: string
            description: The currency of the payout group.
          payouts:
            type: object
            nullable: true
            description: A list of associated payouts.
      - "$ref": "#/components/schemas/model_timestamps"
    period_body:
      properties:
        end_at:
          type: integer
          nullable: true
          description: End of the period. This will be `null` when the period is for
            a subscription with a one-time price.
    period_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/period_body"
      - properties:
          ad_hoc_amount:
            type: integer
            nullable: true
            description: The amount to use for this period when the associated price
              is `ad_hoc=true`.
          next_payment_retry_at:
            type: integer
            nullable: true
            description: The time at which payment will be automatically retried.
          payment_retry_count:
            type: integer
            description: Number of payment retries made for this period, from the
              perspective of the payment retry schedule. Only automatic retries increment
              the count.
          payoff:
            type: boolean
            description: Indicates whether or not this period paid off all remaining
              periods.
          quantity:
            type: integer
            description: The quantity of products being purchased.
          renewal:
            type: boolean
            description: Whether or not this period has been generated automatically
              for a subscription renewal.
          renewal_reminder_sent_at:
            type: integer
            nullable: true
            description: The time at which the renewal reminder notification was sent
              to the customer.
          restoral:
            type: boolean
            description: Whether or not this period was generated from a subscription
              restoral.
          skip_proration:
            type: boolean
            description: Whether or not proration should be skipped when generating
              this period's checkout.
          start_at:
            type: integer
            nullable: true
            description: Start of the period.
          status:
            type: string
            description: The current status of this period, which can be one of `pending`,
              `payment_failed`, `paid`, `processing`, or `void`.
          checkout:
            type: string
            nullable: true
            description: The associated checkout.
          price:
            type: string
            description: The associated price.
          subscription:
            type: string
            description: The associated subscription.
          variant:
            type: string
            nullable: true
            description: The associated variant.
      - "$ref": "#/components/schemas/model_timestamps"
    price_base:
      allOf:
      - properties:
          ad_hoc:
            type: boolean
            default: false
            description: Whether or not this price accepts ad hoc amounts â€“ also known
              as custom or user-defined amounts.
          ad_hoc_max_amount:
            type: integer
            nullable: true
            description: The maximum ad hoc amount in cents to be allowed, represented
              as a whole integer. For example `9900` is equivalent to `$99`.
          ad_hoc_min_amount:
            type: integer
            nullable: true
            description: The minimum ad hoc amount in cents to be allowed, represented
              as a whole integer. For example `9900` is equivalent to `$99`. If left
              blank, this will be interpreted as `0`.
          amount:
            type: integer
            nullable: true
            description: The amount in cents to be charged, represented as a whole
              integer. For example `9900` is equivalent to `$99`. If `ad_hoc=true`
              the `amount` is optional.
          archived:
            type: boolean
            description: Whether or not this price is archived.
          license_activation_limit:
            type: integer
            nullable: true
            description: The max number of activations allowed per license. If `null`,
              this value will inherit from the value set on `Product`.
          name:
            type: string
            nullable: true
            description: The price name, meant to be displayable to the customer.
          portal_subscription_update_enabled:
            type: boolean
            description: Whether existing subscriptions can be switched to this price
              from the customer dashboard. If set to false, existing subscriptions
              cannot be switched to this price, preventing customers from upgrading
              or downgrading their subscription to this price option.
          position:
            type: integer
            nullable: true
            description: The ordering position of this price when displayed to customers.
          recurring_interval:
            type: string
            nullable: true
            description: The frequency at which a subscription is billed. One of `day`,
              `week`, `month`, or `year`. Only applicable during creation.
          recurring_interval_count:
            type: integer
            nullable: true
            description: The number of intervals (specified in the `recurring_interval`
              attribute) between subscription billings. For example, `recurring_interval=month`
              and `recurring_interval_count=3` bills every 3 months. The total duration
              of a billing cycle is not allowed to exceed 1 year. Only applicable
              during creation.
          recurring_period_count:
            type: integer
            nullable: true
            description: The number of periods a subscription with this price will
              renew for. After this amount of periods, the subscription will move
              to the `complete` state. Only applicable during creation.
          revoke_after_days:
            type: integer
            nullable: true
            description: The number of days after which the purchase associated with
              this price will be automatically revoked. This can be used to create
              time-limited access for a one-time or finite recurring price.
          revoke_purchases_on_completed:
            type: boolean
            description: Whether or not purchases for this price should be revoked
              when subscriptions transition to the `complete` state.
          restart_subscription_on_completed:
            type: boolean
            description: Whether installment subscriptions using this price should
              be automatically restarted when they reach the completed state.
          setup_fee_amount:
            type: integer
            nullable: true
            description: The amount in cents to be charged as a setup fee on the first
              billing period of a recurring price.
          setup_fee_enabled:
            type: boolean
            description: Whether or not this price has a setup fee.
          setup_fee_name:
            type: string
            nullable: true
            description: The name that will display for the setup fee on the first
              billing period.
          setup_fee_trial_enabled:
            type: boolean
            description: Whether or not the setup fee should be deferred until the
              trial period ends. If set to true, the setup fee will not be charged
              until the trial period ends.
          scratch_amount:
            type: integer
            nullable: true
            description: The amount in cents that should be shown as the original
              amount before any price reductions, also known as the pre-sale price.
          trial_duration_days:
            type: integer
            nullable: true
            description: The default number of trial days when subscribing a customer
              to this price.
      - "$ref": "#/components/schemas/model_metadata"
    price_body:
      allOf:
      - "$ref": "#/components/schemas/price_base"
      - properties:
          product:
            type: string
            description: The UUID of the product. Only applicable during creation.
          renewal_price:
            type: string
            description: The UUID of the renewal price.
    price_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/price_base"
      - properties:
          archived_at:
            type: integer
            nullable: true
            description: Time at which the object was archived. Measured in seconds
              since the Unix epoch.
          currency:
            type: string
            description: Three-letter ISO currency code, in lowercase. This value
              will match the `Account` currency.
          full_amount:
            type: integer
            description: The full amount to be charged across all periods, represented
              as a whole integer. For prices without a `recurring_period_count` defined
              this is the same as `amount`. For finite prices, this is equal to `amount`
              * `recurring_period_count`. For example, a price that has an amount
              of $25 and is set to recur over 4 periods, will have a `full_amount`
              of $100.
          current_version:
            type: boolean
            description: Whether or not this object represents the current version
              of this price. (This will be `false` if the association was created
              to this price before it was altered. In this case, we will lookup the
              version of the price at the time it was associated.)
          current_swap:
            type: string
            nullable: true
            description: The current swap for this price.
          product:
            type: string
            description: The associated product.
          renewal_price:
            type: string
            nullable: true
            description: The associated reneal price. If present, subscriptions will
              be updated to this price when they renew.
      - "$ref": "#/components/schemas/model_discarded_timestamp"
      - "$ref": "#/components/schemas/model_timestamps"
    processor_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - properties:
          approved:
            type: boolean
            description: Whether or not the connected processor account has been approved
              to process payments. (This is controlled by the processing platform
              â€“ i.e. Stripe, PayPal, etc.)
          enabled:
            type: boolean
            description: Whether or not this processor is currently enabled to proccess
              new payments. (This is controlled within SureCart.)
          live_mode:
            type: boolean
            description: Set to `true` if this processor is for live mode, and set
              to `false` if it is for test mode.
          processor_type:
            type: string
            description: The type of processor â€“ one of `mock`, `mollie`, `paypal`,
              `paystack`, or `stripe`.
          processor_data:
            type: object
            description: Data that is specific to the `processor_type` and necessary
              for integrating with this processor on the client. For example, this
              could include client public keys, account IDs, etc.
          recurring_enabled:
            type: boolean
            description: Whether or not this processor is setup to handle recurring
              payments.
          supported_currencies:
            type: array
            nullable: true
            description: A list of currencies that this processor supports. If `null`,
              this processor supports all currencies.
      - "$ref": "#/components/schemas/model_timestamps"
    product_base:
      allOf:
      - properties:
          allow_out_of_stock_purchases:
            type: boolean
            description: Whether or not to allow purchases of this product when stock
              runs out. If true, the stock levels for this can go below zero.
          archived:
            type: boolean
            description: Whether or not this product is archived.
          auto_fulfill_enabled:
            type: boolean
            description: Whether or not this product should be auto fulfilled when
              it is purchased. This can only be `true` when `shipping_enabled` is
              `false`.
          cataloged_at:
            type: integer
            description: The time when the product was added or made available. This
              value is used for sorting products on shop pages.
          description:
            type: string
            nullable: true
            description: The product description, meant to be displayable to the customer.
          featured:
            type: boolean
            description: Whether or not this product is featured.
          licensing_enabled:
            type: boolean
            description: Whether or not licensing is enabled for this product.
          license_activation_limit:
            type: integer
            nullable: true
            description: The max number of activations allowed per license. If `null`,
              then unlimited license activations are allowed. (The activation limit
              can also be set on `Price` which will override this value.)
          name:
            type: string
            description: The product name, meant to be displayable to the customer.
          product_collections:
            type: array
            nullable: true
            description: The UUIDs of all the product collections that this product
              belongs to. (This attribute is also aliased as `product_collection_ids`.)
          purchase_limit:
            type: integer
            nullable: true
            description: The max number of times the product can be purchased by a
              customer. If `null`, then unlimited purchases are allowed.
          recurring:
            type: boolean
            default: false
            description: Whether the product is for a one-time purchase or a recurring
              (subscription) purchase.
          reviews_enabled:
            type: boolean
            description: Whether or not reviews are enabled for this product.
          shipping_enabled:
            type: boolean
            description: If set to `true` checkouts with this product will require
              a full shipping address.
          sku:
            type: string
            nullable: true
            description: The stock keeping unit for this product. If the `Product`
              has variants, each variant has a specific `sku`.
          status:
            type: string
            description: The status of this product â€“ one of `draft` or `published`.
          slug:
            type: string
            description: A unique and URL friendly string that represents this product.
              (This will be auto-generated when a product is created if not explicitly
              set.)
          solicit_reviews:
            type: boolean
            description: Whether or not to solicit reviews for this product with automatic
              emails to customers.
          stock_enabled:
            type: boolean
            description: Whether or not stock will be tracked for this product.
          tax_category:
            type: string
            nullable: true
            description: The tax category/code that matches this product â€“ one of
              `digital`, `tangible`, `service`, or `saas`.
          tax_enabled:
            type: boolean
            description: If set to `true` this product is considered taxable.
          weight:
            type: number
            description: The product weight, meant to be displayable to the customer.
          weight_unit:
            type: string
            description: The weight unit for this product â€“ one of `lb`, `oz`, `kg`,
              `g`.
      - "$ref": "#/components/schemas/model_metadata"
    product_body:
      allOf:
      - "$ref": "#/components/schemas/product_base"
      - properties:
          commission_structure:
            description: The commission structure to use when calculating referral
              commissions for this specific product.
            allOf:
            - "$ref": "#/components/schemas/commission_structure_base"
          current_release_download:
            type: string
            description: The UUID of the current release download.
          product_group:
            type: string
            description: The UUID of the product group.
          shipping_profile:
            type: string
            description: The UUID of the shipping profile.
          stock_adjustment:
            type: integer
            description: The amount to adjust the stock by. This can be a positive
              or negative number.
          reviews:
            type: array
            description: A list of associated reviews.
            items:
              "$ref": "#/components/schemas/review_body"
          variant_options:
            type: array
            description: A list of this product's variant options.
            items:
              "$ref": "#/components/schemas/variant_option_body"
          variants:
            type: array
            description: A list of this product's variants.
            items:
              "$ref": "#/components/schemas/variant_body"
    product_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/product_base"
      - properties:
          archived_at:
            type: integer
            nullable: true
            description: Time at which the object was archived. Measured in seconds
              since the Unix epoch.
          available_stock:
            type: integer
            description: The total amount of stock available for purchase. This is
              the total `stock` on hand minus `held_stock`.
          average_stars:
            type: string
            description: The average stars for this product based on published reviews.
          commission_structure:
            type: string
            description: The associated commission structure.
            nullable: true
          current_release_download:
            type: string
            nullable: true
            description: The associated current release download.
          held_stock:
            type: integer
            description: The total amount of stock being held by unfulfilled line
              items.
          metrics:
            type: object
            properties:
              currency:
                type: string
                description: The currency that was used to calculate these metrics.
                  This will always be set to the account's currency.
              max_price_amount:
                type: integer
                nullable: true
                description: The maximum `amount` among this product's prices (including
                  variant price overrides).
              min_price_amount:
                type: integer
                nullable: true
                description: The minimum `amount` among this product's prices (including
                  variant price overrides).
              prices_count:
                type: integer
                nullable: true
                description: The total number of prices that belong to this product.
          downloads:
            type: object
            nullable: true
            description: A list of associated downloads.
          reviews_breakdown:
            type: object
            description: A histogram breakdown of the reviews for this product.
          featured_product_media:
            type: string
            nullable: true
            description: The featured (first) product media.
          prices:
            type: object
            nullable: true
            description: A list of associated prices.
          product_group:
            type: string
            nullable: true
            description: The associated product group.
          product_medias:
            type: object
            nullable: true
            description: A list of associated product medias.
          shipping_profile:
            type: string
            nullable: true
            description: The associated shipping profile.
          stock:
            type: integer
            description: The total amount of stock on hand for this variant.
          reviews:
            type: object
            nullable: true
            description: A list of associated reviews.
          variant_options:
            type: object
            nullable: true
            description: A list of associated variant options.
          variants:
            type: object
            nullable: true
            description: A list of associated variants.
      - "$ref": "#/components/schemas/model_discarded_timestamp"
      - "$ref": "#/components/schemas/model_timestamps"
    product_collection_base:
      allOf:
      - properties:
          name:
            type: string
            description: A name for this product collection that will be visible to
              customers.
          description:
            type: string
            description: The product collection description, meant to be displayable
              to the customer.
            nullable: true
          position:
            type: integer
            nullable: true
            description: The ordering position of this product collection when displayed
              to customers.
          slug:
            type: string
            description: A unique and URL friendly string that represents this product
              collection. (This will be auto-generated when a product collection is
              created if not explicitly set.)
      - "$ref": "#/components/schemas/model_metadata"
    product_collection_body:
      allOf:
      - "$ref": "#/components/schemas/product_collection_base"
      - properties:
          image:
            type: string
            description: The UUID of the media.
    product_collection_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/product_collection_base"
      - properties:
          image:
            type: string
            nullable: true
            description: The associated media.
          products_count:
            type: integer
            description: The number of products in this collection.
          products:
            type: object
            nullable: true
            description: A list of associated products.
      - "$ref": "#/components/schemas/model_timestamps"
    product_group_body:
      allOf:
      - properties:
          archived:
            type: boolean
            description: Whether or not this product group is archived.
          name:
            type: string
            description: The product groupâ€™s name, meant to be displayable to the
              customer.
          purchase_limit:
            type: integer
            nullable: true
            description: The max number of times the product group can be purchased
              by a customer. If `null`, then unlimited purchases are allowed.
      - "$ref": "#/components/schemas/model_metadata"
    product_group_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/product_group_body"
      - properties:
          archived_at:
            type: integer
            nullable: true
            description: Time at which the object was archived. Measured in seconds
              since the Unix epoch.
          products:
            type: object
            nullable: true
            description: A list of associated products.
      - "$ref": "#/components/schemas/model_timestamps"
    product_media_base:
      allOf:
      - properties:
          alt:
            type: string
            nullable: true
            description: The HTML alt attribute for the product media.
          position:
            type: integer
            nullable: true
            description: The ordering position of this product media when displayed
              to customers.
          title:
            type: string
            nullable: true
            description: The HTML title attribute for the product media.
          url:
            type: string
            nullable: true
            description: Instead of attaching a `Media` record, a public URL can be
              set. If set, this URL will be used to serve the product media asset.
    product_media_body:
      allOf:
      - "$ref": "#/components/schemas/product_media_base"
      - properties:
          media:
            type: string
            nullable: true
            description: The UUID of the media.
          product:
            type: string
            description: The UUID of the product.
    product_media_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/product_media_base"
      - properties:
          media:
            type: string
            nullable: true
            description: The associated media.
          product:
            type: string
            description: The associated product.
      - "$ref": "#/components/schemas/model_timestamps"
    promotion_base:
      allOf:
      - properties:
          archived:
            type: boolean
            description: Whether or not this promotion is archived.
          code:
            type: string
            description: The customer-facing code. Regardless of case, this code must
              be unique across all promotion codes on your account. If left blank,
              we will generate one automatically.
          expired:
            type: boolean
            description: Whether or not this promotion has expired.
          max_redemptions:
            type: integer
            nullable: true
            description: Maximum number of times this coupon can be redeemed in total
              across all customers.
          redeem_by:
            type: integer
            nullable: true
            description: Date after which the coupon can no longer be redeemed.
      - "$ref": "#/components/schemas/model_metadata"
    promotion_body:
      allOf:
      - "$ref": "#/components/schemas/promotion_base"
      - properties:
          affiliation:
            type: string
            nullable: true
            description: The UUID of the affiliation
          coupon:
            type: string
            description: The UUID of the coupon.
          customer:
            type: string
            description: The UUID of the customer.
    promotion_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/promotion_base"
      - properties:
          archived_at:
            type: integer
            nullable: true
            description: Time at which the object was archived. Measured in seconds
              since the Unix epoch.
          affiliation:
            type: string
            nullable: true
            description: The associated affiliation.
          coupon:
            type: string
            description: The associated coupon.
          customer:
            type: string
            nullable: true
            description: The associated customer that this promotion can be used by.
          discounts:
            type: object
            nullable: true
            description: A list of associated discounts (only redeemed discounts).
          expired:
            type: boolean
            description: Taking into account the above properties, whether this promotion
              can still be used.
      - "$ref": "#/components/schemas/model_discarded_timestamp"
      - "$ref": "#/components/schemas/model_timestamps"
    public:
      account_response:
        allOf:
        - "$ref": "#/components/schemas/model_identifiers"
        - properties:
            name:
              type: string
              description: The account name.
            slug:
              type: string
              description: The account slug.
        - "$ref": "#/components/schemas/model_timestamps"
      checkout_response:
        allOf:
        - "$ref": "#/components/schemas/model_identifiers"
        - "$ref": "#/components/schemas/checkout_base"
        - "$ref": "#/components/schemas/model_timestamps"
      click_base:
        properties:
          referrer:
            type: string
            nullable: true
            description: The referrer of the click.
          url:
            type: string
            description: The URL of the click.
      click_body:
        allOf:
        - "$ref": "#/components/schemas/public/click_base"
        - properties:
            affiliation_code:
              type: string
              description: The code of the associatied affiliation.
      click_response:
        allOf:
        - "$ref": "#/components/schemas/model_identifiers"
        - "$ref": "#/components/schemas/public/click_base"
        - properties:
            domain:
              type: string
              description: The domain of the click.
            expires_at:
              type: integer
              description: Time at which the click expires. Measured in seconds since
                the Unix epoch.
        - "$ref": "#/components/schemas/model_timestamps"
      country_response:
        allOf:
        - properties:
            address_formats:
              type: object
              description: The address formats of the country.
            address_labels:
              type: object
              description: The address labels of the country.
            city_required:
              type: boolean
              description: Whether the city is required for the country.
            full_name:
              type: string
              description: The full name of the country.
            iso_code:
              type: string
              description: The ISO code of the country.
            postal_code_required:
              type: boolean
              description: Whether the postal code is required for the country.
            states:
              type: array
              description: The states of the country.
            state_required:
              type: boolean
              description: Whether the state is required for the country.
      license_response:
        allOf:
        - "$ref": "#/components/schemas/model_identifiers"
        - "$ref": "#/components/schemas/license_base_response"
        - properties:
            current_release:
              type: string
              nullable: true
              description: The current release media.
            price:
              type: string
              description: The associated price.
            product:
              type: string
              description: The associated product.
            variant:
              type: string
              nullable: true
              description: The associated variant.
        - "$ref": "#/components/schemas/model_timestamps"
    purchase_base:
      properties:
        revoke_at:
          type: integer
          nullable: true
          description: Time at which the purchase should be revoked.
    purchase_full_base:
      allOf:
      - "$ref": "#/components/schemas/purchase_base"
      - properties:
          license_key:
            type: string
            nullable: true
            description: The key that will be used on the generated license from this
              purchase. (Only applicable when the purchase generates a license.)
          quantity:
            type: integer
            description: The quantity of products purchased.
    purchase_body:
      allOf:
      - "$ref": "#/components/schemas/purchase_full_base"
      - properties:
          customer:
            type: string
            description: The UUID of the customer.
          price:
            type: string
            description: The UUID of the price.
          variant:
            type: string
            description: The UUID of the variant.
    purchase_update_body:
      allOf:
      - "$ref": "#/components/schemas/purchase_base"
    purchase_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/purchase_base"
      - properties:
          live_mode:
            type: boolean
            description: Set to `true` if this purchase is in live mode, and set to
              `false` if it is in test mode.
          revoked:
            type: boolean
            description: Whether or not this purchase is revoked.
          revoked_at:
            type: integer
            nullable: true
            description: Time at which the purchase was revoked. Measured in seconds
              since the Unix epoch.
          revoke_at:
            type: integer
            nullable: true
            description: Time at which the purchase should be revoked.
          customer:
            type: string
            description: The associated customer.
          initial_order:
            type: string
            nullable: true
            description: The first order that initiated this purchase.
          license:
            type: string
            nullable: true
            description: The associated license.
          license_key:
            type: string
            nullable: true
            description: License key for subscriptions
          line_items:
            type: object
            nullable: true
            description: The associated line items.
          price:
            type: string
            description: The associated price.
          product:
            type: string
            description: The associated product.
          subscription:
            type: string
            nullable: true
            description: The associated subscription.
          variant:
            type: string
            nullable: true
            description: The associated variant.
          review:
            type: string
            nullable: true
            description: The associated review.
      - "$ref": "#/components/schemas/model_timestamps"
    referral_base:
      properties:
        commission_amount:
          type: integer
          description: The amount in cents that will be paid out to the affiliate
            for this referral.
        description:
          type: string
          nullable: true
          description: A brief description of what this referral is for.
        live_mode:
          type: boolean
          description: Set to `true` if this referral is in live mode, and set to
            `false` if it is in test mode.
    referral_body:
      allOf:
      - "$ref": "#/components/schemas/referral_base"
      - properties:
          affiliation:
            type: string
            description: The UUID of the affiliation.
          checkout:
            type: string
            description: The UUID of the checkout.
    referral_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/referral_base"
      - properties:
          currency:
            type: string
            description: Three-letter ISO currency code, in lowercase. If not set,
              this value will fallback to the default `Account` currency.
          manual:
            type: boolean
            description: Whether or not this referral was created manually or automatically
              from a tracked click associated with a checkout.
          status:
            type: string
            description: The status of the referral â€“ one of `approved`, `canceled`,
              `denied`, `paid`, or `reviewing`.
          refund_reduction_amount:
            type: integer
            description: The amount in cents that is reduced from the original commission
              amount due to refunds.
          affiliation:
            type: string
            description: The associated affiliation.
          attributed_click:
            type: string
            nullable: true
            description: The associated attributed click.
          checkout:
            type: string
            nullable: true
            description: The associated checkout.
          payout:
            type: string
            nullable: true
            description: The associated payout.
          referral_items:
            type: object
            nullable: true
            description: A list of associated referral items.
      - "$ref": "#/components/schemas/model_timestamps"
    referral_item_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - properties:
          commission_amount:
            type: integer
            description: The amount in cents that will be paid out to the affiliate
              for this referral item.
          line_item:
            type: string
            description: The associated line item.
          referral:
            type: string
            description: The associated referral.
      - "$ref": "#/components/schemas/model_timestamps"
    refund_base:
      allOf:
      - properties:
          amount:
            type: integer
            description: The amount in cents that was refunded, represented as a whole
              integer. For example `9900` is equivalent to `$99`.
          reason:
            type: string
            description: The reason for this refund, which can be one of `duplicate`,
              `fraudulent`, `requested_by_customer`, or `expired_uncaptured_charge`.
      - "$ref": "#/components/schemas/model_metadata"
    refund_body:
      allOf:
      - "$ref": "#/components/schemas/refund_base"
      - properties:
          charge:
            type: string
            description: The UUID of the charge.
          refund_items:
            type: array
            description: A list of this refund's items.
            items:
              "$ref": "#/components/schemas/refund_item_body"
          return_request:
            type: string
            description: The UUID of the return request.
    refund_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/refund_base"
      - properties:
          charge:
            type: string
            description: The associated charge.
          currency:
            type: string
            description: Three-letter ISO currency code, in lowercase.
          customer:
            type: string
            description: The associated customer.
          external_refund_id:
            type: string
            description: The external processor ID representing this refund.
          failure_reason:
            type: string
            nullable: true
            description: The reason this refund failed, which can currently only be
              `insufficient_funds`.
          live_mode:
            type: boolean
            description: Set to `true` if this refund is in live mode, and set to
              `false` if it is in test mode.
          refund_items:
            type: object
            nullable: true
            description: A list of associated refund items.
          return_request:
            type: string
            nullable: true
            description: The associated return request.
          status:
            type: string
            description: The current status of this refund, which can be one of `pending`,
              `succeeded`, `failed`, or `canceled`.
      - "$ref": "#/components/schemas/model_timestamps"
    refund_item_base:
      allOf:
      - properties:
          restock:
            type: boolean
            description: Whether or not the associated line item should be restocked.
          revoke_purchase:
            type: boolean
            description: Whether or not the associated purchase should be revoked.
          quantity:
            type: integer
            description: The quantity of products being returned. This must be less
              than or equal to the fulfilled quantity of the associated line item.
    refund_item_body:
      allOf:
      - "$ref": "#/components/schemas/refund_item_base"
      - properties:
          line_item:
            type: string
            description: The UUID of the line item.
    refund_item_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/refund_item_base"
      - properties:
          line_item:
            type: string
            description: The associated line item.
          refund:
            type: string
            description: The associated refund.
      - "$ref": "#/components/schemas/model_timestamps"
    return_item_base:
      allOf:
      - properties:
          note:
            type: string
            description: A note to capture extra details about this return item. This
              is required when the return reason is `other`.
            nullable: true
          return_reason:
            type: string
            description: The reason for returning the item â€“ one of `color`, `defective`,
              `not_as_described`, `other`, `size_too_large`, `size_too_small`, `style`,
              `unknown`, `unwanted`, or `wrong_item`. The list of these reasons can
              be fetched from the `/return_reasons` endpoint.
            nullable: false
          quantity:
            type: integer
            description: The quantity of products being returned. This must be less
              than or equal to the fulfilled quantity of the associated line item.
    return_item_body:
      allOf:
      - "$ref": "#/components/schemas/return_item_base"
      - properties:
          line_item:
            type: string
            description: The UUID of the line item.
    return_item_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/return_item_base"
      - properties:
          return_reason_description:
            type: string
            description: The full description of the return reason.
            nullable: false
          return_request:
            type: string
            description: The associated return request.
          line_item:
            type: string
            description: The associated line item.
      - "$ref": "#/components/schemas/model_timestamps"
    return_request_base:
      allOf:
      - "$ref": "#/components/schemas/model_metadata"
    return_request_body:
      allOf:
      - "$ref": "#/components/schemas/return_request_base"
      - properties:
          order:
            type: string
            description: The UUID of the order.
          return_items:
            type: array
            description: A list of this return request's items.
            items:
              "$ref": "#/components/schemas/return_item_body"
    return_request_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/return_request_base"
      - properties:
          number:
            type: string
            description: The unique identifier for this return request that is auto
              generated based on this account's order protocol.
          order:
            type: string
            description: The associated order.
          return_items:
            type: object
            nullable: true
            description: A list of associated return items.
          status:
            type: string
            description: The current status of this return request â€“ either `open`
              or `complete`.
      - "$ref": "#/components/schemas/model_timestamps"
    review_base:
      allOf:
      - properties:
          title:
            type: string
            nullable: true
            description: The title of the review.
          body:
            type: string
            nullable: true
            description: The content/body of the review.
          stars:
            type: number
            format: float
            nullable: true
            description: The numerical rating provided in the review. Can be a decimal
              from 1.0 to 5.0.
    review_body:
      allOf:
      - "$ref": "#/components/schemas/review_base"
      - properties:
          customer:
            type: string
            description: The UUID of the customer who wrote the review.
          product:
            type: string
            description: The UUID of the product being reviewed.
          purchase:
            type: string
            nullable: true
            description: The UUID of the purchase of product.
    review_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/review_base"
      - properties:
          status:
            type: string
            nullable: true
            description: The status of the review (e.g. `in_review`, `published`,
              `unpublished`).
          verified:
            type: boolean
            description: Indicates whether the reviewer has purchased the product
              (based on presence of a purchase).
          customer:
            type: string
            description: The customer who wrote the review.
          product:
            type: string
            description: The associated product.
          purchase:
            type: string
            nullable: true
            description: The associated purchase.
          review_medias:
            type: object
            nullable: true
            description: A list of associated review medias.
      - "$ref": "#/components/schemas/model_discarded_timestamp"
      - "$ref": "#/components/schemas/model_timestamps"
    review_media_base:
      allOf:
      - properties:
          alt:
            type: string
            nullable: true
            description: The HTML alt attribute for the review media.
          title:
            type: string
            nullable: true
            description: The HTML title attribute for the review media.
          url:
            type: string
            nullable: true
            description: Instead of attaching a `Media` record, a public URL can be
              set. If set, this URL will be used to serve the review media asset.
    review_media_body:
      allOf:
      - "$ref": "#/components/schemas/review_media_base"
      - properties:
          media:
            type: string
            nullable: true
            description: The UUID of the media.
          review:
            type: string
            description: The UUID of the review.
    review_media_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/review_media_base"
      - properties:
          media:
            type: string
            nullable: true
            description: The associated media.
          review:
            type: string
            description: The associated review.
      - "$ref": "#/components/schemas/model_timestamps"
    review_protocol_base:
      properties:
        reviews_enabled:
          type: boolean
          description: If set to `true`, reviews will be enabled globally for all
            products in the account. Individual products must also have reviews enabled
            for reviews to be shown.
        solicit_reviews:
          type: boolean
          description: If set to `true`, review solicitation emails will be sent to
            customers who have purchased products. Individual products must also have
            solicitation enabled.
        solicit_reviews_after_days:
          type: integer
          description: The number of days after an order is fulfilled that a review
            solicitation email will be sent to the customer.
    review_protocol_body:
      allOf:
      - "$ref": "#/components/schemas/review_protocol_base"
    review_protocol_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/review_protocol_base"
      - "$ref": "#/components/schemas/model_timestamps"
    rule_string_leaf:
      type: object
      properties:
        attribute_name:
          type: string
          description: The attribute to be compared.
        operator_label:
          type: string
          description: The comparison operator.
        metadata_key:
          type: string
          nullable: true
          description: Optional metadata key for metadata attributes. Only acceptable
            when attribute is `metadata` type.
        comparison_value:
          type: string
          description: The value to compare against.
    rule_string_group:
      type: object
      properties:
        leaves:
          type: array
          description: An array of rule leaves (AND conditions within group).
          items:
            "$ref": "#/components/schemas/rule_string_leaf"
    rule_string_base:
      properties:
        rule_string:
          type: string
          description: The rule string.
        schema_id:
          type: string
          description: The schema ID used for validation. Defines supported attributes,
            their types, and acceptable comparison values.
        groups:
          type: array
          description: An array of rule groups (OR conditions).
          items:
            "$ref": "#/components/schemas/rule_string_group"
    rule_string_response:
      allOf:
      - "$ref": "#/components/schemas/rule_string_base"
      - properties:
          object:
            type: string
            description: A string describing the object type returned.
    rule_string_construct_body:
      properties:
        schema_id:
          type: string
          description: The schema ID used for validation. Defines supported attributes,
            their types, and acceptable comparison values.
        groups:
          type: array
          description: An array of rule groups (OR conditions).
          items:
            "$ref": "#/components/schemas/rule_string_group"
    rule_string_deconstruct_body:
      properties:
        schema_id:
          type: string
          description: The schema ID used for validation. Defines supported attributes,
            their types, and acceptable comparison values.
        rule_string:
          type: string
          description: The rule string.
    rule_string_operator:
      type: object
      properties:
        label:
          type: string
          description: The label for the operator.
    rule_string_attribute:
      type: object
      properties:
        key:
          type: string
          description: The attribute key.
        type:
          type: string
          description: The attribute type â€“ one of `string`, `numeric`, `date`, `metadata`.
        operators:
          type: array
          description: An array of available operators for this attribute.
          items:
            "$ref": "#/components/schemas/rule_string_operator"
        acceptable_values:
          type: array
          description: An array of acceptable values for `enum` type attributes.
          items:
            type: string
    rule_string_schema_base:
      type: object
      properties:
        schema_id:
          type: string
          description: The schema ID used for validation. Defines supported attributes,
            their types, and acceptable comparison values.
        attributes:
          type: array
          description: Available attributes for this schema.
          items:
            "$ref": "#/components/schemas/rule_string_attribute"
    rule_string_schema_response:
      allOf:
      - "$ref": "#/components/schemas/rule_string_schema_base"
      - properties:
          object:
            type: string
            description: A string describing the object type returned.
    list_response:
      type: object
      properties:
        object:
          type: string
          description: A string describing the object type returned.
        pagination:
          type: object
          properties:
            count:
              type: integer
              description: The total number of items.
            limit:
              type: integer
              nullable: true
              description: The number of items per page. The default is `20` and the
                maximum is `100`.
            page:
              type: integer
              nullable: true
              description: The current page.
        data:
          type: array
          description: An array of objects.
    model_destroy_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - properties:
          deleted:
            type: boolean
            description: Whether or not this object was succesfully deleted.
    model_identifiers:
      properties:
        id:
          type: string
          nullable: true
          description: The UUID of the specific object.
        object:
          type: string
          description: A string describing the object type returned.
    model_metadata:
      properties:
        metadata:
          type: object
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
    model_timestamps:
      properties:
        created_at:
          type: integer
          nullable: true
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
        updated_at:
          type: integer
          nullable: true
          description: Time at which the object was last updated. Measured in seconds
            since the Unix epoch.
    model_discarded_timestamp:
      properties:
        discarded_at:
          type: integer
          nullable: true
          description: Time at which the object was discarded. Measured in seconds
            since the Unix epoch.
    stats_response:
      type: object
      properties:
        object:
          type: string
          description: A string describing the object type returned.
        query:
          type: object
          properties:
            currency:
              type: string
              nullable: true
              description: The end of the date range for the query.
            end_at:
              type: integer
              description: The end of the date range for the query.
            interval:
              type: string
              nullable: true
              description: The interval that is set for the query.
            start_at:
              type: integer
              description: The start of the date range for the query.
        data:
          type: array
          description: An array of objects.
    static_list_response:
      type: object
      properties:
        object:
          type: string
          description: A string describing the object type returned.
        data:
          type: array
          description: An array of objects.
    shipping_method_body:
      allOf:
      - properties:
          name:
            type: string
            description: A name for this shipping method that will be visible to customers.
          description:
            type: string
            description: A short description for this shipping method that will be
              visible to customers.
            nullable: true
      - "$ref": "#/components/schemas/model_metadata"
    shipping_method_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/shipping_method_body"
      - properties:
          shipping_rates:
            type: object
            nullable: true
            description: A list of associated shipping rates.
      - "$ref": "#/components/schemas/model_timestamps"
    shipping_profile_base:
      allOf:
      - properties:
          name:
            type: string
            description: A name for this shipping profile that will be visible to
              customers.
      - "$ref": "#/components/schemas/model_metadata"
    shipping_profile_body:
      allOf:
      - "$ref": "#/components/schemas/shipping_zone_base"
      - properties:
          fallback_shipping_zone:
            type: string
            nullable: true
            description: The UUID of the shipping zone that should be the fallback
              when a specific shipping zone does not match the checkout's shipping
              address. This is commonly referred to as a "Rest of World" shipping
              zone.
    shipping_profile_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/shipping_profile_base"
      - properties:
          default:
            type: boolean
            description: Whether or not this shipping profile is the default for the
              account.
          fallback_shipping_zone:
            type: string
            nullable: true
            description: The associated fallback shipping zone.
          products:
            type: object
            nullable: true
            description: A list of associated products.
          shipping_zones:
            type: object
            nullable: true
            description: A list of associated shipping zones.
      - "$ref": "#/components/schemas/model_timestamps"
    shipping_protocol_body:
      properties:
        shipping_enabled:
          type: boolean
          description: If set to `true` a shipping choice will be required for checkouts
            that have `shipping_enabled` products.
    shipping_protocol_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/shipping_protocol_body"
      - "$ref": "#/components/schemas/model_timestamps"
    shipping_rate_base:
      allOf:
      - properties:
          amount:
            type: integer
            description: The amount in cents to be charged, represented as a whole
              integer. For example `9900` is equivalent to `$99`.
          rate_type:
            type: string
            description: The calculation strategy for this shipping rate â€“ one of
              `amount`, `flat`, or `weight`. If `amount`, this shipping rate will
              be applicable to checkouts that have a `subtotal_amount` within the
              min/max amount range. If `flat`, this rate will be applicable to all
              line items. If `weight`, this rate will be applicable to line items
              that have a combined weight within the min/max weight range.
          min_amount:
            type: integer
            description: The minimum `subtotal_amount` of a checkout for this rate
              to apply.
          max_amount:
            type: integer
            nullable: true
            description: The maximum `subtotal_amount` of a checkout for this rate
              to apply.
          min_weight:
            type: number
            description: The minimum combined `weight` of a line item for this rate
              to apply.
          max_weight:
            type: number
            nullable: true
            description: The maximum combined `weight` of a line item for this rate
              to apply.
          weight_unit:
            type: string
            description: The weight unit for this shipping rate â€“ one of `lb`, `oz`,
              `kg`, `g`.
      - "$ref": "#/components/schemas/model_metadata"
    shipping_rate_body:
      allOf:
      - "$ref": "#/components/schemas/shipping_rate_base"
      - properties:
          shipping_zone:
            type: string
            description: The UUID of the shipping zone.
          shipping_method:
            type: string
            description: The UUID of the shipping method.
    shipping_rate_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/shipping_rate_base"
      - "$ref": "#/components/schemas/model_timestamps"
      - properties:
          currency:
            type: string
            description: Three-letter ISO currency code, in lowercase. This value
              will match the `Account` currency.
          shipping_zone:
            type: string
            description: The associated shipping zone.
          shipping_method:
            type: string
            description: The associated shipping method.
    shipping_zone_base:
      allOf:
      - properties:
          name:
            type: string
            description: A name for this shipping zone that will be visible to customers.
          territories:
            type: array
            description: The specific territories that this shipping zone covers.
            items:
              type: object
              properties:
                country:
                  type: string
                  description: The country associated with the territory.
                states:
                  type: array
                  description: List of states within the country.
                  items:
                    type: string
      - "$ref": "#/components/schemas/model_metadata"
    shipping_zone_body:
      allOf:
      - "$ref": "#/components/schemas/shipping_zone_base"
      - properties:
          shipping_profile:
            type: string
            description: The UUID of the shipping profile.
    shipping_zone_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/shipping_zone_base"
      - "$ref": "#/components/schemas/model_timestamps"
      - properties:
          shipping_profile:
            type: string
            description: The associated shipping profile.
          shipping_rates:
            type: object
            nullable: true
            description: A list of associated shipping rates.
    subscription_base:
      allOf:
      - properties:
          ad_hoc_amount:
            type: integer
            nullable: true
            description: The amount to use for this subscription when the associated
              price is `ad_hoc=true`.
          affiliation_expires_at:
            type: integer
            nullable: true
            description: Time at which the affiliation will expire.
          cancel_at_period_end:
            type: boolean
            description: If the subscription is set to cancel at the end of the current
              period. You can use this attribute to determine whether a subscription
              that has a `status` of `active` is scheduled to be canceled at the end
              of the current period.
          live_mode:
            type: boolean
            description: Set to `true` if this subscription is in live mode, and set
              to `false` if it is in test mode.
          manual_payment:
            type: boolean
            description: Whether or not this subscription should finalize checkouts
              during renewal with the `manual_payment=true` option.
          quantity:
            type: integer
            description: The quantity of products being purchased.
          restore_at:
            type: integer
            nullable: true
            description: The time at which this subscription will automatically be
              restored. This can only be set if the subscription is canceled or set
              to cancel at period end.
          restart_on_completed:
            type: boolean
            description: Whether installment subscriptions should be automatically
              restarted when they reach the completed state. When the subscription
              is created, this value will be inherited from the price `restart_subscription_on_completed`
              value.
          tax_enabled:
            type: boolean
            description: Whether or not tax is enabled for this subscription. This
              will default to the account's `tax_protocol.tax_enabled` value when
              the subscription is created.
          trial_end_at:
            type: integer
            nullable: true
            description: If the subscription has a trial, the end of that trial.
      - "$ref": "#/components/schemas/model_metadata"
    subscription_body:
      allOf:
      - "$ref": "#/components/schemas/subscription_base"
      - properties:
          affiliation:
            type: string
            description: The affiliation associated with this subscription.
          currency:
            type: string
            description: Three-letter ISO currency code, in lowercase. This value
              will match the `Account` currency.
          customer:
            type: string
            description: The UUID of the customer.
          discount:
            description: The parameters of the discount to be applied to this subscription.
            allOf:
            - "$ref": "#/components/schemas/discount_body"
          imported:
            type: boolean
            description: Whether or not this subscription is being imported from another
              platform. If `true`, the `first_sc_period_start_at` value must be set.
          manual_payment_method:
            type: string
            description: The UUID of the manual payment method.
          first_sc_period_start_at:
            type: integer
            nullable: true
            description: The time at which the next period should start for this subscription.
              This value should be set when importing subscriptions to maintain the
              billing cycle. (This value is only applicable during subscription creation.)
          payment_method:
            type: string
            description: The UUID of the payment method.
          price:
            type: string
            description: The UUID of the price.
          purge_pending_update:
            type: boolean
            description: When set to `true` the `pending_update` will be cleared.
          shipping_method:
            type: string
            nullable: true
            description: The UUID of the shipping method.
          variant:
            type: string
            description: The UUID of the variant.
    subscription_cancel_body:
      properties:
        restore_at:
          type: integer
          nullable: true
          description: The time at which this subscription will automatically be restored.
            This can only be set if the subscription is canceled or set to cancel
            at period end.
    subscription_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/subscription_base"
      - properties:
          current_period_end_at:
            type: integer
            nullable: true
            description: End of the current period that the subscription is in. At
              the end of this period, a new period will be created. This will be `null`
              when the subscription has a one-time price.
          current_period_start_at:
            type: integer
            nullable: true
            description: Start of the current period that the subscription is in.
          ended_at:
            type: integer
            nullable: true
            description: If the subscription has ended, the date the subscription
              ended.
          finite:
            type: boolean
            description: Whether or not this subscription belongs to a price with
              a set `recurring_period_count`, meaning it has a defined end.
          last_renewal_reminder_sent_at:
            type: integer
            nullable: true
            description: Time at which the last renewal reminder notification sent.
              Measured in seconds since the Unix epoch.
          pending_update:
            type: object
            properties:
              price:
                type: string
                description: The UUID of the price this subscription will be updated
                  to at the end of the current period.
              quantity:
                type: integer
                description: The quantity of products being purchased at the end of
                  the current period.
          portal_url:
            type: string
            nullable: true
            description: A URL that will redirect to this subscription's correct portal
              page (hosted or external).
          price_readonly:
            type: boolean
            description: Whether or not the price of this subscription can be modified.
              If `true`, the price is locked and cannot be changed
          remaining_period_count:
            type: integer
            nullable: true
            description: The number of periods remaining before this subscription
              ends. This count is reduced when a period is paid.
          subtotal_amount:
            type: integer
            description: Total of the subscription before discounts or taxes are applied.
          status:
            type: string
            description: The current status of this subscription, which can be one
              of `incomplete`, `trialing`, `active`, `past_due`, `canceled`, or `completed`.
          affiliation:
            type: object
            nullable: true
            description: The affiliation associated with this subscription.
          current_cancellation_act:
            type: string
            nullable: true
            description: The associated current cancellation act.
          current_period:
            type: string
            description: The associated current period.
          customer:
            type: string
            description: The associated customer.
          discount:
            type: string
            nullable: true
            description: The associated discount.
          manual_payment_method:
            type: string
            nullable: true
            description: The associated manual payment method.
          payment_method:
            type: string
            nullable: true
            description: The associated payment method.
          periods:
            type: object
            nullable: true
            description: The associated periods.
          price:
            type: string
            description: The associated price.
          purchase:
            type: string
            nullable: true
            description: The associated purchase.
          shipping_method:
            type: string
            nullable: true
            description: The associated shipping_method.
          variant:
            type: string
            nullable: true
            description: The associated variant.
          variant_options:
            type: array
            nullable: true
            description: An array of the associated variant's options.
      - "$ref": "#/components/schemas/model_timestamps"
    subscription_protocol_body:
      properties:
        bypass_duplicate_trials:
          type: boolean
          description: Whether or not to skip the trial period for a product if the
            customer has already been in a trial.
        cancel_behavior:
          type: string
          description: Controls how subscription cancellations should be handled â€“
            one of `immediate` or `pending`.
        cancel_window_enabled:
          type: boolean
          description: Whether or not the subscription cancel window is enabled.
        cancel_window_days:
          type: integer
          description: The number of days prior to a subscription renewing that the
            cancel option will be visible to customers.
        default_payment_method_detach_enabled:
          type: boolean
          description: Whether or not default payment methods can be removed.
        default_payment_method_fallback_enabled:
          type: boolean
          description: Whether or not the customer's default payment method should
            be used as a fallback when a subscription does not have a payment method.
        downgrade_behavior:
          type: string
          description: Controls how subscription changes should be handled when downgrading
            â€“ one of `immediate` or `pending`.
        payment_retry_window_weeks:
          type: integer
          description: The number of weeks to retry failed subscription payments before
            canceling the subscription.
        preservation_enabled:
          type: boolean
          description: Whether or not subscription preservation is enabled.
        preservation_locales:
          type: object
          description: 'A collection of locale strings that will be used when displaying
            the subscription preservation flow to customers. These strings have access
            to the following liquid variables: `amount` and `name`.'
        remind_at_period_percent_remaining:
          type: number
          description: Specifies the percentage of time remaining in the subscription
            period at which a reminder should be sent. For example, if set to 25%,
            the reminder will be triggered when there is 25% of the subscription period
            remaining.
        remind_after_days:
          type: integer
          nullable: true
          description: Specifies the minimum number of days that must pass since the
            last reminder (or subscription creation if no reminder has been sent)
            before a new reminder can be sent. For example, if set to 180, a reminder
            will only be sent if at least 180 days have passed since the last reminder.
            This prevents reminders from being sent too frequently across multiple
            subscription periods.
        require_upfront_payment_method:
          type: boolean
          description: Whether or not a payment method should be required for subscriptions
            that have an initial period amount of $0 (free trial or coupon).
        revoke_purchases_on_past_due:
          type: boolean
          description: Whether or not a purchase should be revoked when a subscription
            becomes past_due. If the subscription transitions to the `active` or `trialing`
            state the associated purchase will be automatically invoked again.
        upgrade_behavior:
          type: string
          description: Controls how subscription changes should be handled when upgrading
            â€“ one of `immediate` or `pending`.
    subscription_protocol_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/subscription_protocol_body"
      - properties:
          preservation_coupon:
            type: string
            description: The associated coupon that is applied to subscriptions when
              a cancellation reason with `coupon_enabled=true` is selected and the
              susbcription is preserved.
      - "$ref": "#/components/schemas/model_timestamps"
    swap_base:
      allOf:
      - properties:
          archived:
            type: boolean
            description: Whether or not this swap is archived.
          description:
            type: string
            nullable: true
            description: A description of this swap. This text will be visibile to
              customers in the checkout summary when offered the swap.
      - "$ref": "#/components/schemas/model_metadata"
    swap_body:
      allOf:
      - "$ref": "#/components/schemas/swap_base"
      - properties:
          price:
            type: string
            description: The UUID of the price to swap from.
          swap_price:
            type: string
            description: The UUID of the price to swap to.
    swap_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/swap_base"
      - properties:
          archived_at:
            type: integer
            nullable: true
            description: Time at which the object was archived. Measured in seconds
              since the Unix epoch.
          price:
            type: string
            description: The associated price to swap from.
          swap_price:
            type: string
            description: The associated price to swap to.
      - "$ref": "#/components/schemas/model_discarded_timestamp"
      - "$ref": "#/components/schemas/model_timestamps"
    tax_identifier_body:
      properties:
        number:
          type: string
          nullable: true
          description: The tax ID number.
        number_type:
          type: string
          description: The type of tax ID number.
    tax_identifier_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/tax_identifier_body"
      - properties:
          eu_vat_verified:
            type: boolean
            description: Whether or not this a verified EU VAT number based on regex
              validation and an attempted VIES check.
      - "$ref": "#/components/schemas/model_timestamps"
    tax_override_body:
      properties:
        shipping:
          type: boolean
          description: Whether or not this tax override applies to shipping.
        rate:
          type: number
          nullable: true
          description: The tax rate to use for this tax override.
        product_collection:
          type: string
          description: The UUID of the product collection. (Not required if `shipping=true`.)
        tax_zone:
          type: string
          description: The UUID of the tax zone.
    tax_override_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/tax_override_body"
      - properties:
          product_collection:
            type: string
            nullable: true
            description: The associated product collection.
          tax_zone:
            type: string
            description: The associated tax_zone.
      - "$ref": "#/components/schemas/model_timestamps"
    tax_protocol_base:
      properties:
        ca_tax_enabled:
          type: boolean
          description: If set to `true` GST taxes will be calculated for all Canadian
            provinces.
        default_rate:
          type: number
          nullable: true
          description: The default tax rate to use for checkouts when a specific `tax_registration`
            is not found. This will only apply if `default_tax_enabled=true`.
        default_tax_enabled:
          type: boolean
          description: Whether or not to use the `default_rate` when a specific `tax_registration`
            is not found.
        eu_micro_exemption_enabled:
          type: boolean
          description: If set to `true` VAT taxes will be calculated using the account's
            home country VAT rate.
        eu_tax_enabled:
          type: boolean
          description: If set to `true` VAT taxes will be calculated for all EU countries.
        tax_behavior:
          type: string
          description: Determines how taxes will be calculated. One of `exclusive`
            or `inclusive`.
        tax_enabled:
          type: boolean
          description: If set to `true` taxes will be automatically calculated.
        eu_vat_required:
          type: boolean
          description: Whether or not an `eu_vat` tax identifier is required when
            a customer's address is in the EU.
        eu_vat_unverified_behavior:
          type: string
          description: Determines how `eu_vat` tax identifiers will be handled when
            they are not verified against VIES. One of `apply_reverse_charge`, `error`,
            or `skip_reverse_charge`.
        eu_vat_local_reverse_charge:
          type: boolean
          description: Whether or not reverse charge should be applied when the customer's
            address is in the same country as the tax protocol address.
    tax_protocol_body:
      allOf:
      - "$ref": "#/components/schemas/tax_protocol_base"
      - properties:
          address:
            description: The associated address used for tax calculations
            allOf:
            - "$ref": "#/components/schemas/address_body"
          ca_tax_identifier:
            description: The tax identifier to be used for all Canadian provinces.
            allOf:
            - "$ref": "#/components/schemas/tax_identifier_body"
          eu_tax_identifier:
            description: The tax identifier to be used for all EU countries.
            allOf:
            - "$ref": "#/components/schemas/tax_identifier_body"
    tax_protocol_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/tax_protocol_base"
      - properties:
          address:
            type: string
            nullable: true
            description: The associated address used for tax calculations.
          ca_tax_identifier:
            type: string
            nullable: true
            description: The associated Canadian tax identifier.
          eu_tax_identifier:
            type: string
            nullable: true
            description: The associated EU tax identifier.
      - "$ref": "#/components/schemas/model_timestamps"
    tax_registration_body:
      properties:
        label:
          type: string
          nullable: true
          description: The tax label for this tax registration. If blank, the default
            tax label from the tax zone will be used.
        manual_rate:
          type: number
          nullable: true
          description: The manual tax rate to use for this tax registration.
        tax_identifier:
          description: The tax identifier to set for this tax registration.
          allOf:
          - "$ref": "#/components/schemas/tax_identifier_body"
        tax_zone:
          type: string
          description: The UUID of the tax zone.
    tax_registration_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/tax_registration_body"
      - properties:
          tax_identifier:
            type: string
            nullable: true
            description: The associated tax identifier.
          tax_zone:
            type: string
            description: The associated tax_zone.
      - "$ref": "#/components/schemas/model_timestamps"
    tax_zone_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - properties:
          country:
            type: string
            description: The country code.
          country_name:
            type: string
            description: The full country name.
          default_rate:
            type: number
            description: The default tax rate for the tax zone.
          default_label:
            type: string
            description: The label used to describe the default tax rate.
          manual:
            type: boolean
            description: Whether or not tax registrations for this zone require a
              `manual_rate`.
          region:
            type: string
            description: The tax region this zone is in.
          state:
            type: string
            description: The state/province code.
          state_name:
            type: string
            description: The full state/province name.
      - "$ref": "#/components/schemas/model_timestamps"
    tracking_body:
      allOf:
      - properties:
          number:
            type: string
            description: The tracking number provided by the courier.
          url:
            type: string
            nullable: true
            description: The URL to track this shipment on the courier's website.
              (This is inferred from the tracking number for some couriers.)
    tracking_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/tracking_body"
      - properties:
          courier_name:
            type: string
            nullable: true
            description: The name of the courier for this shipment. (This is inferred
              from the tracking number for some couriers.)
          fulfillment:
            type: string
            description: The associated fulfillment.
      - "$ref": "#/components/schemas/model_timestamps"
    upsell_base:
      allOf:
      - properties:
          amount_off:
            type: integer
            nullable: true
            description: Amount (in the `currency` of the price) that will be taken
              off line items associated with this upsell.
          duplicate_purchase_behavior:
            type: string
            description: How to handle duplicate purchases of the product â€“ can be
              one of `allow`, `block_within_checkout`, or `block`.
          fee_description:
            type: string
            description: The description for this upsell which will be visible to
              customers.
          percent_off:
            type: number
            nullable: true
            description: Percent that will be taken off line items associated with
              this upsell.
          replacement_behavior:
            type: string
            description: |
              Whether or not to replace line items in the associated checkout. Replacement occurs when a line item is upsold. Possible values include:
              - `none` (default): No line items will be replaced.
              - `all`: All line items will be replaced.
          step:
            type: string
            description: Where this upsell falls in position within the upsell funnel
              â€“ can be one of `initial`, `accepted`, or `declined`.
      - "$ref": "#/components/schemas/model_metadata"
    upsell_body:
      allOf:
      - "$ref": "#/components/schemas/upsell_base"
      - properties:
          price:
            type: string
            description: The UUID of the price.
          upsell_funnel:
            type: string
            description: The UUID of the upsell funnel.
    upsell_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/upsell_base"
      - properties:
          price:
            type: string
            description: The associated price.
          upsell_funnel:
            type: string
            description: The associated upsell funnel.
      - "$ref": "#/components/schemas/model_discarded_timestamp"
      - "$ref": "#/components/schemas/model_timestamps"
    upsell_funnel_base:
      allOf:
      - properties:
          archived:
            type: boolean
            description: Whether or not this upsell funnel is archived.
          enabled:
            type: boolean
            description: Whether or not this upsell funnel is enabled.
          filter_match_type:
            type: string
            nullable: true
            description: The matching strategy to use when filtering upsell funnels
              â€“ can be `null` or one of `all`, `any`, `none`. If `null`, the upsell
              funnel will not be filtered and will be applicable to all checkouts.
          filter_price_ids:
            type: array
            description: The prices to filter this upsell funnel by.
          filter_product_ids:
            type: array
            description: The products to filter this upsell funnel by.
          name:
            type: string
            nullable: true
            description: A name for this upsell that will be visible to customers.
          priority:
            type: integer
            description: The priority of this upsell in relation to other upsells.
              Must be in the range of `1` - `5` with `5` being the highest priority
              and `1` being the lowest.
      - "$ref": "#/components/schemas/model_metadata"
    upsell_funnel_body:
      allOf:
      - "$ref": "#/components/schemas/upsell_funnel_base"
    upsell_funnel_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/upsell_funnel_base"
      - properties:
          archived_at:
            type: integer
            nullable: true
            description: Time at which the object was archived. Measured in seconds
              since the Unix epoch.
          upsells:
            type: object
            nullable: true
            description: A list of associated upsells.
      - "$ref": "#/components/schemas/model_discarded_timestamp"
      - "$ref": "#/components/schemas/model_timestamps"
    user_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - properties:
          email:
            type: string
            description: The email address of the user.
          first_name:
            type: string
            description: The first name of the user.
          last_name:
            type: string
            description: The last name of the user.
      - "$ref": "#/components/schemas/model_timestamps"
    variant_base:
      allOf:
      - properties:
          amount:
            type: integer
            nullable: true
            description: The amount in cents to be charged, represented as a whole
              integer for this specific integer. If empty, the regular `Price` amount
              will be used. If the `Product` has multiple prices, then this amount
              will be ignored and the selected `Price` amount will be used.
          option_1:
            type: string
            description: The value for the first variant option.
          option_2:
            type: string
            nullable: true
            description: The value for the second variant option.
          option_3:
            type: string
            nullable: true
            description: The value for the third variant option.
          position:
            type: integer
            nullable: true
            description: The ordering position of this variant when displayed to customers.
          sku:
            type: string
            nullable: true
            description: The stock keeping unit for this variant.
      - "$ref": "#/components/schemas/model_metadata"
    variant_body:
      allOf:
      - "$ref": "#/components/schemas/variant_base"
      - properties:
          image:
            type: string
            description: The UUID of the media.
          product:
            type: string
            description: The UUID of the product.
          stock_adjustment:
            type: integer
            description: The amount to adjust the stock by. This can be a positive
              or negative number.
    variant_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/variant_base"
      - properties:
          available_stock:
            type: integer
            description: The total amount of stock available for purchase. This is
              the total `stock` on hand minus `held_stock`.
          currency:
            type: string
            description: Three-letter ISO currency code, in lowercase. This is inherited
              from the price.
          current_version:
            type: boolean
            description: Whether or not this object represents the current version
              of this variant. (This will be `false` if the association was created
              to this variant before it was altered. In this case, we will lookup
              the version of the variant at the time it was associated.)
          held_stock:
            type: integer
            description: The total amount of stock being held by unfulfilled line
              items.
          image:
            type: string
            nullable: true
            description: The associated media.
          option_names:
            type: array
            description: An array of the associated product's variant option names.
          product:
            type: string
            description: The associated product.
          stock:
            type: integer
            description: The total amount of stock on hand for this product.
      - "$ref": "#/components/schemas/model_timestamps"
    variant_option_body:
      allOf:
      - properties:
          display_type:
            type: string
            description: The display type of the variant option â€“ one of "radio" or
              "dropdown".
          name:
            type: string
            description: The variant option's name â€“ i.e. Size, Color, etc.
          position:
            type: integer
            nullable: true
            description: The ordering position of this variant option when displayed
              to customers.
      - "$ref": "#/components/schemas/model_metadata"
    variant_option_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/variant_option_body"
      - properties:
          product:
            type: string
            description: The associated product.
          values:
            type: array
            description: A list of values for this variant option. (These are inferred
              from the values set on variants.)
      - "$ref": "#/components/schemas/model_timestamps"
    verification_code_body:
      properties:
        email:
          type: string
          description: The email to send the verification code to.
    verification_code_verify_body:
      properties:
        code:
          type: string
          description: The code that was sent to the email.
        email:
          type: string
          description: The email the verification code was sent to.
    verification_code_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - properties:
          email:
            type: string
            description: The email the verification code was sent to.
          verified:
            type: boolean
            description: Whether or not this verification code has been verified.
          verified_at:
            type: integer
            nullable: true
            description: Date when the verification code was verified.
      - "$ref": "#/components/schemas/model_timestamps"
    webhook_endpoint_body:
      properties:
        description:
          type: string
          nullable: true
          description: An optional description of what this webhook endpoint is used
            for.
        enabled:
          type: boolean
          description: Whether or not this webhook endpoint is active.
        url:
          type: string
          description: The URL of this webhook endpoint.
        webhook_events:
          type: array
          description: The webhook events that this webhook endpoint should send webhooks
            for. For example, if `webhook_events=["order.created"]` then the webhook
            endpoint will only send webhooks when the `order.created` event occurs.
          items:
            type: string
    webhook_endpoint_response:
      allOf:
      - "$ref": "#/components/schemas/model_identifiers"
      - "$ref": "#/components/schemas/webhook_endpoint_body"
      - properties:
          automation_service:
            type: string
            nullable: true
            description: The automation service that this webhook endpoint is pointed
              at. One of `suretriggers` or `zapier`.
          erroring_grace_period_ends_at:
            type: integer
            nullable: true
            description: The time at which this webhook endpoint will be disabled
              if it continues to error.
          erroring_grace_period_started_at:
            type: integer
            nullable: true
            description: The time at which this webhook endpoint started erroring.
              A webhook endpoint is considered to be erroring when it returns a non
              2xx response code. After 3 days, with 40% or more of requests erroring,
              the webhook endpoint will be disabled.
          signing_secret:
            type: string
            description: The webhook endpointâ€™s signing secret, used to generate webhook
              signatures.
      - "$ref": "#/components/schemas/model_timestamps"
tags:
- name: Abandonded Checkouts
  description: |-
    An abandonded checkout represents a customer's most recent incomplete checkout.
    When a checkout is associated with a customer and is left unpaid for 30 minutes a corresponding abandoned checkout is created. Only one abandoned checkout will be created per customer every 10 days.
- name: Abandoned Checkout Protocols
  description: An abandoned checkout protocol represents the abandoned checkout settings
    for an account.
- name: Accounts
  description: This is an object representing a SureCart account. You can retrieve
    it to see properties on the account like it's current - name or default currency.
- name: Activations
  description: An activation represents a single use of a license.
- name: Affiliation Products
  description: An affiliation product allows for setting a specific commission structure
    for a product and affiliation.
- name: Affiliation Protocols
  description: An affiliation protocol represents the affiliate settings for an account.
- name: Affiliation Requests
  description: An affiliation request represents a request from an affiliate to join
    an account's affiliate program.
- name: Affiliations
  description: An affiliation represents a relationship between an affiliate and an
    account.
- name: Balance Transactions
  description: You may modify a customer's balance by creating a balance transaction,
    which increments or decrements the customer's balance by the specified amount.
- name: Balances
  description: Each customer has a balance value for each currency, which denotes
    a debit or credit that's automatically applied to their next invoice upon finalizing.
- name: Brands
  description: A brand represents the design and branding settings for an account.
- name: Bulk Actions
  description: A bulk action is a way to perform a single action on multiple resources
    at once.
- name: Bumps
  description: A bump represents a price that will be conditionally recommended to
    customers during checkout. Bumps are displayed below the checkout summary and
    offer an easy way to add additional products to the checkout. They are a more
    powerful alternative to swaps, but they are more intrusive to the checkout experience.
- name: Cancellation Acts
  description: A cancellation act represents a customer attempt to cancel a subscription.
- name: Cancellation Reasons
  description: Cancellation reasons are specific reasons that a customer can select
    from when cancelling a subscription.
- name: Charges
  description: A Charge represents a credit or debit card transaction that was captured
    through one of your processors. Only succesfully captured charges are recorded
    in SureCart.
- name: Checkouts
  description: A checkout represents a collection of one-time and/or subscription
    products that a customer intends to purchase.
- name: Checkout Portal Protocols
  description: A checkout portal protocol represents the checkout portal settings
    for an account.
- name: Clicks
  description: A click is a record of a customer clicking on an affiliate link. Click
    records are associated with checkouts to create referrals.
- name: Coupons
  description: |-
    A coupon contains information about a percent-off or amount-off discount.
    The coupon object can be used to discount either one-time payments or subscriptions. There are some additional parameters that apply to subscriptions, but are not applicable to one-time payments, such as duration. Regardless of what duration is set to, it only applies once for one-time payments.
- name: Customer Links
  description: |-
    Customer links are temporary objects that allow access to customers through email lookup.
    Each customer link is valid for the greater of 1 hour after it's `created_at` time or 1 hour after it's `first_used_at` time. This means that if a customer link is not used within the first hour it expires. If a customer link is used within the first hour then it is valid for another hour starting from the time it was first used. So, a customer link that is used 30min after it's created will be valid for a total of 1hr 30min.
- name: Customer Notification Protocols
  description: A customer notification protocol represents the customer notification
    settings for an account.
- name: Customers
  description: Customer objects allow you to perform recurring charges, and to track
    multiple charges, that are associated with the same customer.
- name: Customer Portal Protocols
  description: A customer portal protocol represents the customer portal settings
    for an account.
- name: Display Currencies
  description: Display currencies are the currencies that are available to customers
    from the currency selector on your store.
- name: Downloads
  description: Downloads represent the medias that can be downloaded when a specific
    product is purchased.
- name: Events
  description: Events are our way of letting you know when something interesting happens
    in your account. When an interesting event occurs, we create a new `Event` object.
    For example, when a subscription updates, we create a `subscription.updated` event.
- name: Exports
  description: Exports allow you to download your raw data from your SureCart account.
- name: Fees
  description: A fee represents an additional amount added or subtracted from a specific
    line item.
- name: Fulfillment Items
  description: A fulfillment item represents a specific line item being shipped to
    a customer within a fulfillment.
- name: Fulfillments
  description: A fulfillment represents a shipment of products within an order to
    a customer.
- name: Imports
  description: Imports allow you to upload raw data into your SureCart account to
    batch create customers, products, subscriptions, etc.
- name: Invoices
  description: Invoices are statements of amounts owed by a customer. They wrap a
    checkout and can be configured to collect payment automatically or be sent to
    the customer for payment.
- name: Licenses
  description: A license represents permission for a customer to use a specific product.
    Each license has an auto-generated `key` which can be used with the public license
    endpoints.
- name: Line Items
  description: A line item represents a price and it's quantity being purchased by
    a customer within a checkout.
- name: Manual Charges
  description: A manual charge represents record of a payment that was captured outside
    of SureCart.
- name: Manual Payment Methods
  description: Manual payment methods are used to allow customers to checkout with
    manual approval â€“ i.e. cash on delivery, bank transfers, etc.
- name: Medias
  description: Medias represent files that are hosted on our servers. Medias are uploaded
    directly to the underlying hosting service. To learn more about how medias work,
    please contact support.
- name: Notes
  description: Notes are snippets of text that can be attached to objects to provide
    extra context. Notes can be added to `Customer`, `Order`, and `Subscription` objects.
- name: Order Protocols
  description: A order protocol represents the order settings for an account.
- name: Orders
  description: An order is a customer's completed request to purchase one or more
    products. An order is created when a checkout is paid.
- name: Payment Failures
  description: A payment failure represents an attempt to pay a checkout that failed.
- name: Payment Intents
  description: A payment intent represents the process of collecting a payment method
    from your customer.
- name: Payment Methods
  description: Payment method objects represent your customer's payment instruments.
- name: Payout Groups
  description: A payout group represents a group of payouts that are created together.
- name: Payouts
  description: A payout represents a payment to an affiliate.
- name: Periods
  description: A period represents a billing interval for a subscription.
- name: Prices
  description: |-
    Prices define the unit cost, currency, and (optional) billing cycle for both recurring and one-time purchases of products. Products help you track inventory or provisioning, and prices help you track payment terms. Different physical goods or levels of service should be represented by products, and pricing options should be represented by prices.
    This approach lets you change prices without having to change your provisioning scheme. For example, you might have a single \"gold\" product that has prices for $10/month, $100/year, and â‚¬9 once.
- name: Processors
  description: A processor represents a connection to a third-party payment processor
    like Stripe.
- name: Product Collections
  description: A list of related products - used to categorize products.
- name: Product Groups
  description: A group of related products â€“ used to configure which products a customer
    can switch between when updating a subscription.
- name: Product Medias
  description: Product medias represent a product's images.
- name: Products
  description: Products describe the specific goods or services you offer to your
    customers. For example, you might offer a Standard and Premium version of your
    goods or service; each version would be a separate Product. They can be used in
    conjunction with Prices to configure pricing and Subscriptions.
- name: Promotions
  description: A Promotion represents a customer-redeemable code for a coupon. It
    can be used to create multiple codes for a single coupon.
- name: Purchases
  description: A purchase represents a specific product that a customer has paid for
    (one-time products), or is currently paying for (recurring products via a subscription).
    The purchase model is a summary of all products that a customer current should
    have "access" to.
- name: Referral Items
  description: A referral item represents a specific line item within a referral.
- name: Referrals
  description: A referral represents a checkout that is associated with an affiliate.
- name: Refunds
  description: Refund objects allow you to refund a charge that has previously been
    created but not yet refunded. Funds will be refunded to the credit or debit card
    that was originally charged.
- name: Return Items
  description: A return item represents a specific line item being returned from a
    customer within a return request.
- name: Return Requests
  description: A return request represents a return of products within an order from
    a customer.
- name: Reviews
  description: A review represents a customer's review of a product.
- name: Review Medias
  description: Review medias represent the media that is associated with a review.
- name: Review Protocols
  description: A review protocol represents the review settings for an account.
- name: Shipping Methods
  description: Shipping methods represent the different speeds/classes of shipping
    that a store offers â€“ i.e. `Express`, `Ground`, etc.
- name: Shipping Profiles
  description: A shipping profile is a grouping of products that have the same shipping
    zones and rates. Each product can belong to one shipping profile.
- name: Shipping Protocols
  description: A shipping protocol represents the shipping settings for an account.
- name: Shipping Rates
  description: Shipping rates represent the specific rules for determining the cost
    of shipping based on the products within a checkout.
- name: Shipping Zones
  description: A shipping zone represents a geographical (group of countries) boundary
    for setting specific shipping rates within a shipping profile.
- name: Statistics
  description: A group of endpoints that provide high level statistics on resources.
- name: Subscription Protocols
  description: A subscription protocol represents the subscription settings for an
    account.
- name: Subscriptions
  description: A Subscription represents a recurring schedule to charge a customer
    on one of your processors.
- name: Swaps
  description: A swap represents a price that will be conditionally recommended to
    customers during checkout. Swaps are displayed in the checkout summary and can
    be easily toggled on or off. They are non-intrusive alternative to bumps, and
    offer customers an easy way to flip between two prices.
- name: Tax Overrides
  description: A tax override is a manual tax rate that will be applied to products
    in a collection or shipping within a specific tax zone.
- name: Tax Protocols
  description: A tax protocol represents the tax settings for an account.
- name: Tax Registrations
  description: A tax registration represents a tax zone that is enabled for an account.
    Taxes will not be calculated for checkouts within a tax zone unless a matching
    tax registration exists.
- name: Tax Zones
  description: A tax zone represents a geographic area (country and state combinations)
    that taxes can be calculated for.
- name: Trackings
  description: A tracking represents the tracking number information from a shipping
    courier.
- name: Upsell Funnels
  description: An upsell funnel represents a group of upsells that will be presented
    to customers after checkout in a specific order.
- name: Upsells
  description: An upsell represents a price (maybe discounted) that will be offered
    to customers after checkout.
- name: Variant Options
  description: Variant options represent the custom properties of a product â€“ i.e.
    `Size`, `Color`, etc.
- name: Variant Values
  description: Variant values represent the custom values of a specific variant option.
    For example, a variant option named `Color` could have variant values of `Red`
    and `Blue`.
- name: Variants
  description: A variant represents one version of a product with several options.
    Each product can have a maximum of three variant options and a maximum of 100
    variants.
- name: Verification Codes
  description: |-
    Verification codes are short-lived authentication codes that can be used to verify access to an email address. They provide a secure way of granting access to the customer portal without requiring the customer to have a password.
    Each verification code is valid for 10 minutes, and you are limited to creating 1 every minute per email address.
- name: Webhook Endpoints
  description: |-
    You can configure webhook endpoints via the API to be notified about events that happen in your SureCart account.
    Most users configure webhooks from the dashboard, which provides a user interface for registering and testing your webhook endpoints.
paths:
  "/v1/abandoned_checkout_protocol":
    get:
      summary: Retrieve
      tags:
      - Abandoned Checkout Protocols
      operationId: retrieve_abandoned_checkout_protocol
      description: Retrieves details of the current account's abandoned checkout protocol.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: d6a2c144-46cb-4b00-8e44-605a0df00964
                object: abandoned_checkout_protocol
                enabled: false
                first_promotion_notification:
                grace_period_days: 0
                ignore_purchased_products: false
                notification_delays:
                - 3600
                - 86400
                - 432000
                promotion_expires_after_days:
                test_mode_enabled: true
                coupon: 7361a5a7-c826-4bed-825a-149c3058c953
                created_at: 1758210305
                updated_at: 1758210305
              schema:
                "$ref": "#/components/schemas/abandoned_checkout_protocol_response"
    patch:
      summary: Update
      tags:
      - Abandoned Checkout Protocols
      operationId: update_abandoned_checkout_protocol
      description: Updates the current account's abandoned checkout protocol.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: a02566e2-43d2-4c9b-8d34-2f3e358d7303
                object: abandoned_checkout_protocol
                enabled: false
                first_promotion_notification:
                grace_period_days: 0
                ignore_purchased_products: false
                notification_delays:
                - 3600
                - 86400
                - 432000
                promotion_expires_after_days:
                test_mode_enabled: true
                coupon: c18e53cd-f038-4c50-a668-c5399972d5e0
                created_at: 1758210306
                updated_at: 1758210306
              schema:
                "$ref": "#/components/schemas/abandoned_checkout_protocol_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                abandoned_checkout_protocol:
                  allOf:
                  - "$ref": "#/components/schemas/abandoned_checkout_protocol_body"
              example:
                abandoned_checkout_protocol:
                  enabled: false
  "/v1/abandoned_checkouts":
    get:
      summary: List
      tags:
      - Abandonded Checkouts
      operationId: list_abandonded_checkout
      description: Returns a list of your abandonded checkouts.
      parameters:
      - name: customer_ids[]
        in: query
        description: Only return objects that belong to the given customers.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: live_mode
        in: query
        description: Only return objects that are live mode or test mode.
        required: false
        schema:
          type: boolean
      - name: notification_status[]
        in: query
        description: Only return objects with the given notification_status.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/abandoned_checkouts"
                data:
                - id: 5cbace71-d788-45e2-8ad5-8b90c0c6ffa0
                  object: abandoned_checkout
                  notifications_enabled: true
                  notification_status: not_scheduled
                  notifications_scheduled_at: []
                  portal_url: http://app.example.com/portal_redirect/abandoned_checkouts/5cbace71-d788-45e2-8ad5-8b90c0c6ffa0
                  recovery_status: abandoned
                  recovered_at:
                  checkout: 733f094c-4f80-4eb9-9fea-4a915dd60177
                  customer: 5831992b-42e3-4917-ba7a-11c430f2849c
                  promotion:
                  recovered_checkout:
                  created_at: 1758208206
                  updated_at: 1758210306
              schema:
                "$ref": "#/components/schemas/list_response"
  "/v1/abandoned_checkouts/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Abandonded Checkouts
      operationId: retrieve_abandonded_checkout
      description: Retrieves details of a specific abandonded checkout.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 44fc1c28-d6f5-40f4-bea9-2f0f630b84f9
                object: abandoned_checkout
                notifications_enabled: true
                notification_status: not_scheduled
                notifications_scheduled_at: []
                portal_url: http://app.example.com/portal_redirect/abandoned_checkouts/44fc1c28-d6f5-40f4-bea9-2f0f630b84f9
                recovery_status: abandoned
                recovered_at:
                checkout: 3402be7e-10b0-43e4-9fb8-4a17394790e9
                customer: 3cbb9efe-2bbe-49ef-8629-e79837952b84
                promotion:
                recovered_checkout:
                created_at: 1758208206
                updated_at: 1758210306
              schema:
                "$ref": "#/components/schemas/abandoned_checkout_response"
    patch:
      summary: Update
      tags:
      - Abandonded Checkouts
      operationId: update_abandonded_checkout
      description: Updates a specific abandoned checkout.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: c623016f-6456-4956-bb80-7d316de29ab4
                object: abandoned_checkout
                notifications_enabled: true
                notification_status: not_scheduled
                notifications_scheduled_at: []
                portal_url: http://app.example.com/portal_redirect/abandoned_checkouts/c623016f-6456-4956-bb80-7d316de29ab4
                recovery_status: abandoned
                recovered_at:
                checkout: d101bd62-a794-4cc4-b84a-5aa729eea480
                customer: 20f950eb-243a-4145-afbc-789e44f01811
                promotion:
                recovered_checkout:
                created_at: 1758208207
                updated_at: 1758210307
              schema:
                "$ref": "#/components/schemas/abandoned_checkout_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                abandoned_checkout:
                  allOf:
                  - "$ref": "#/components/schemas/abandoned_checkout_body"
              example:
                abandoned_checkout:
                  notifications_enabled: true
  "/v1/account":
    get:
      summary: Retrieve
      tags:
      - Accounts
      operationId: retrieve_account
      description: Retrieves details of the current account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 5aa680ec-a272-4dd7-803f-ad59e53f8b0c
                object: account
                cache_keys:
                  coupons: coupons/query-0661f5b30ef923fcb3df4f828b32a43b-2-20250918154507090305
                  display_currencies: display_currencies/query-d78d615daf3e0919bcdee040608bcbbd-1-20250918154507084813
                  manual_payment_methods: manual_payment_methods/query-376e0a0357f2d8c5637c828278400797-0
                  processors: processors/query-019ab4d5b582b20cf7578e19a50c907b-1-20250918154507120481
                  products: products/query-6ea9c9c8266dd8ed9fdab6b4f37ee698-0
                  product_collections: product_collections/query-ee50868a6cc3f112be9c837a7269d39c-0
                  webhook_endpoints: webhook_endpoints/query-e8bbd9bcc5ff1d3277bbf9a0f6d03f7d-0
                claimed: true
                claim_url:
                claim_window_ends_at:
                currency: usd
                currency_locked: false
                locale: en
                medias_total_byte_size: 0
                name: Test Account
                slug: test-account
                time_zone: Etc/UTC
                url:
                plan:
                  free: true
                  name: Launch
                public_token: pt_rEEtSThnBh7eWNL4MX2pqYoM
                seeded_at:
                abandoned_checkout_protocol: c7517f37-321e-4358-98fc-62f49dd446b9
                affiliation_protocol: a72c2d9a-a6a2-432f-907e-a9ad4d0b7dc4
                brand: c02f09d0-0a37-4d5a-bdb8-0b16a296eda7
                customer_notification_protocol: c86788fd-007b-4a3b-a0f9-bf6c9a2e3278
                customer_portal_protocol: d630af18-fa1f-4359-ae46-16e37d2157a4
                order_protocol: d9656d69-3847-4433-a629-79c7dbb406a1
                subscription_protocol: 6747b9af-6d42-430f-bd6c-9526f19e1f2e
                shipping_protocol: bad04e25-fa83-4763-8a40-84d930e4b014
                tax_protocol: 3dbd8555-1de2-4b8b-bbb0-982699c10537
                review_protocol: a58b67b3-0151-4861-b9ed-a3f03103d1bf
                test_data_purged_at:
                created_at: 1758210307
                updated_at: 1758210307
              schema:
                "$ref": "#/components/schemas/account_response"
    patch:
      summary: Update
      tags:
      - Accounts
      operationId: update_account
      description: Updates the current account.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: bed8b41b-18e1-4d49-95cd-6a6bbde0a865
                object: account
                cache_keys:
                  coupons: coupons/query-38941c68d65e47fa61ec28f51a31be90-2-20250918154507271421
                  display_currencies: display_currencies/query-ae819c5a13222c5ead2a87cc55512d3d-2-20250918154507278331
                  manual_payment_methods: manual_payment_methods/query-5e81e0c4cb1036f29bfc87449bb5d989-0
                  processors: processors/query-6ffc0087f4fd7d3703db7ee2e95b8f5c-1-20250918154507237842
                  products: products/query-dd41cf7fb0e513ae762e7abe166cd4ac-0
                  product_collections: product_collections/query-5ab77f883c13ad64179bdc41078aa463-0
                  webhook_endpoints: webhook_endpoints/query-f1fb89acf31efe15be25b35ddc911edd-0
                claimed: true
                claim_url:
                claim_window_ends_at:
                currency: aud
                currency_locked: false
                locale: en
                medias_total_byte_size: 0
                name: New Account Name
                slug: test-account
                time_zone: Etc/UTC
                url:
                plan:
                  free: true
                  name: Launch
                public_token: pt_pKvFvymgSVpRAEqsGg1fRXsF
                seeded_at:
                abandoned_checkout_protocol: b2f7d0de-49a0-4f1f-bd98-832b79e0960b
                affiliation_protocol: e6af9e97-f966-4288-88ce-0a6addcf2729
                brand: 5c3767fe-81d4-423c-877d-f85f2929b57b
                customer_notification_protocol: 777296fb-050b-45d4-bfa5-03c84531a06b
                customer_portal_protocol: 0001d04f-c797-447c-abb1-df26709263dd
                order_protocol: 72160178-106c-4065-9064-435b49f959fd
                subscription_protocol: 36195f3b-88fb-435c-99f0-83d0bcf82273
                shipping_protocol: b75df49c-7f05-4190-84e8-cd66a56a7eac
                tax_protocol: 221fee84-323e-4e03-a74b-f56ea8b9e9e5
                review_protocol: 5d7d5c4e-4d13-4596-9553-a65e4686a832
                test_data_purged_at:
                created_at: 1758210307
                updated_at: 1758210307
              schema:
                "$ref": "#/components/schemas/account_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                account:
                  allOf:
                  - "$ref": "#/components/schemas/account_body"
              example:
                account:
                  name: New Account Name
                  currency: aud
  "/v1/activations":
    get:
      summary: List
      tags:
      - Activations
      operationId: list_activation
      description: Returns a list of your activations.
      parameters:
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: license_ids[]
        in: query
        description: Only return objects that belong to the given licenses.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/activations"
                data:
                - id: 7b33440d-f5c8-42a8-8475-3b1cd2e8a891
                  object: activation
                  counted: true
                  name:
                  fingerprint: example.com
                  license: a4ea5c5c-0237-4350-83e0-0730a5d05d1c
                  created_at: 1758210308
                  updated_at: 1758210308
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Activations
      operationId: create_activation
      description: Creates a new activation.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 301a28cb-397b-4c64-b5e7-b97c1613ea8e
                object: activation
                counted: true
                name: My Site
                fingerprint: mysite.com
                license: f99e19ba-0118-4e6a-aaef-3b2ccf86136a
                created_at: 1758210309
                updated_at: 1758210309
              schema:
                "$ref": "#/components/schemas/activation_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                activation:
                  allOf:
                  - "$ref": "#/components/schemas/activation_body"
              example:
                activation:
                  name: My Site
                  fingerprint: mysite.com
                  license_id: f99e19ba-0118-4e6a-aaef-3b2ccf86136a
  "/v1/activations/{id}":
    get:
      summary: Retrieve
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Activations
      operationId: retrieve_activation
      description: Retrieves details of a specific activation.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: bcf979ab-9cf3-4f6b-94c5-94e263527749
                object: activation
                counted: true
                name:
                fingerprint: example.com
                license: 8532f0b5-5bc0-4349-abfe-8f69322b9a1a
                created_at: 1758210309
                updated_at: 1758210309
              schema:
                "$ref": "#/components/schemas/activation_response"
    patch:
      summary: Update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Activations
      operationId: update_activation
      description: Updates a specific activation.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 2e81b0b1-1178-490e-b602-13a408b35e6c
                object: activation
                counted: true
                name: New Activation Name
                fingerprint: example.com
                license: 329df6a1-cbe6-448d-bb79-157de5cd3813
                created_at: 1758210310
                updated_at: 1758210310
              schema:
                "$ref": "#/components/schemas/activation_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                activation:
                  allOf:
                  - "$ref": "#/components/schemas/activation_body"
              example:
                activation:
                  name: New Activation Name
    delete:
      summary: Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Activations
      operationId: delete_activation
      description: Deletes a specific activation.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: ea532d1c-3e57-4afd-a2e0-86b2368ed472
                object: activation
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/affiliation_products":
    get:
      summary: List
      tags:
      - Affiliation Products
      operationId: list_affiliation_product
      description: Returns a list of your affiliation products.
      parameters:
      - name: affiliation_ids[]
        in: query
        description: Only return objects that belong to the given affiliations.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: product_ids[]
        in: query
        description: Only return objects that belong to the given products.
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/affiliation_products"
                data:
                - id: 412693d5-20e7-4d68-9145-b0ebc5d34880
                  object: affiliation_product
                  affiliation: 364ce434-7625-40ec-8910-460620b09117
                  product: '01821e2e-eb6f-406a-b2d2-e7a417d5835c'
                  commission_structure: 04e6927f-326f-48a8-8e03-121b5e2f0851
                  created_at: 1758210311
                  updated_at: 1758210311
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Affiliation Products
      operationId: create_affiliation_product
      description: Creates a new affiliation product.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 0ea379a3-179f-413f-89c4-a66e53724f6d
                object: affiliation_product
                affiliation: d2d9dc70-8efb-4d8c-866e-26c041eab126
                product: b9fb497b-37d0-4813-8d8e-25dd6709684f
                commission_structure: 2f2292af-6efb-44f7-bc10-ae06d4b389a6
                created_at: 1758210311
                updated_at: 1758210311
              schema:
                "$ref": "#/components/schemas/affiliation_product_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                affiliation_product:
                  allOf:
                  - "$ref": "#/components/schemas/affiliation_product_body"
              example:
                affiliation_product:
                  affiliation: d2d9dc70-8efb-4d8c-866e-26c041eab126
                  product: b9fb497b-37d0-4813-8d8e-25dd6709684f
                  commission_structure:
                    percent_commission: 33.33
  "/v1/affiliation_products/{id}":
    get:
      summary: Retrieve
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Affiliation Products
      operationId: retrieve_affiliation_product
      description: Retrieves details of a specific a specific affiliation product.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 9385133f-ee81-4852-9657-5d22134d0544
                object: affiliation_product
                affiliation: 57f7404e-e6ea-4803-93b0-c5aa65671e2f
                product: 24ed93a6-925a-4e45-ae22-31b41451d7ac
                commission_structure: 8bf03be5-35c4-4454-aac9-9770126cef34
                created_at: 1758210311
                updated_at: 1758210311
              schema:
                "$ref": "#/components/schemas/affiliation_product_response"
    patch:
      summary: Update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Affiliation Products
      operationId: update_affiliation_product
      description: updates specific affiliation product.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 0fa88450-b64a-4fb5-9ea9-e311c71d7541
                object: affiliation_product
                affiliation: f823fd04-470b-4854-b8cd-fcf31f78a41f
                product: 24db8e81-ec6c-4233-9f46-f21f89859e0a
                commission_structure: 12f2412f-517c-4674-9da2-4814513d0a28
                created_at: 1758210311
                updated_at: 1758210311
              schema:
                "$ref": "#/components/schemas/affiliation_product_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                affiliation_product:
                  allOf:
                  - "$ref": "#/components/schemas/affiliation_product_body"
              example:
                affiliation_product:
                  commission_structure:
                    percent_commission: 33.33
    delete:
      summary: Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Affiliation Products
      operationId: delete_affiliation_product
      description: Deletes a specific affiliation product.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 68c51459-c62a-4c95-9ad6-142cadc33a33
                object: affiliation_product
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/affiliation_protocol":
    get:
      summary: Retrieve
      tags:
      - Affiliation Protocols
      operationId: retrieve_affiliation_protocol
      description: Retrieves details of the current account's affiliation protocol.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 9f3931e5-97f4-43b8-917e-cb6f5f9c8dca
                object: affiliation_protocol
                affiliation_request_bio_label:
                affiliation_request_payout_email_enabled: false
                auto_approve_affiliations: false
                auto_approve_referrals: false
                description:
                enabled: false
                external_portal_enabled: false
                external_portal_url:
                payout_description:
                portal_back_url:
                portal_heading: Affiliate Portal
                portal_description: View your referrals, clicks, payout history, and
                  manage your affiliate account.
                referral_url:
                referrer_type: last
                terms_url:
                tracking_length_days: 30
                wordpress_plugin_tracking_enabled: true
                zero_commission_amount_referrals_enabled: true
                commission_structure: dc98b80c-5f57-4fa0-8671-abcc066646ac
                created_at: 1758210311
                updated_at: 1758210311
              schema:
                "$ref": "#/components/schemas/affiliation_protocol_response"
    patch:
      summary: Update
      tags:
      - Affiliation Protocols
      operationId: update_affiliation_protocol
      description: Updates the current account's affiliation protocol.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: dfb6ccd0-e5fd-40e4-a3cb-5eb9d6b91cf1
                object: affiliation_protocol
                affiliation_request_bio_label:
                affiliation_request_payout_email_enabled: false
                auto_approve_affiliations: false
                auto_approve_referrals: false
                description:
                enabled: false
                external_portal_enabled: false
                external_portal_url:
                payout_description:
                portal_back_url:
                portal_heading: Affiliate Portal
                portal_description: View your referrals, clicks, payout history, and
                  manage your affiliate account.
                referral_url:
                referrer_type: last
                terms_url:
                tracking_length_days: 30
                wordpress_plugin_tracking_enabled: true
                zero_commission_amount_referrals_enabled: true
                commission_structure: 2124463b-d9d1-4a27-aa7b-a5ce3259beb3
                created_at: 1758210311
                updated_at: 1758210311
              schema:
                "$ref": "#/components/schemas/affiliation_protocol_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                affiliation_protocol:
                  allOf:
                  - "$ref": "#/components/schemas/affiliation_protocol_body"
              example:
                affiliation_protocol:
                  enabled: false
                  commission_structure:
                    percent_commission: 33.33
  "/v1/affiliation_requests":
    get:
      summary: List
      tags:
      - Affiliation Requests
      operationId: list_affiliation_request
      description: Returns a list of your affiliation requests.
      parameters:
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: query
        in: query
        description: The query to be used for full text search of this collection.
        required: false
        schema:
          type: string
      - name: status[]
        in: query
        description: Only return objects with the given status.
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/affiliation_requests"
                data:
                - id: 36a2d3ba-5a65-4079-9249-6b76587b8df6
                  object: affiliation_request
                  bio: I will promote your products to all my followers!
                  email: test-affiliate-1@example.com
                  first_name: Test
                  last_name: Affiliate 1
                  metadata: {}
                  payout_email:
                  status: pending
                  url:
                  portal_url: http://app.example.com/portal_redirect/affiliation_requests/36a2d3ba-5a65-4079-9249-6b76587b8df6
                  created_at: 1758210312
                  updated_at: 1758210312
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Affiliation Requests
      operationId: create_affiliation_request
      description: Creates a new affiliation request.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 3099b88f-7544-40ee-ad4f-d02a064f2ad2
                object: affiliation_request
                bio: I have lots of followers!
                email: test@example.com
                first_name: Jon
                last_name: Smith
                metadata: {}
                payout_email:
                status: pending
                url:
                portal_url: http://app.example.com/portal_redirect/affiliation_requests/3099b88f-7544-40ee-ad4f-d02a064f2ad2
                created_at: 1758210312
                updated_at: 1758210312
              schema:
                "$ref": "#/components/schemas/affiliation_request_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                affiliation_request:
                  allOf:
                  - "$ref": "#/components/schemas/affiliation_request_body"
              example:
                affiliation_request:
                  email: test@example.com
                  first_name: Jon
                  last_name: Smith
                  bio: I have lots of followers!
  "/v1/affiliation_requests/{id}":
    get:
      summary: Retrieve
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Affiliation Requests
      operationId: retrieve_affiliation_request
      description: Retrieves details of a specific affiliation request.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 499e0496-0d37-4cee-a7ba-980b0d96ef26
                object: affiliation_request
                bio: I will promote your products to all my followers!
                email: test-affiliate-3@example.com
                first_name: Test
                last_name: Affiliate 3
                metadata: {}
                payout_email:
                status: pending
                url:
                portal_url: http://app.example.com/portal_redirect/affiliation_requests/499e0496-0d37-4cee-a7ba-980b0d96ef26
                created_at: 1758210312
                updated_at: 1758210312
              schema:
                "$ref": "#/components/schemas/affiliation_request_response"
    patch:
      summary: Update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Affiliation Requests
      operationId: update_affiliation_request
      description: Updates a specific affiliation request.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: f10ff614-5c21-4a0d-9dd0-d97a028e028e
                object: affiliation_request
                bio: I have lots of followers!
                email: test-affiliate-4@example.com
                first_name: Test
                last_name: Affiliate 4
                metadata: {}
                payout_email:
                status: pending
                url:
                portal_url: http://app.example.com/portal_redirect/affiliation_requests/f10ff614-5c21-4a0d-9dd0-d97a028e028e
                created_at: 1758210312
                updated_at: 1758210312
              schema:
                "$ref": "#/components/schemas/affiliation_request_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                affiliation_request:
                  allOf:
                  - "$ref": "#/components/schemas/affiliation_request_body"
              example:
                affiliation_request:
                  bio: I have lots of followers!
    delete:
      summary: Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Affiliation Requests
      operationId: delete_affiliation_request
      description: Deletes a specific affiliation request.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 4364ddfe-3c28-4a9e-a21b-997f5952e58c
                object: affiliation_request
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/affiliations":
    get:
      summary: List
      tags:
      - Affiliations
      operationId: list_affiliation
      description: Returns a list of your affiliations.
      parameters:
      - name: active
        in: query
        description: Only return objects that are active or not.
        required: false
        schema:
          type: boolean
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: query
        in: query
        description: The query to be used for full text search of this collection.
        required: false
        schema:
          type: string
      - name: sort
        in: query
        description: The sorting column and order to be used for this collection.
          Available sorting columns for this endpoint are `created_at`, `name`, and
          `updated_at`.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/affiliations"
                data:
                - id: 519c760a-be4f-41d6-b55e-d54b495264e3
                  object: affiliation
                  active: true
                  bio:
                  code: 279AC80A
                  email: reinger_margart@mcdermott.example
                  first_name: Margart
                  last_name: Reinger
                  metadata: {}
                  payout_email:
                  url:
                  portal_url: http://app.example.com/portal_redirect/affiliations/519c760a-be4f-41d6-b55e-d54b495264e3
                  referral_url: "?aff=279ac80a"
                  total_commission_amount: 0
                  total_not_paid_commission_amount: 0
                  commission_structure:
                  discarded_at:
                  created_at: 1758210312
                  updated_at: 1758210312
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Affiliations
      operationId: create_affiliation
      description: Creates a new affiliation.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 49d06c99-2458-4f5d-877b-4889faece254
                object: affiliation
                active: true
                bio: I have lots of followers!
                code: 6D6272EC
                email: test@example.com
                first_name: Jon
                last_name: Smith
                metadata: {}
                payout_email:
                url:
                portal_url: http://app.example.com/portal_redirect/affiliations/49d06c99-2458-4f5d-877b-4889faece254
                referral_url: "?aff=6d6272ec"
                total_commission_amount: 0
                total_not_paid_commission_amount: 0
                commission_structure:
                discarded_at:
                created_at: 1758210312
                updated_at: 1758210312
              schema:
                "$ref": "#/components/schemas/affiliation_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                affiliation:
                  allOf:
                  - "$ref": "#/components/schemas/affiliation_body"
              example:
                affiliation:
                  email: test@example.com
                  first_name: Jon
                  last_name: Smith
                  bio: I have lots of followers!
  "/v1/affiliations/{id}":
    get:
      summary: Retrieve
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Affiliations
      operationId: retrieve_affiliation
      description: Retrieves details of a specific affiliation.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: dc413127-bb6d-4994-b96d-4643c86cf8dd
                object: affiliation
                active: true
                bio:
                code: 4D8748A0
                email: blick_dolly@jakubowski.example
                first_name: Dolly
                last_name: Blick
                metadata: {}
                payout_email:
                url:
                portal_url: http://app.example.com/portal_redirect/affiliations/dc413127-bb6d-4994-b96d-4643c86cf8dd
                referral_url: "?aff=4d8748a0"
                total_commission_amount: 0
                total_not_paid_commission_amount: 0
                commission_structure:
                discarded_at:
                created_at: 1758210312
                updated_at: 1758210312
              schema:
                "$ref": "#/components/schemas/affiliation_response"
    patch:
      summary: Update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Affiliations
      operationId: update_affiliation
      description: updates specific affiliation.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: d342df40-5486-4c17-b5b7-35518be97b7b
                object: affiliation
                active: true
                bio: I have 1 million followers!
                code: 4AC0E8AF
                email: larson.kristofer@abshire-fay.example
                first_name: Kristofer
                last_name: Larson
                metadata: {}
                payout_email:
                url:
                portal_url: http://app.example.com/portal_redirect/affiliations/d342df40-5486-4c17-b5b7-35518be97b7b
                referral_url: "?aff=4ac0e8af"
                total_commission_amount: 0
                total_not_paid_commission_amount: 0
                commission_structure:
                discarded_at:
                created_at: 1758210312
                updated_at: 1758210312
              schema:
                "$ref": "#/components/schemas/affiliation_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                affiliation:
                  allOf:
                  - "$ref": "#/components/schemas/affiliation_body"
              example:
                affiliation:
                  bio: I have 1 million followers!
    delete:
      summary: Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Affiliations
      operationId: delete_affiliation
      description: Deletes a specific affiliation.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 8a1ae2b9-2eec-48c8-87ff-6528bfd3956e
                object: affiliation
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/affiliations/{id}/activate":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    patch:
      summary: Activate
      tags:
      - Affiliations
      operationId: activate_affiliation
      description: Activates a specific affiliation.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: fc8ad9b5-d6a4-459f-8db1-c88e5bb7885e
                object: affiliation
                active: true
                bio:
                code: AA238DA3
                email: maragret_hand@graham.example
                first_name: Maragret
                last_name: Hand
                metadata: {}
                payout_email:
                url:
                portal_url: http://app.example.com/portal_redirect/affiliations/fc8ad9b5-d6a4-459f-8db1-c88e5bb7885e
                referral_url: "?aff=aa238da3"
                total_commission_amount: 0
                total_not_paid_commission_amount: 0
                commission_structure:
                discarded_at:
                created_at: 1758210312
                updated_at: 1758210312
              schema:
                "$ref": "#/components/schemas/affiliation_response"
  "/v1/affiliations/{id}/deactivate":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    patch:
      summary: Deactivate
      tags:
      - Affiliations
      operationId: deactivate_affiliation
      description: Deactivates a specific affiliation.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 6367e0d6-99c5-481b-b42c-e14abe83eb27
                object: affiliation
                active: false
                bio:
                code: 8E49A930
                email: prohaska.stephany@purdy-marquardt.test
                first_name: Stephany
                last_name: Prohaska
                metadata: {}
                payout_email:
                url:
                portal_url: http://app.example.com/portal_redirect/affiliations/6367e0d6-99c5-481b-b42c-e14abe83eb27
                referral_url: "?aff=8e49a930"
                total_commission_amount: 0
                total_not_paid_commission_amount: 0
                commission_structure:
                discarded_at:
                created_at: 1758210312
                updated_at: 1758210312
              schema:
                "$ref": "#/components/schemas/affiliation_response"
  "/v1/auto_fees":
    get:
      summary: List
      tags:
      - Auto Fees
      operationId: list_auto_fee
      description: Returns a list of your auto fees.
      parameters:
      - name: enabled
        in: query
        description: Only return objects that are enabled or not enabled.
        required: false
        schema:
          type: boolean
      - name: expired
        in: query
        description: Only return objects that have expired or not expired.
        required: false
        schema:
          type: boolean
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: ongoing
        in: query
        description: Only return objects that are ongoing or not ongoing.
        required: false
        schema:
          type: boolean
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/auto_fees"
                data:
                - id: 66b883a6-6003-4051-a36f-aca60d5ef693
                  object: auto_fee
                  enabled: true
                  amount_adjustment:
                  currency: usd
                  discount: false
                  end_at:
                  expired: false
                  metadata: {}
                  name: Auto Fee
                  ongoing: true
                  percent_adjustment: 5.0
                  rule_string: checkout.subtotal_amount is more than '1000'
                  start_at: 1758210313
                  created_at: 1758210313
                  updated_at: 1758210313
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Auto Fees
      operationId: create_auto_fee
      description: Creates a new auto fee.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 413fa8c9-3b17-452c-8d3f-aa61ef129332
                object: auto_fee
                enabled: true
                amount_adjustment: 1000
                currency: usd
                discount: false
                end_at:
                expired: false
                metadata: {}
                name: Handling Fee
                ongoing: true
                percent_adjustment:
                rule_string: "(checkout.subtotal_amount is '100' AND checkout.metadata['key']
                  is 'value') OR quantity is '2'"
                start_at: 1758210313
                created_at: 1758210313
                updated_at: 1758210313
              schema:
                "$ref": "#/components/schemas/auto_fee_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                auto_fee:
                  allOf:
                  - "$ref": "#/components/schemas/auto_fee_body"
              example:
                auto_fee:
                  name: Handling Fee
                  active: true
                  amount_adjustment: 1000
                  start_at: 1758210313
                  rule_string: checkout.subtotal_amount is '100' AND checkout.metadata['key']
                    is 'value' OR quantity is '2'
  "/v1/auto_fees/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Auto Fees
      operationId: retrieve_auto_fee
      description: Retrieves details of a specific auto fee.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: '0119ae73-d2bc-4b39-98e6-8fe79864f074'
                object: auto_fee
                enabled: true
                amount_adjustment:
                currency: usd
                discount: false
                end_at:
                expired: false
                metadata: {}
                name: Auto Fee
                ongoing: true
                percent_adjustment: 5.0
                rule_string: checkout.subtotal_amount is more than '1000'
                start_at: 1758210313
                created_at: 1758210313
                updated_at: 1758210313
              schema:
                "$ref": "#/components/schemas/auto_fee_response"
    patch:
      summary: Update
      tags:
      - Auto Fees
      operationId: update_auto_fee
      description: Updates a specific auto fee.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: cd6f762d-b323-403c-86cb-2bd6ae4931e8
                object: auto_fee
                enabled: true
                amount_adjustment:
                currency: usd
                discount: false
                end_at:
                expired: false
                metadata: {}
                name: Updated Auto Fee
                ongoing: true
                percent_adjustment: 10.0
                rule_string: "(customer.first_name is 'test' AND product.name is not
                  'product') OR quantity is less than '2'"
                start_at: 1758210313
                created_at: 1758210313
                updated_at: 1758210313
              schema:
                "$ref": "#/components/schemas/auto_fee_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                auto_fee:
                  allOf:
                  - "$ref": "#/components/schemas/auto_fee_body"
              example:
                auto_fee:
                  name: Updated Auto Fee
                  percent_adjustment: 10
                  rule_string: customer.first_name is 'test' AND product.name is not
                    'product' OR quantity is less than '2'
    delete:
      summary: Delete
      tags:
      - Auto Fees
      operationId: delete_auto_fee
      description: Deletes a specific auto fee.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: dfb33f10-d1e5-406d-89d0-d425ccff028e
                object: auto_fee
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/balance_transactions":
    get:
      summary: List
      tags:
      - Balance Transactions
      operationId: list_balance_transaction
      description: Returns a list of your balance transactions.
      parameters:
      - name: checkout_ids[]
        in: query
        description: Only return objects that belong to the given checkouts.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: customer_ids[]
        in: query
        description: Only return objects that belong to the given customers.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/balance_transactions"
                data:
                - id: 69cf5b45-7b54-4eb7-88a4-b69435a2f5a9
                  object: balance_transaction
                  amount: 2000
                  currency: usd
                  ending_balance_amount: 0
                  transaction_type: adjustment
                  balance: c8332043-2b62-4306-a1ce-22cdbaf4922e
                  customer: ce9d60ff-333f-42ec-8acc-e0e943680443
                  checkout:
                  created_at: 1758210313
                  updated_at: 1758210313
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Balance Transactions
      operationId: create_balance_transaction
      description: Creates a new balance transaction.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: a98cf64a-a021-488f-a032-0cb3b3d3060a
                object: balance_transaction
                amount: 5000
                currency: usd
                ending_balance_amount: 5000
                transaction_type: adjustment
                balance: 6cce6d6d-c9c9-4cb5-9ae4-53aed67f3db1
                customer: aed48102-b6a6-4856-bcf2-71a725ec2a71
                checkout:
                created_at: 1758210313
                updated_at: 1758210313
              schema:
                "$ref": "#/components/schemas/balance_transaction_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                balance_transaction:
                  allOf:
                  - "$ref": "#/components/schemas/balance_transaction_body"
              example:
                balance_transaction:
                  amount: 5000
                  currency: usd
                  customer: aed48102-b6a6-4856-bcf2-71a725ec2a71
  "/v1/balance_transactions/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Balance Transactions
      operationId: retrieve_balance_transaction
      description: Retrieves details of a specific balance transaction.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: e2057531-08a6-4d6a-817a-35be24ffa691
                object: balance_transaction
                amount: 2000
                currency: usd
                ending_balance_amount: 0
                transaction_type: adjustment
                balance: 13eb4341-4134-4a6a-977f-08f2c3b5cca4
                customer: e022b42b-72d2-4e29-931b-4d35056cc143
                checkout:
                created_at: 1758210313
                updated_at: 1758210313
              schema:
                "$ref": "#/components/schemas/balance_transaction_response"
  "/v1/balances":
    get:
      summary: List
      tags:
      - Balances
      operationId: list_balance
      description: Returns a list of your balances.
      parameters:
      - name: currency[]
        in: query
        description: Only return objects that have the given currencies.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: customer_ids[]
        in: query
        description: Only return objects that belong to the given customers.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/balances"
                data:
                - id: 11431660-f83f-4bac-a24e-84eb340e82b3
                  object: balance
                  amount: 0
                  currency: usd
                  customer: 1e2268f9-c8bf-4559-a621-cc1754bba5bf
                  created_at: 1758210313
                  updated_at: 1758210313
              schema:
                "$ref": "#/components/schemas/list_response"
  "/v1/brand":
    get:
      summary: Retrieve
      tags:
      - Brands
      operationId: retrieve_brand
      description: Retrieves details of the current account's brand.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: d1ea9736-fcd8-4de7-ad9a-89daa19bec9c
                object: brand
                color: '000000'
                email:
                phone:
                powered_by_enabled: true
                website:
                address:
                logo:
                created_at: 1758210314
                updated_at: 1758210314
              schema:
                "$ref": "#/components/schemas/brand_response"
    patch:
      summary: Update
      tags:
      - Brands
      operationId: update_brand
      description: Updates the current account's brand.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 88bf7273-d25e-4b3c-973c-ab64c378ba74
                object: brand
                color: 1D2B39
                email:
                phone:
                powered_by_enabled: true
                website:
                address:
                logo:
                created_at: 1758210314
                updated_at: 1758210314
              schema:
                "$ref": "#/components/schemas/brand_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                brand:
                  allOf:
                  - "$ref": "#/components/schemas/brand_body"
              example:
                brand:
                  color: 1D2B39
  "/v1/bulk_actions":
    get:
      summary: List
      tags:
      - Bulk Actions
      operationId: list_bulk_action
      description: Returns a list of your bulk actions.
      parameters:
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/bulk_actions"
                data:
                - id: ec3ec821-713d-4062-a28a-8b911325356d
                  object: bulk_action
                  action_type: delete_products
                  record_ids:
                  - 29d4987c-5b3b-415a-9e1c-287b970a61ef
                  - 73179c96-637d-4d89-8f02-eb92a23eabad
                  - e56b29ec-c694-4733-8e20-ec69758b23bb
                  - 46a3ca23-e003-40fd-bab2-e49ef9b0fb0e
                  - 39a6a3a7-dd85-40ec-9675-bce7fbed384d
                  skipped_record_ids: []
                  status: pending
                  created_at: 1758210314
                  updated_at: 1758210314
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Bulk Actions
      operationId: create_bulk_action
      description: Creates a new bulk action.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 290ccdfe-61f1-4d79-9d02-c7ed43102d25
                object: bulk_action
                action_type: delete_products
                record_ids:
                - 2db55699-8161-4a12-b147-b9721536989d
                - 2443333a-9975-4895-9969-f211cf2463bb
                - b01b98d2-584c-4979-bda0-608bdd57e9fe
                - 75402a4f-000c-4c25-9b81-eadde67b977c
                - 55b877df-1cf9-4d35-98f3-9424669e7bfe
                skipped_record_ids: []
                status: processing
                created_at: 1758210314
                updated_at: 1758210314
              schema:
                "$ref": "#/components/schemas/bulk_action_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bulk_action:
                  allOf:
                  - "$ref": "#/components/schemas/bulk_action_body"
              example:
                bulk_action:
                  action_type: delete_products
                  record_ids:
                  - 2db55699-8161-4a12-b147-b9721536989d
                  - 2443333a-9975-4895-9969-f211cf2463bb
                  - b01b98d2-584c-4979-bda0-608bdd57e9fe
                  - 75402a4f-000c-4c25-9b81-eadde67b977c
                  - 55b877df-1cf9-4d35-98f3-9424669e7bfe
  "/v1/bulk_actions/{id}":
    get:
      summary: Retrieve
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Bulk Actions
      operationId: retrieve_bulk_action
      description: Retrieves details of a specific bulk action.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 4b78fbe2-5178-471c-8f70-e4bd9f028d32
                object: bulk_action
                action_type: delete_products
                record_ids:
                - d57dc66b-00de-4e00-99e6-814c58040884
                - 340f8def-7c71-4362-a98d-6fc9e678cf62
                - 5796e1e1-6299-48e6-a2ec-a46f6c396faf
                - 15dcd4b1-52ca-48f7-8365-c6e1086d9848
                - ec8001ec-9607-4780-8988-04819494f859
                skipped_record_ids: []
                status: pending
                created_at: 1758210314
                updated_at: 1758210314
              schema:
                "$ref": "#/components/schemas/bulk_action_response"
  "/v1/bumps":
    get:
      summary: List
      tags:
      - Bumps
      operationId: list_bump
      description: Returns a list of your bumps.
      parameters:
      - name: archived
        in: query
        description: Only return objects that are archived or not archived.
        required: false
        schema:
          type: boolean
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: product_ids[]
        in: query
        description: Only return objects that belong to the given products.
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/bumps"
                data:
                - id: fcb3ff8f-1dbe-4203-baf2-522517551ee7
                  object: bump
                  amount_off:
                  archived: false
                  archived_at:
                  auto_apply: false
                  filter_match_type:
                  filter_price_ids: []
                  filter_product_ids: []
                  metadata: {}
                  name: Bundle Discount
                  percent_off:
                  priority: 5
                  price: e12d1c75-efb5-4f43-abd9-d512187d4e28
                  discarded_at:
                  created_at: 1758210314
                  updated_at: 1758210314
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Bumps
      operationId: create_bump
      description: Creates a new bump.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: e879a65d-76d3-48b2-ae6e-77899efcf245
                object: bump
                amount_off:
                archived: false
                archived_at:
                auto_apply: false
                filter_match_type:
                filter_price_ids: []
                filter_product_ids: []
                metadata: {}
                name: Bundle Discount
                percent_off:
                priority: 5
                price: a1148c22-53ec-493f-ae66-8790e1715767
                discarded_at:
                created_at: 1758210314
                updated_at: 1758210314
              schema:
                "$ref": "#/components/schemas/bump_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bump:
                  allOf:
                  - "$ref": "#/components/schemas/bump_body"
              example:
                bump:
                  name: Bundle Discount
                  price: a1148c22-53ec-493f-ae66-8790e1715767
  "/v1/bumps/{id}":
    get:
      summary: Retrieve
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Bumps
      operationId: retrieve_bump
      description: Retrieves details of a specific bump.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: '0788a1f9-626e-44ee-bb25-13fa5f6662b1'
                object: bump
                amount_off:
                archived: false
                archived_at:
                auto_apply: false
                filter_match_type:
                filter_price_ids: []
                filter_product_ids: []
                metadata: {}
                name: Bundle Discount
                percent_off:
                priority: 5
                price: 3426023c-1497-4843-b811-ce34ac97cfa9
                discarded_at:
                created_at: 1758210314
                updated_at: 1758210314
              schema:
                "$ref": "#/components/schemas/bump_response"
    patch:
      summary: Update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Bumps
      operationId: update_bump
      description: Updates a specific bump.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 7d59f2c9-1aa0-40f5-abe0-66e7020d3352
                object: bump
                amount_off:
                archived: false
                archived_at:
                auto_apply: false
                filter_match_type:
                filter_price_ids: []
                filter_product_ids: []
                metadata: {}
                name: Matching Socks
                percent_off:
                priority: 5
                price: fda65136-908a-4d93-bad8-fc02a3d030b6
                discarded_at:
                created_at: 1758210314
                updated_at: 1758210314
              schema:
                "$ref": "#/components/schemas/bump_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bump:
                  allOf:
                  - "$ref": "#/components/schemas/bump_body"
              example:
                bump:
                  name: Matching Socks
    delete:
      summary: Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Bumps
      operationId: delete_bump
      description: Deletes a specific bump.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: d0594634-cb57-41bb-93b0-b6a734be6cd7
                object: bump
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/bumps/{id}/duplicate":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    post:
      summary: Duplicate
      tags:
      - Bumps
      operationId: duplicate_bump
      description: Duplicates a specific order bump.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: c0c03ca3-412f-4996-b66f-3559a4a2940e
                object: bump
                amount_off:
                archived: false
                archived_at:
                auto_apply: false
                filter_match_type:
                filter_price_ids: []
                filter_product_ids: []
                metadata: {}
                name: Bundle Discount (Duplicate)
                percent_off:
                priority: 5
                price: 615a8cec-e10d-4736-8cd4-299b0b279c98
                discarded_at:
                created_at: 1758210315
                updated_at: 1758210315
              schema:
                "$ref": "#/components/schemas/bump_response"
  "/v1/cancellation_acts":
    get:
      summary: List
      tags:
      - Cancellation Acts
      operationId: list_cancellation_act
      description: Returns a list of your cancellation acts.
      parameters:
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: live_mode
        in: query
        description: Only return objects that are live mode or test mode.
        required: false
        schema:
          type: boolean
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/cancellation_acts"
                data:
                - id: 7c2488fe-e76e-4b58-933e-a31258b998d1
                  object: cancellation_act
                  comment:
                  coupon_applied: false
                  preserved: false
                  performed_at: 1758210315
                  cancellation_reason: 34d369c4-d477-45a5-97c3-17a66b7e4221
                  subscription: 7830d236-bea4-4eac-a8d0-b3bfa53f22c1
                  created_at: 1758210315
                  updated_at: 1758210315
              schema:
                "$ref": "#/components/schemas/list_response"
  "/v1/cancellation_acts/{id}":
    get:
      summary: Retrieve
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Cancellation Acts
      operationId: retrieve_cancellation_act
      description: Retrieves details of a specific cancellation reason.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: f9f9ffd6-7430-437b-8a81-34317b502acf
                object: cancellation_act
                comment:
                coupon_applied: false
                preserved: false
                performed_at: 1758210315
                cancellation_reason: d19e40fe-7301-4c63-99c0-69c00b422366
                subscription: b9e867c2-0021-4f2d-9f02-89ffae9f8972
                created_at: 1758210315
                updated_at: 1758210315
              schema:
                "$ref": "#/components/schemas/cancellation_act_response"
  "/v1/cancellation_reasons":
    get:
      summary: List
      tags:
      - Cancellation Reasons
      operationId: list_cancellation_reason
      description: Returns a list of your cancellation reasons.
      parameters:
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/cancellation_reasons"
                data:
                - id: 7ee61c14-454c-4fc0-a243-3cc8598dc0c0
                  object: cancellation_reason
                  archived: false
                  archived_at:
                  comment_enabled: false
                  comment_prompt:
                  coupon_enabled: false
                  label: Too expensive
                  position: 0
                  discarded_at:
                  created_at: 1758210315
                  updated_at: 1758210315
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Cancellation Reasons
      operationId: create_cancellation_reason
      description: Creates a new cancellation reason.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 8978e7f0-21f4-4639-8aa0-3a7eb9c20de4
                object: cancellation_reason
                archived: false
                archived_at:
                comment_enabled: false
                comment_prompt:
                coupon_enabled: false
                label: Switching to competitor
                position: 1
                discarded_at:
                created_at: 1758210315
                updated_at: 1758210315
              schema:
                "$ref": "#/components/schemas/cancellation_reason_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                cancellation_reason:
                  allOf:
                  - "$ref": "#/components/schemas/cancellation_reason_body"
              example:
                cancellation_reason:
                  label: Switching to competitor
  "/v1/cancellation_reasons/{id}":
    get:
      summary: Retrieve
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Cancellation Reasons
      operationId: retrieve_cancellation_reason
      description: Retrieves details of a specific cancellation reason.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: b0a19fa2-a158-4ce1-9eec-00c88fb16cc4
                object: cancellation_reason
                archived: false
                archived_at:
                comment_enabled: false
                comment_prompt:
                coupon_enabled: false
                label: Too expensive
                position: 0
                discarded_at:
                created_at: 1758210315
                updated_at: 1758210315
              schema:
                "$ref": "#/components/schemas/cancellation_reason_response"
    patch:
      summary: Update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Cancellation Reasons
      operationId: update_cancellation_reason
      description: Updates a specific cancellation reason.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: fa1b82bb-75d4-4b71-b312-685e6622f6b2
                object: cancellation_reason
                archived: false
                archived_at:
                comment_enabled: false
                comment_prompt:
                coupon_enabled: false
                label: Too expensive
                position: 0
                discarded_at:
                created_at: 1758210315
                updated_at: 1758210315
              schema:
                "$ref": "#/components/schemas/cancellation_reason_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                cancellation_reason:
                  allOf:
                  - "$ref": "#/components/schemas/cancellation_reason_body"
              example:
                cancellation_reason:
                  name: Not using it
    delete:
      summary: Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Cancellation Reasons
      operationId: delete_cancellation_reason
      description: Deletes a specific cancellation reason.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 9b0ccb59-64fa-431a-af96-ef38e7247f7a
                object: cancellation_reason
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/charges":
    get:
      summary: List
      tags:
      - Charges
      operationId: list_charge
      description: Returns a list of your charges.
      parameters:
      - name: checkout_ids[]
        in: query
        description: Only return objects that belong to the given checkouts.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: customer_ids[]
        in: query
        description: Only return objects that belong to the given customers.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: external_charge_ids[]
        in: query
        description: Only return objects with the given external charge IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: live_mode
        in: query
        description: Only return objects that are live mode or test mode.
        required: false
        schema:
          type: boolean
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/charges"
                data:
                - id: ae829331-222f-49a5-9cb5-2475c41cd01d
                  object: charge
                  amount: 2900
                  currency: usd
                  disputed_amount: 0
                  external_charge_id: gv9nkwlaegecsbe
                  fully_refunded: false
                  live_mode: true
                  refunded_amount: 0
                  customer: 190131a4-f5d8-4706-884c-cc43e59d24c8
                  checkout: b5074f97-075c-4d97-9862-8ec351aeac82
                  payment_intent: 4bf3b097-089e-4792-831c-f59a590eb9e0
                  payment_method:
                  created_at: 1758210316
                  updated_at: 1758210316
              schema:
                "$ref": "#/components/schemas/list_response"
  "/v1/charges/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Charges
      operationId: retrieve_charge
      description: Retrieves details of a specific charge.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: b813cdcb-f36c-4f59-bd6f-d9da5c01369c
                object: charge
                amount: 2900
                currency: usd
                disputed_amount: 0
                external_charge_id: b28o4j0w2u2574w
                fully_refunded: false
                live_mode: true
                refunded_amount: 0
                customer: b899597a-d720-47dd-9137-e7b86d2752e1
                checkout: f0769953-a2bc-4955-8009-36ab1a397f25
                payment_intent: 35cd3aa2-c223-429d-95b3-ebdfcff800f3
                payment_method:
                created_at: 1758210317
                updated_at: 1758210317
              schema:
                "$ref": "#/components/schemas/charge_response"
  "/v1/checkout_portal_protocol":
    get:
      summary: Retrieve
      tags:
      - Checkout Portal Protocols
      operationId: retrieve_checkout_portal_protocol
      description: Retrieves details of the current account's checkout portal protocol.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 4c1ba1d5-c850-49f6-ab8e-1a476007695d
                object: checkout_portal_protocol
                back_url:
                external_enabled: true
                external_url:
                manual_checkout_finalize_enabled: true
                thank_you_heading: Thank you for your order!
                thank_you_description: An order confirmation email with details of
                  this order and a link back to this page have been sent to your email
                  address below.
                wordpress_plugin_enabled: true
                created_at: 1758210317
                updated_at: 1758210317
              schema:
                "$ref": "#/components/schemas/checkout_portal_protocol_response"
    patch:
      summary: Update
      tags:
      - Checkout Portal Protocols
      operationId: update_checkout_portal_protocol
      description: Updates the current account's checkout portal protocol.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 63017d61-7acc-4f2d-bd92-9dadd561004b
                object: checkout_portal_protocol
                back_url: https://example.com
                external_enabled: true
                external_url:
                manual_checkout_finalize_enabled: true
                thank_you_heading: Thank you for your order!
                thank_you_description: An order confirmation email with details of
                  this order and a link back to this page have been sent to your email
                  address below.
                wordpress_plugin_enabled: true
                created_at: 1758210317
                updated_at: 1758210317
              schema:
                "$ref": "#/components/schemas/checkout_portal_protocol_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                checkout_portal_protocol:
                  allOf:
                  - "$ref": "#/components/schemas/checkout_portal_protocol_body"
              example:
                checkout_portal_protocol:
                  back_url: https://example.com
  "/v1/checkouts":
    get:
      summary: List
      tags:
      - Checkouts
      operationId: list_checkout
      description: Returns a list of your checkouts.
      parameters:
      - name: customer_ids[]
        in: query
        description: Only return objects that belong to the given customers.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: group_keys[]
        in: query
        description: Only return objects with the given group keys.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: live_mode
        in: query
        description: Only return objects that are live mode or test mode.
        required: false
        schema:
          type: boolean
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: product_ids[]
        in: query
        description: Only return objects that belong to the given products.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: status[]
        in: query
        description: Only return objects with the given status.
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/checkouts"
                data:
                - id: cae9a326-e51a-4417-82e3-b000683ad83c
                  object: checkout
                  abandoned_checkout_enabled: true
                  amount_due: 2900
                  applied_balance_amount: 0
                  available_countries: []
                  billing_matches_shipping: true
                  credited_balance_amount: 0
                  currency: usd
                  discount_amount: 0
                  email: customer@example.com
                  external_url:
                  first_name:
                  free_shipping_choice_shortage_amount:
                  full_amount: 2900
                  group_key:
                  inherited_email: customer@example.com
                  inherited_name:
                  inherited_phone:
                  ip_address:
                  last_name:
                  live_mode: true
                  manual_payment: false
                  metadata: {}
                  name:
                  net_paid_amount: 0
                  paid_amount: 0
                  g_weight: 0.0
                  paid_at:
                  payment_method_required: true
                  portal_url: http://app.example.com/portal_redirect/checkouts/cae9a326-e51a-4417-82e3-b000683ad83c
                  phone:
                  proration_amount: 0
                  refunded_amount: 0
                  remaining_amount_due: 2900
                  reusable_payment_method_required: false
                  selected_shipping_choice_required: false
                  shipping_address_accuracy_requirement: none
                  shipping_amount: 0
                  shipping_enabled: false
                  shipping_tax_amount: 0
                  shipping_tax_rate: 0.0
                  status: draft
                  subtotal_amount: 2900
                  tax_amount: 0
                  tax_behavior: exclusive
                  tax_breakdown: []
                  tax_enabled: false
                  tax_label:
                  tax_status: disabled
                  total_amount: 2900
                  total_savings_amount: 0
                  trial_amount: 0
                  upsells_expire_at:
                  billing_address:
                  current_payment_intent:
                  current_upsell:
                  invoice:
                  last_click:
                  customer: c32fe012-f7b6-449e-b7c7-72cb9ebaba83
                  discount:
                  manual_payment_method:
                  order:
                  payment_method:
                  inherited_billing_address:
                  inherited_shipping_address:
                  inherited_tax_identifier:
                  referral:
                  shipping_address:
                  tax_identifier:
                  selected_shipping_choice:
                  upsell_funnel:
                  created_at: 1758210317
                  updated_at: 1758210317
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Checkouts
      operationId: create_checkout
      description: Creates a new checkout.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: f506ab31-7034-42bc-88d7-fc4a1505e03d
                object: checkout
                abandoned_checkout_enabled: true
                amount_due: 0
                applied_balance_amount: 0
                available_countries: []
                billing_matches_shipping: true
                credited_balance_amount: 0
                currency: usd
                discount_amount: 0
                email: customer@example.com
                external_url:
                first_name:
                free_shipping_choice_shortage_amount:
                full_amount: 0
                group_key:
                inherited_email: customer@example.com
                inherited_name:
                inherited_phone:
                ip_address:
                last_name:
                live_mode: true
                manual_payment: false
                metadata: {}
                name:
                net_paid_amount: 0
                paid_amount: 0
                g_weight: 0.0
                paid_at:
                payment_method_required: false
                portal_url: http://app.example.com/portal_redirect/checkouts/f506ab31-7034-42bc-88d7-fc4a1505e03d
                phone:
                proration_amount: 0
                refunded_amount: 0
                remaining_amount_due: 0
                reusable_payment_method_required: false
                selected_shipping_choice_required: false
                shipping_address_accuracy_requirement: none
                shipping_amount: 0
                shipping_enabled: false
                shipping_tax_amount: 0
                shipping_tax_rate: 0.0
                status: draft
                subtotal_amount: 0
                tax_amount: 0
                tax_behavior: exclusive
                tax_breakdown: []
                tax_enabled: false
                tax_label:
                tax_status: disabled
                total_amount: 0
                total_savings_amount: 0
                trial_amount: 0
                upsells_expire_at:
                billing_address:
                current_payment_intent:
                current_upsell:
                invoice:
                last_click:
                customer: 2bf65a66-36bb-4263-81ac-d087605762c8
                discount:
                manual_payment_method:
                order:
                payment_method:
                inherited_billing_address:
                inherited_shipping_address:
                inherited_tax_identifier:
                referral:
                shipping_address:
                tax_identifier:
                selected_shipping_choice:
                upsell_funnel:
                created_at: 1758210317
                updated_at: 1758210317
              schema:
                "$ref": "#/components/schemas/checkout_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                checkout:
                  allOf:
                  - "$ref": "#/components/schemas/checkout_body"
              example:
                checkout:
                  email: customer@example.com
  "/v1/checkouts/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      parameters:
      - name: refresh_status
        in: query
        description: If true, the server will check the associated payment processor
          to see if a status change has occured. (This should be used when retrieving
          a checkout or payment intent immediately after it has been paid through
          the processor. In this scenario, it's possible that you'll request the checkout
          before the server has received the webhook from the processor. Setting this
          pararmeter to `true` prevents this scenario.)
        required: false
        schema:
          type: boolean
      tags:
      - Checkouts
      operationId: retrieve_checkout
      description: Retrieves details of a specific checkout.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 9222a2c6-932c-4daa-9b71-b11f6552707c
                object: checkout
                abandoned_checkout_enabled: true
                amount_due: 2900
                applied_balance_amount: 0
                available_countries: []
                billing_matches_shipping: true
                credited_balance_amount: 0
                currency: usd
                discount_amount: 0
                email: customer@example.com
                external_url:
                first_name:
                free_shipping_choice_shortage_amount:
                full_amount: 2900
                group_key:
                inherited_email: customer@example.com
                inherited_name:
                inherited_phone:
                ip_address:
                last_name:
                live_mode: true
                manual_payment: false
                metadata: {}
                name:
                net_paid_amount: 0
                paid_amount: 0
                g_weight: 0.0
                paid_at:
                payment_method_required: true
                portal_url: http://app.example.com/portal_redirect/checkouts/9222a2c6-932c-4daa-9b71-b11f6552707c
                phone:
                proration_amount: 0
                refunded_amount: 0
                remaining_amount_due: 2900
                reusable_payment_method_required: false
                selected_shipping_choice_required: false
                shipping_address_accuracy_requirement: none
                shipping_amount: 0
                shipping_enabled: false
                shipping_tax_amount: 0
                shipping_tax_rate: 0.0
                status: draft
                subtotal_amount: 2900
                tax_amount: 0
                tax_behavior: exclusive
                tax_breakdown: []
                tax_enabled: false
                tax_label:
                tax_status: disabled
                total_amount: 2900
                total_savings_amount: 0
                trial_amount: 0
                upsells_expire_at:
                billing_address:
                current_payment_intent:
                current_upsell:
                invoice:
                last_click:
                customer: 02f01390-d15f-4f96-8a12-200bf1e0f14d
                discount:
                manual_payment_method:
                order:
                payment_method:
                inherited_billing_address:
                inherited_shipping_address:
                inherited_tax_identifier:
                referral:
                shipping_address:
                tax_identifier:
                selected_shipping_choice:
                upsell_funnel:
                created_at: 1758210317
                updated_at: 1758210317
              schema:
                "$ref": "#/components/schemas/checkout_response"
    patch:
      summary: Update
      parameters:
      - name: refresh_line_items
        in: query
        description: When set to true the prices that are associated with the line
          items will be refreshed to reference the most recent versions.
        required: false
        schema:
          type: boolean
      tags:
      - Checkouts
      operationId: update_checkout
      description: Updates a specific checkout.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: '0816eff0-2e36-4d7d-8547-a76c546ce783'
                object: checkout
                abandoned_checkout_enabled: true
                amount_due: 2900
                applied_balance_amount: 0
                available_countries: []
                billing_matches_shipping: true
                credited_balance_amount: 0
                currency: usd
                discount_amount: 0
                email: updated-customer@example.com
                external_url:
                first_name:
                free_shipping_choice_shortage_amount:
                full_amount: 2900
                group_key:
                inherited_email: updated-customer@example.com
                inherited_name:
                inherited_phone:
                ip_address:
                last_name:
                live_mode: true
                manual_payment: false
                metadata: {}
                name:
                net_paid_amount: 0
                paid_amount: 0
                g_weight: 0.0
                paid_at:
                payment_method_required: true
                portal_url: http://app.example.com/portal_redirect/checkouts/0816eff0-2e36-4d7d-8547-a76c546ce783
                phone:
                proration_amount: 0
                refunded_amount: 0
                remaining_amount_due: 2900
                reusable_payment_method_required: false
                selected_shipping_choice_required: false
                shipping_address_accuracy_requirement: none
                shipping_amount: 0
                shipping_enabled: false
                shipping_tax_amount: 0
                shipping_tax_rate: 0.0
                status: draft
                subtotal_amount: 2900
                tax_amount: 0
                tax_behavior: exclusive
                tax_breakdown: []
                tax_enabled: false
                tax_label:
                tax_status: disabled
                total_amount: 2900
                total_savings_amount: 0
                trial_amount: 0
                upsells_expire_at:
                billing_address:
                current_payment_intent:
                current_upsell:
                invoice:
                last_click:
                customer: 358e72f5-a806-4bed-b040-d2b53284fb4f
                discount:
                manual_payment_method:
                order:
                payment_method:
                inherited_billing_address:
                inherited_shipping_address:
                inherited_tax_identifier:
                referral:
                shipping_address:
                tax_identifier:
                selected_shipping_choice:
                upsell_funnel:
                created_at: 1758210317
                updated_at: 1758210318
              schema:
                "$ref": "#/components/schemas/checkout_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                checkout:
                  allOf:
                  - "$ref": "#/components/schemas/checkout_body"
              example:
                checkout:
                  email: updated-customer@example.com
                  line_items:
                  - price_id: 900075e0-1eeb-419b-bf46-46d35f885815
                    quantity: 1
  "/v1/checkouts/{id}/finalize":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    patch:
      summary: Finalize
      parameters:
      - name: manual_payment
        in: query
        description: Whether or not to finalize this checkout with a manual payment.
          If `true`, the checkout will move directly to the `processing` state.
        required: false
        schema:
          type: boolean
      - name: manual_payment_method_id
        in: query
        description: The manual payment method to use when finalizing this checkout.
          If set, this will take priority over all other parameters.
        required: false
        schema:
          type: string
      - name: payment_method_id
        in: query
        description: The payment method to use when finalizing this checkout. If set,
          this will take priority over all other finalize parameters and an attempt
          to pay the checkout will occur immediately.
        required: false
        schema:
          type: string
      - name: payment_method_type
        in: query
        description: The payment method type to use when finalizing this checkout.
          This is only applicable for `mollie` processors.
        required: false
        schema:
          type: string
      - name: processor_id
        in: query
        description: The processor to use when finalizing this checkout. If set, this
          will take priority over the `processor_type` parameter.
        required: false
        schema:
          type: string
      - name: processor_type
        in: query
        description: The processor type (i.e. `stripe`, `paypal`, etc.) to use when
          finalizing this checkout.
        required: false
        schema:
          type: string
      - name: return_url
        in: query
        description: The URL the customer will be redirected to after the payment
          process. This is only applicable for `mollie` processors.
        required: false
        schema:
          type: string
      tags:
      - Checkouts
      operationId: finalize_checkout
      description: Finalizes a specific checkout before it can be paid. If succesfull,
        this will return an associated `PaymentIntent` with the necessary information
        to capture the payment via the specific processor.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 60f982a0-a3bb-4991-b535-630f6a30982b
                object: checkout
                abandoned_checkout_enabled: true
                amount_due: 2900
                applied_balance_amount: 0
                available_countries: []
                billing_matches_shipping: true
                credited_balance_amount: 0
                currency: usd
                discount_amount: 0
                email: customer@example.com
                external_url:
                first_name:
                free_shipping_choice_shortage_amount:
                full_amount: 2900
                group_key:
                inherited_email: customer@example.com
                inherited_name:
                inherited_phone:
                ip_address:
                last_name:
                live_mode: true
                manual_payment: false
                metadata: {}
                name:
                net_paid_amount: 0
                paid_amount: 0
                g_weight: 0.0
                paid_at:
                payment_method_required: true
                portal_url: http://app.example.com/portal_redirect/checkouts/60f982a0-a3bb-4991-b535-630f6a30982b
                phone:
                proration_amount: 0
                refunded_amount: 0
                remaining_amount_due: 2900
                reusable_payment_method_required: false
                selected_shipping_choice_required: false
                shipping_address_accuracy_requirement: none
                shipping_amount: 0
                shipping_enabled: false
                shipping_tax_amount: 0
                shipping_tax_rate: 0.0
                status: finalized
                subtotal_amount: 2900
                tax_amount: 0
                tax_behavior: exclusive
                tax_breakdown: []
                tax_enabled: false
                tax_label:
                tax_status: disabled
                total_amount: 2900
                total_savings_amount: 0
                trial_amount: 0
                upsells_expire_at:
                billing_address:
                current_payment_intent: 0b6d9e7c-2a47-48d4-b705-5fcdba626b06
                current_upsell:
                invoice:
                last_click:
                customer: 04eac64a-ce95-4216-b896-d418a0ea3510
                discount:
                manual_payment_method:
                order:
                payment_method:
                inherited_billing_address:
                inherited_shipping_address:
                inherited_tax_identifier:
                referral:
                shipping_address:
                tax_identifier:
                selected_shipping_choice:
                upsell_funnel:
                created_at: 1758210318
                updated_at: 1758210318
              schema:
                "$ref": "#/components/schemas/checkout_response"
  "/v1/checkouts/{id}/manually_pay":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    patch:
      summary: Manually Pay
      tags:
      - Checkouts
      operationId: manually_pay_checkout
      description: Manually marks a checkout as paid. This can only be performed on
        checkouts that have been finalized. When a checkout is paid associated purchases
        and subscriptions will be created.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: cfebd93d-0d25-46a1-b859-8cf9c87f78b3
                object: checkout
                abandoned_checkout_enabled: true
                amount_due: 2900
                applied_balance_amount: 0
                available_countries: []
                billing_matches_shipping: true
                credited_balance_amount: 0
                currency: usd
                discount_amount: 0
                email: customer@example.com
                external_url:
                first_name:
                free_shipping_choice_shortage_amount:
                full_amount: 2900
                group_key:
                inherited_email: customer@example.com
                inherited_name:
                inherited_phone:
                ip_address:
                last_name:
                live_mode: true
                manual_payment: true
                metadata: {}
                name:
                net_paid_amount: 2900
                paid_amount: 2900
                g_weight: 0.0
                paid_at: 1758210318
                payment_method_required: false
                portal_url: http://app.example.com/portal_redirect/checkouts/cfebd93d-0d25-46a1-b859-8cf9c87f78b3
                phone:
                proration_amount: 0
                refunded_amount: 0
                remaining_amount_due: 0
                reusable_payment_method_required: false
                selected_shipping_choice_required: false
                shipping_address_accuracy_requirement: none
                shipping_amount: 0
                shipping_enabled: false
                shipping_tax_amount: 0
                shipping_tax_rate: 0.0
                status: paid
                subtotal_amount: 2900
                tax_amount: 0
                tax_behavior: exclusive
                tax_breakdown: []
                tax_enabled: false
                tax_label:
                tax_status: disabled
                total_amount: 2900
                total_savings_amount: 0
                trial_amount: 0
                upsells_expire_at: 1758212118
                billing_address:
                current_payment_intent:
                current_upsell:
                invoice:
                last_click:
                customer: 67e231d3-4747-4150-8d65-223dc8ed7c99
                discount:
                manual_payment_method:
                order: 4d401197-4e0b-4eb8-8162-fedf0d372fc3
                payment_method:
                inherited_billing_address:
                inherited_shipping_address:
                inherited_tax_identifier:
                referral:
                shipping_address:
                tax_identifier:
                selected_shipping_choice:
                upsell_funnel:
                created_at: 1758210318
                updated_at: 1758210318
              schema:
                "$ref": "#/components/schemas/checkout_response"
  "/v1/checkouts/{id}/cancel":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    patch:
      summary: Cancel
      tags:
      - Checkouts
      operationId: cancel_checkout
      description: Cancels a specific checkout. This action can only be performed
        on checkouts that are `paid` or `processing`. When a checkout is canceled
        associated purchases will be revoked and subscriptions will be canceled.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 0e5c0ee0-68c9-4bd5-a84d-efee8b1e5acd
                object: checkout
                abandoned_checkout_enabled: true
                amount_due: 2900
                applied_balance_amount: 0
                available_countries: []
                billing_matches_shipping: true
                credited_balance_amount: 0
                currency: usd
                discount_amount: 0
                email: customer@example.com
                external_url:
                first_name:
                free_shipping_choice_shortage_amount:
                full_amount: 2900
                group_key:
                inherited_email: customer@example.com
                inherited_name:
                inherited_phone:
                ip_address:
                last_name:
                live_mode: true
                manual_payment: true
                metadata: {}
                name:
                net_paid_amount: 0
                paid_amount: 0
                g_weight: 0.0
                paid_at:
                payment_method_required: true
                portal_url: http://app.example.com/portal_redirect/checkouts/0e5c0ee0-68c9-4bd5-a84d-efee8b1e5acd
                phone:
                proration_amount: 0
                refunded_amount: 0
                remaining_amount_due: 2900
                reusable_payment_method_required: false
                selected_shipping_choice_required: false
                shipping_address_accuracy_requirement: none
                shipping_amount: 0
                shipping_enabled: false
                shipping_tax_amount: 0
                shipping_tax_rate: 0.0
                status: canceled
                subtotal_amount: 2900
                tax_amount: 0
                tax_behavior: exclusive
                tax_breakdown: []
                tax_enabled: false
                tax_label:
                tax_status: disabled
                total_amount: 2900
                total_savings_amount: 0
                trial_amount: 0
                upsells_expire_at: 1758212119
                billing_address:
                current_payment_intent:
                current_upsell:
                invoice:
                last_click:
                customer: 233c138b-f589-43a2-8d08-f55328a90431
                discount:
                manual_payment_method:
                order: 6dbc5cf9-c251-442a-bb48-4879e213c43e
                payment_method:
                inherited_billing_address:
                inherited_shipping_address:
                inherited_tax_identifier:
                referral:
                shipping_address:
                tax_identifier:
                selected_shipping_choice:
                upsell_funnel:
                created_at: 1758210319
                updated_at: 1758210319
              schema:
                "$ref": "#/components/schemas/checkout_response"
  "/v1/checkouts/{id}/offer_bump/{bump_id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    - name: bump_id
      in: path
      required: true
      schema:
        type: string
    patch:
      summary: Offer Bump
      tags:
      - Checkouts
      operationId: offer_bump_checkout
      description: Records an offer for the specific bump â€“ used for bump analytics.
      responses:
        '200':
          description: Success
  "/v1/checkouts/{id}/offer_upsell/{upsell_id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    - name: upsell_id
      in: path
      required: true
      schema:
        type: string
    patch:
      summary: Offer Upsell
      tags:
      - Checkouts
      operationId: offer_upsell_checkout
      description: Records an offer for the specific upsell â€“ used for upsell analytics.
      responses:
        '200':
          description: Success
  "/v1/checkouts/{id}/decline_upsell/{upsell_id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    - name: upsell_id
      in: path
      required: true
      schema:
        type: string
    patch:
      summary: Decline Upsell
      tags:
      - Checkouts
      operationId: decline_upsell_checkout
      description: Records a decline for the specific upsell â€“ used for upsell analytics
        and to traverse through an upsell funnel by refreshing the `current_upsell`.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 33b16088-cbd8-4924-9d53-dabadd835eda
                object: checkout
                abandoned_checkout_enabled: true
                amount_due: 2900
                applied_balance_amount: 0
                available_countries: []
                billing_matches_shipping: true
                credited_balance_amount: 0
                currency: usd
                discount_amount: 0
                email: customer@example.com
                external_url:
                first_name:
                free_shipping_choice_shortage_amount:
                full_amount: 2900
                group_key:
                inherited_email: customer@example.com
                inherited_name:
                inherited_phone:
                ip_address:
                last_name:
                live_mode: true
                manual_payment: true
                metadata: {}
                name:
                net_paid_amount: 2900
                paid_amount: 2900
                g_weight: 0.0
                paid_at: 1758210320
                payment_method_required: true
                portal_url: http://app.example.com/portal_redirect/checkouts/33b16088-cbd8-4924-9d53-dabadd835eda
                phone:
                proration_amount: 0
                refunded_amount: 0
                remaining_amount_due: 0
                reusable_payment_method_required: true
                selected_shipping_choice_required: false
                shipping_address_accuracy_requirement: none
                shipping_amount: 0
                shipping_enabled: false
                shipping_tax_amount: 0
                shipping_tax_rate: 0.0
                status: paid
                subtotal_amount: 2900
                tax_amount: 0
                tax_behavior: exclusive
                tax_breakdown: []
                tax_enabled: false
                tax_label:
                tax_status: disabled
                total_amount: 2900
                total_savings_amount: 0
                trial_amount: 0
                upsells_expire_at: 1758212120
                billing_address:
                current_payment_intent:
                current_upsell:
                invoice:
                last_click:
                customer: 753f7950-23e0-400e-8b4d-83287bfd2231
                discount:
                manual_payment_method:
                order: b03f56bf-cdbf-4047-afee-6b162b472942
                payment_method:
                inherited_billing_address:
                inherited_shipping_address:
                inherited_tax_identifier:
                referral:
                shipping_address:
                tax_identifier:
                selected_shipping_choice:
                upsell_funnel: 83e6c038-6c32-4d6d-b2ad-da54e80888f6
                created_at: 1758210320
                updated_at: 1758210320
              schema:
                "$ref": "#/components/schemas/checkout_response"
  "/v1/clicks":
    get:
      summary: List
      tags:
      - Clicks
      operationId: list_click
      description: Returns a list of your clicks.
      parameters:
      - name: affiliation_ids[]
        in: query
        description: Only return objects that belong to the given affiliations.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: converted
        in: query
        description: Only return objects that have converted or not converted.
        required: false
        schema:
          type: boolean
      - name: expired
        in: query
        description: Only return objects that have expired or not expired.
        required: false
        schema:
          type: boolean
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: original
        in: query
        description: Only return clicks that are the first in an anonymous ID stream
          or not.
        required: false
        schema:
          type: boolean
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/clicks"
                data:
                - id: 439fbd07-38c2-472a-8214-7afca3814ac8
                  object: click
                  anonymous_id: 9a5d980c-3589-41d1-add8-67a3f02179b3
                  domain: oberbrunner.example
                  converted: false
                  expires_at: 1760802320
                  referrer:
                  url: http://oberbrunner.example/keila_yost
                  affiliation: 5c2f5e15-0201-4174-a491-6c6d7f3b9a8c
                  previous_click:
                  created_at: 1758210320
                  updated_at: 1758210320
              schema:
                "$ref": "#/components/schemas/list_response"
  "/v1/clicks/{id}":
    get:
      summary: Retrieve
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Clicks
      operationId: retrieve_click
      description: Retrieves details of a specific click.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: d7a17343-222e-4e01-a083-b29f48381c7b
                object: click
                anonymous_id: d76cb90f-a818-4a2f-88a8-48586e21f71b
                domain: wolf-lebsack.example
                converted: false
                expires_at: 1760802320
                referrer:
                url: http://wolf-lebsack.example/sharyn.hermann
                affiliation: f71f6e53-77e6-4ac4-9c73-7d4046345ffe
                previous_click:
                created_at: 1758210320
                updated_at: 1758210320
              schema:
                "$ref": "#/components/schemas/click_response"
  "/v1/coupons":
    get:
      summary: List
      tags:
      - Coupons
      operationId: list_coupon
      description: Returns a list of your coupons.
      parameters:
      - name: archived
        in: query
        description: Only return objects that are archived or not archived.
        required: false
        schema:
          type: boolean
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: query
        in: query
        description: The query to be used for full text search of this collection.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 3
                  limit: 20
                  page: 1
                  url: "/v1/coupons"
                data:
                - id: 2bc5c48d-5426-421d-bac0-0ee7340fa9b4
                  object: coupon
                  archived: false
                  archived_at:
                  amount_off: 500
                  currency: usd
                  duration: once
                  duration_in_months:
                  expired: false
                  metadata: {}
                  max_redemptions:
                  max_redemptions_per_customer:
                  max_subtotal_amount:
                  min_subtotal_amount:
                  name: Test Coupon
                  percent_off:
                  product_ids: []
                  redeem_by:
                  times_redeemed: 0
                  discarded_at:
                  created_at: 1758210321
                  updated_at: 1758210321
                - id: 198fc3de-7ff2-4000-9b77-389d6c8389b0
                  object: coupon
                  archived: false
                  archived_at:
                  amount_off: 500
                  currency: usd
                  duration: once
                  duration_in_months:
                  expired: false
                  metadata: {}
                  max_redemptions:
                  max_redemptions_per_customer:
                  max_subtotal_amount:
                  min_subtotal_amount:
                  name: Test Coupon
                  percent_off:
                  product_ids: []
                  redeem_by:
                  times_redeemed: 0
                  discarded_at:
                  created_at: 1758210320
                  updated_at: 1758210320
                - id: 6e893197-0b4f-48c8-aa08-708f29d8a720
                  object: coupon
                  archived: false
                  archived_at:
                  amount_off: 500
                  currency: usd
                  duration: once
                  duration_in_months:
                  expired: false
                  metadata: {}
                  max_redemptions:
                  max_redemptions_per_customer:
                  max_subtotal_amount:
                  min_subtotal_amount:
                  name: Test Coupon
                  percent_off:
                  product_ids: []
                  redeem_by:
                  times_redeemed: 0
                  discarded_at:
                  created_at: 1758210320
                  updated_at: 1758210320
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Coupons
      operationId: create_coupon
      description: Creates a new coupon.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 453412e2-f5a3-475b-9111-8f7229341138
                object: coupon
                archived: false
                archived_at:
                amount_off: 500
                currency: usd
                duration: once
                duration_in_months:
                expired: false
                metadata: {}
                max_redemptions:
                max_redemptions_per_customer:
                max_subtotal_amount:
                min_subtotal_amount:
                name: Test Coupon
                percent_off:
                product_ids: []
                redeem_by:
                times_redeemed: 0
                discarded_at:
                created_at: 1758210321
                updated_at: 1758210321
              schema:
                "$ref": "#/components/schemas/coupon_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                coupon:
                  allOf:
                  - "$ref": "#/components/schemas/coupon_body"
              example:
                coupon:
                  name: Test Coupon
                  amount_off: 500
  "/v1/coupons/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Coupons
      operationId: retrieve_coupon
      description: Retrieves details of a specific coupon.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 0fcaae1e-1d10-4fde-8b29-e9a951f9d214
                object: coupon
                archived: false
                archived_at:
                amount_off: 500
                currency: usd
                duration: once
                duration_in_months:
                expired: false
                metadata: {}
                max_redemptions:
                max_redemptions_per_customer:
                max_subtotal_amount:
                min_subtotal_amount:
                name: Test Coupon
                percent_off:
                product_ids: []
                redeem_by:
                times_redeemed: 0
                discarded_at:
                created_at: 1758210321
                updated_at: 1758210321
              schema:
                "$ref": "#/components/schemas/coupon_response"
    patch:
      summary: Update
      tags:
      - Coupons
      operationId: update_coupon
      description: Updates a specific coupon.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 2fb5bf21-2363-4840-a4fb-ea84d3b4591f
                object: coupon
                archived: false
                archived_at:
                amount_off: 500
                currency: usd
                duration: once
                duration_in_months:
                expired: false
                metadata: {}
                max_redemptions:
                max_redemptions_per_customer:
                max_subtotal_amount:
                min_subtotal_amount:
                name: Updated Coupon
                percent_off:
                product_ids: []
                redeem_by:
                times_redeemed: 0
                discarded_at:
                created_at: 1758210321
                updated_at: 1758210321
              schema:
                "$ref": "#/components/schemas/coupon_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                coupon:
                  allOf:
                  - "$ref": "#/components/schemas/coupon_body"
              example:
                coupon:
                  name: Updated Coupon
    delete:
      summary: Delete
      tags:
      - Coupons
      operationId: delete_coupon
      description: Deletes a specific coupon.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: b8b2216d-25b6-44af-af82-b8bcf8b4f1b4
                object: coupon
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/coupons/{id}/duplicate":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    post:
      summary: Duplicate
      tags:
      - Coupons
      operationId: duplicate_coupon
      description: Duplicates a specific coupon.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: e1c6a4af-222c-415e-a115-23c013128908
                object: coupon
                archived: false
                archived_at:
                amount_off: 500
                currency: usd
                duration: once
                duration_in_months:
                expired: false
                metadata: {}
                max_redemptions:
                max_redemptions_per_customer:
                max_subtotal_amount:
                min_subtotal_amount:
                name: Test Coupon (Duplicate)
                percent_off:
                product_ids: []
                redeem_by:
                times_redeemed: 0
                discarded_at:
                created_at: 1758210321
                updated_at: 1758210321
              schema:
                "$ref": "#/components/schemas/coupon_response"
  "/v1/customer_notification_protocol":
    get:
      summary: Retrieve
      tags:
      - Customer Notification Protocols
      operationId: retrieve_customer_notification_protocol
      description: Retrieves details of the current account's customer notification
        protocol.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 0cf66d5a-832c-4737-8162-e78c3d6eb8a6
                object: customer_notification_protocol
                free_order_enabled: true
                from_name:
                notifications_enabled: true
                order_enabled: true
                payment_failure_enabled: true
                purchase_enabled: true
                refund_enabled: true
                reply_to_email: reply.to@wiegand-legros.test
                subscription_cancellation_enabled: false
                subscription_reminder_enabled: false
                subscription_renewal_enabled: false
                upsell_accepted_enabled: true
                created_at: 1758210321
                updated_at: 1758210321
              schema:
                "$ref": "#/components/schemas/customer_notification_protocol_response"
    patch:
      summary: Update
      tags:
      - Customer Notification Protocols
      operationId: update_customer_notification_protocol
      description: Updates the current account's customer notification protocol.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 367d650d-2cd4-4f7e-a2e3-ff11d5d9f137
                object: customer_notification_protocol
                free_order_enabled: true
                from_name: Support Team
                notifications_enabled: true
                order_enabled: true
                payment_failure_enabled: true
                purchase_enabled: true
                refund_enabled: true
                reply_to_email: support@example.com
                subscription_cancellation_enabled: false
                subscription_reminder_enabled: false
                subscription_renewal_enabled: false
                upsell_accepted_enabled: true
                created_at: 1758210321
                updated_at: 1758210321
              schema:
                "$ref": "#/components/schemas/customer_notification_protocol_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_notification_protocol:
                  allOf:
                  - "$ref": "#/components/schemas/customer_notification_protocol_body"
              example:
                customer_notification_protocol:
                  from_name: Support Team
                  reply_to_email: support@example.com
  "/v1/customer_portal_protocol":
    get:
      summary: Retrieve
      tags:
      - Customer Portal Protocols
      operationId: retrieve_customer_portal_protocol
      description: Retrieves details of the current account's customer portal protocol.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: a967752f-06f5-44f3-a868-86c580e4ba70
                object: customer_portal_protocol
                back_url:
                external_enabled: true
                external_url:
                login_enabled: true
                privacy_url:
                subscription_cancellations_enabled: true
                subscription_updates_enabled: true
                subscription_quantity_updates_enabled: true
                terms_url:
                wordpress_plugin_enabled: true
                created_at: 1758210321
                updated_at: 1758210321
              schema:
                "$ref": "#/components/schemas/customer_portal_protocol_response"
    patch:
      summary: Update
      tags:
      - Customer Portal Protocols
      operationId: update_customer_portal_protocol
      description: Updates the current account's customer portal protocol.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 389c9e13-5cca-4ccc-9d7b-90caf167a77d
                object: customer_portal_protocol
                back_url:
                external_enabled: true
                external_url:
                login_enabled: true
                privacy_url:
                subscription_cancellations_enabled: false
                subscription_updates_enabled: true
                subscription_quantity_updates_enabled: true
                terms_url:
                wordpress_plugin_enabled: true
                created_at: 1758210321
                updated_at: 1758210321
              schema:
                "$ref": "#/components/schemas/customer_portal_protocol_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_portal_protocol:
                  allOf:
                  - "$ref": "#/components/schemas/customer_portal_protocol_body"
              example:
                customer_portal_protocol:
                  subscription_cancellations_enabled: false
  "/v1/customers":
    get:
      summary: List
      tags:
      - Customers
      operationId: list_customer
      description: Returns a list of your customers.
      parameters:
      - name: email
        in: query
        description: Only return objects with the given email.
        required: false
        schema:
          type: string
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: license_ids[]
        in: query
        description: Only return objects that belong to the given licenses.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: live_mode
        in: query
        description: Only return objects that are live mode or test mode.
        required: false
        schema:
          type: boolean
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: query
        in: query
        description: The query to be used for full text search of this collection.
        required: false
        schema:
          type: string
      - name: rule_string
        in: query
        description: The rule string for filtering this collection. Uses the `customer`
          rule schema.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/customers"
                data:
                - id: 4e7e3a96-f103-4e90-b21f-6375a78c5ae7
                  object: customer
                  affiliation_expires_at:
                  billing_matches_shipping: true
                  email: customer-19@example.com
                  first_name:
                  indexed: true
                  last_name:
                  live_mode: true
                  name:
                  phone:
                  unsubscribed: false
                  tax_enabled: true
                  portal_url: http://app.example.com/portal_redirect/customers/4e7e3a96-f103-4e90-b21f-6375a78c5ae7
                  affiliation:
                  billing_address: 3b993d99-5b8b-45a2-9137-6a476fce784e
                  default_payment_method:
                  shipping_address:
                  tax_identifier:
                  created_at: 1758210321
                  updated_at: 1758210321
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Customers
      operationId: create_customer
      description: Creates a new customer.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 15e3dd60-f43b-432a-abb8-f508ae25e93d
                object: customer
                affiliation_expires_at:
                billing_matches_shipping: true
                email: testcustomer@example.com
                first_name: Test
                indexed: true
                last_name: Customer
                live_mode: true
                name: Test Customer
                phone:
                unsubscribed: false
                tax_enabled: true
                portal_url: http://app.example.com/portal_redirect/customers/15e3dd60-f43b-432a-abb8-f508ae25e93d
                affiliation:
                billing_address:
                default_payment_method:
                shipping_address:
                tax_identifier:
                created_at: 1758210322
                updated_at: 1758210322
              schema:
                "$ref": "#/components/schemas/customer_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                customer:
                  allOf:
                  - "$ref": "#/components/schemas/customer_body"
              example:
                customer:
                  name: Test Customer
                  email: testcustomer@example.com
  "/v1/customers/{id}":
    get:
      summary: Retrieve
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Customers
      operationId: retrieve_customer
      description: Retrieves details of a specific customer.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 729bca04-8557-4dac-ae27-f2a649b944f4
                object: customer
                affiliation_expires_at:
                billing_matches_shipping: true
                email: customer-21@example.com
                first_name:
                indexed: true
                last_name:
                live_mode: true
                name:
                phone:
                unsubscribed: false
                tax_enabled: true
                portal_url: http://app.example.com/portal_redirect/customers/729bca04-8557-4dac-ae27-f2a649b944f4
                affiliation:
                billing_address: 625d6dc8-09fb-452b-b59f-b2cdc71815ce
                default_payment_method:
                shipping_address:
                tax_identifier:
                created_at: 1758210322
                updated_at: 1758210322
              schema:
                "$ref": "#/components/schemas/customer_response"
    patch:
      summary: Update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: cascade_default_payment_method
        in: query
        description: When set to `true`, this customer's default payment method will
          be cascaded to all their subscriptions.
        required: false
        schema:
          type: boolean
      tags:
      - Customers
      operationId: update_customer
      description: Updates a specific customer.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 0b5d8142-61ad-4e65-a1d1-78c0ff850c42
                object: customer
                affiliation_expires_at:
                billing_matches_shipping: true
                email: customer-22@example.com
                first_name: Updated
                indexed: true
                last_name: Customer
                live_mode: true
                name: Updated Customer
                phone:
                unsubscribed: false
                tax_enabled: true
                portal_url: http://app.example.com/portal_redirect/customers/0b5d8142-61ad-4e65-a1d1-78c0ff850c42
                affiliation:
                billing_address: d1d88c20-84c3-4650-807c-727868cfd02c
                default_payment_method:
                shipping_address:
                tax_identifier:
                created_at: 1758210323
                updated_at: 1758210323
              schema:
                "$ref": "#/components/schemas/customer_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                customer:
                  allOf:
                  - "$ref": "#/components/schemas/customer_body"
              example:
                customer:
                  name: Updated Customer
    delete:
      summary: Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Customers
      operationId: delete_customer
      description: Deletes a specific customer.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 05dc4903-daab-466b-b6b7-67d4d44e473e
                object: customer
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/customers/{id}/expose/{media_id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Expose Media
      parameters:
      - name: expose_for
        in: query
        description: Sets how long a private media URL should be valid for, in seconds.
          The max value allowed is `86400` or 24 hours. When exposing a media through
          a purchase or license the default value is `900` or 15 minutes.
        required: false
        schema:
          type: integer
      - name: media_id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Customers
      operationId: expose_media_customer
      description: Exposes a specific media that the customer has access to via a
        purchase.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 4859be19-ad5f-489f-9337-486df8ff6e04
                object: media
                alt:
                byte_size: 12254
                content_type: image/png
                extension: png
                filename: test.png
                height:
                public_access: false
                release_json:
                title:
                url: http://app.example.com/file_redirect/eyJfcmFpbHMiOnsiZGF0YSI6IjZlZmQzZjM5LWMyZWUtNGY2Ny1iNmY5LTNmNjc4ZWRkMmM2MiIsImV4cCI6IjIwMjUtMDktMThUMTY6MDA6MjUuMzc0WiIsInB1ciI6ImJsb2JfaWQifX0=--55caa4bd962af249a640e52b19992c1c469c3db4/test.png?disposition=attachment
                width:
                url_expires_at: 1758211225
                created_at: 1758210324
                updated_at: 1758210324
              schema:
                "$ref": "#/components/schemas/media_response"
  "/v1/discounts":
    get:
      summary: List Discounts
      tags:
      - Discounts
      operationId: list_discounts_discount
      description: Returns a list of discounts (only redeemed discounts).
      parameters:
      - name: coupon_ids[]
        in: query
        description: Only return objects with the given coupon IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: customer_ids[]
        in: query
        description: Only return objects that belong to the given customers.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: primary
        in: query
        description: Only return the primary discounts, the first one when the coupon
          is recurring.
        required: false
        schema:
          type: boolean
      - name: primary_discount_ids[]
        in: query
        description: Only return objects that belong to the given primary discount.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: promotion_ids[]
        in: query
        description: Only return objects with the given promotion IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/discounts"
                data:
                - id: aee41575-ba62-4645-be84-60d44fabf50e
                  object: discount
                  discount_amount: -500
                  primary: true
                  redeemable_status: redeemable
                  redeemed_at: 1758210265
                  used_up: false
                  checkout: 2a5aa581-9649-45d2-a643-b51150c5b403
                  coupon: 4a35b58c-f72a-41a5-b93a-c3a7fb3c5efb
                  customer: 461b9924-324b-4589-b551-684091423f4e
                  primary_discount:
                  promotion:
                  created_at: 1758210325
                  updated_at: 1758210325
              schema:
                "$ref": "#/components/schemas/list_response"
  "/v1/discounts/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve Discount
      tags:
      - Discounts
      operationId: retrieve_discount_discount
      description: Retrieves details of a specific discount (only redeemed discounts).
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: b632b34a-cc85-4f7d-ba6e-4799b1874b54
                object: discount
                discount_amount: -500
                primary: true
                redeemable_status: redeemable
                redeemed_at: 1758210265
                used_up: false
                checkout: 940748b1-33f5-4974-ba0c-7a5525e76642
                coupon: 0c69451c-8263-43ef-b139-eb11f8e60ede
                customer: fd43dae5-7480-4f73-ab99-3d52ec0ce54d
                primary_discount:
                promotion:
                created_at: 1758210325
                updated_at: 1758210325
              schema:
                "$ref": "#/components/schemas/discount_response"
  "/v1/display_currencies":
    get:
      summary: List
      tags:
      - Display Currencies
      operationId: list_display_currency
      description: Returns a list of your display currencies.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 2
                  limit: 20
                  page: 1
                  url: "/v1/display_currencies"
                data:
                - id: eb51f2f6-7869-41a4-a874-a7a602bcd47e
                  object: display_currency
                  currency: eur
                  current_exchange_rate: 0.75
                  created_at: 1758210325
                  updated_at: 1758210325
                - id: '08d3ccbe-9b1f-4769-b9d8-a415d41916c7'
                  object: display_currency
                  currency: usd
                  current_exchange_rate: 0.75
                  created_at: 1758210325
                  updated_at: 1758210325
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Display Currencies
      operationId: create_display_currency
      description: Creates a new display currency.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 9e85fe7c-69df-4601-aa08-76e1456974fb
                object: display_currency
                currency: gbp
                current_exchange_rate: 0.75
                created_at: 1758210325
                updated_at: 1758210325
              schema:
                "$ref": "#/components/schemas/display_currency_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                display_currency:
                  allOf:
                  - "$ref": "#/components/schemas/display_currency_body"
              example:
                display_currency:
                  currency: gbp
  "/v1/display_currencies/{id}":
    get:
      summary: Retrieve
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Display Currencies
      operationId: retrieve_display_currency
      description: Retrieves details of a specific display currency.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 4c0731dd-4242-49d7-8dc1-281157f4878f
                object: display_currency
                currency: eur
                current_exchange_rate: 0.75
                created_at: 1758210325
                updated_at: 1758210325
              schema:
                "$ref": "#/components/schemas/display_currency_response"
    delete:
      summary: Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Display Currencies
      operationId: delete_display_currency
      description: Deletes a specific display currency.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: a66f75cd-7344-48e9-956e-b3bb69dec3ea
                object: display_currency
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/disputes":
    get:
      summary: List
      tags:
      - Disputes
      operationId: list_dispute
      description: Returns a list of your disputes.
      parameters:
      - name: charge_ids[]
        in: query
        description: Only return objects with the given charge IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: customer_ids[]
        in: query
        description: Only return objects that belong to the given customers.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: live_mode
        in: query
        description: Only return objects that are live mode or test mode.
        required: false
        schema:
          type: boolean
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: status[]
        in: query
        description: Only return objects with the given status.
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/disputes"
                data:
                - id: 8ed0ed2d-0385-4ec1-9d50-7e5aad60897f
                  object: dispute
                  amount: 2900
                  currency: usd
                  external_dispute_id: dp_jwou6t41utf9s5s7ygq8ae7y
                  live_mode: true
                  processor_type: stripe
                  status: pending
                  charge: a70f1bdc-efb7-443f-a244-703036c970fa
                  created_at: 1758210326
                  updated_at: 1758210326
              schema:
                "$ref": "#/components/schemas/list_response"
  "/v1/disputes/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Disputes
      operationId: retrieve_dispute
      description: Retrieves details of a specific dispute.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 44b5169e-5ce1-44a2-aa65-0f55492812e6
                object: dispute
                amount: 2900
                currency: usd
                external_dispute_id: dp_ywi0vsg6cuff56ie9q0oi9dw
                live_mode: true
                processor_type: stripe
                status: pending
                charge: 77a79666-443e-463c-bb33-9a55a7c3d9e5
                created_at: 1758210326
                updated_at: 1758210326
              schema:
                "$ref": "#/components/schemas/dispute_response"
  "/v1/downloads":
    get:
      summary: List
      tags:
      - Downloads
      operationId: list_download
      description: Returns a list of your downloads.
      parameters:
      - name: archived
        in: query
        description: Only return objects that are archived or not archived.
        required: false
        schema:
          type: boolean
      - name: customer_ids[]
        in: query
        description: Only return objects that belong to the given customers.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: product_ids[]
        in: query
        description: Only return objects that belong to the given products.
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/downloads"
                data:
                - id: 2d9e9c38-387d-4bd2-81f1-a071504ea051
                  object: download
                  alt:
                  archived: false
                  archived_at:
                  name:
                  title:
                  url:
                  media: adabf356-3d45-42b3-9187-5eda6074adf6
                  product: 28b38340-ac80-4910-929f-6d1385fc1ae7
                  created_at: 1758210327
                  updated_at: 1758210327
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Downloads
      operationId: create_download
      description: Creates a new download.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 0cd0eb59-db3d-417e-b962-ba15d18df827
                object: download
                alt:
                archived: false
                archived_at:
                name:
                title:
                url:
                media: e60e62c3-4e59-4de1-892c-372da23247f9
                product: 428877e3-d2e8-4d78-9afc-57adfee71be5
                created_at: 1758210327
                updated_at: 1758210327
              schema:
                "$ref": "#/components/schemas/download_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                download:
                  allOf:
                  - "$ref": "#/components/schemas/download_body"
              example:
                download:
                  media: e60e62c3-4e59-4de1-892c-372da23247f9
                  product: 428877e3-d2e8-4d78-9afc-57adfee71be5
  "/v1/downloads/{id}":
    get:
      summary: Retrieve
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Downloads
      operationId: retrieve_download
      description: Retrieves details of a specific download.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 9731c559-7a8c-43ca-9789-c773879b5fc5
                object: download
                alt:
                archived: false
                archived_at:
                name:
                title:
                url:
                media: ad759168-f9ec-4061-81ae-9f672b68a9f8
                product: 131832cb-9beb-4fbb-b00d-c806a2216356
                created_at: 1758210327
                updated_at: 1758210327
              schema:
                "$ref": "#/components/schemas/download_response"
    patch:
      summary: Update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Downloads
      operationId: update_download
      description: Updates a specific download.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 19aabc58-be61-471e-9765-0bb07d0b56fb
                object: download
                alt:
                archived: false
                archived_at:
                name:
                title:
                url:
                media: 3e57725e-93b9-468c-9161-e7753ab0a5f7
                product: 857badb7-87db-459d-b5f5-1f07a44425a8
                created_at: 1758210327
                updated_at: 1758210327
              schema:
                "$ref": "#/components/schemas/download_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                download:
                  allOf:
                  - "$ref": "#/components/schemas/download_body"
              example:
                download:
                  enabled: false
    delete:
      summary: Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Downloads
      operationId: delete_download
      description: Deletes a specific download.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: fdb93a1d-a8be-487b-ad87-c87a43862e34
                object: download
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/events":
    get:
      summary: List
      tags:
      - Events
      operationId: list_event
      description: Returns a list of your events.
      parameters:
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: record_ids[]
        in: query
        description: Only return objects that belong to the given records.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: type[]
        in: query
        description: Only return events with the given type.
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 6
                  limit: 20
                  page: 1
                  url: "/v1/events"
                data:
                - id: 93b64787-d2b4-45a7-ba11-ff9a33c8ed4f
                  object: event
                  data:
                    object:
                      id: fc977125-6a6e-4cf0-9feb-77194c48bc53
                      object: purchase
                      live_mode: true
                      quantity: 1
                      revoked: false
                      revoked_at:
                      revoke_at:
                      customer: ae9c1a6f-c9c5-4344-a2cc-389740478a4c
                      initial_order: a9ca369f-0662-4579-a8ec-19e1e77416fd
                      license:
                      price: 1f842f44-f745-4f3c-908a-7f3ebeeccea0
                      product: e8b1a14d-ffd8-41c1-8bab-d9cb033d8e69
                      subscription:
                      variant:
                      review:
                      created_at: 1758210327
                      updated_at: 1758210327
                  type: purchase.created
                  account: 681cb49b-13d1-47e1-b3c4-45a055f1f2bb
                  created_at: 1758210327
                - id: b0a50b15-1b3c-4ba4-bb22-8d38aec097a3
                  object: event
                  data:
                    object:
                      id: a9ca369f-0662-4579-a8ec-19e1e77416fd
                      object: order
                      fulfillment_status: unfulfilled
                      live_mode: true
                      number: '0001'
                      order_type: checkout
                      return_status: not_returned
                      shipment_status: unshippable
                      portal_url: http://app.example.com/portal_redirect/orders/a9ca369f-0662-4579-a8ec-19e1e77416fd
                      statement_url: http://app.example.com/statements/orders/a9ca369f-0662-4579-a8ec-19e1e77416fd
                      status: paid
                      checkout: 7f234088-95c7-4a80-b3d8-c25c0104c6d2
                      created_at: 1758210327
                      updated_at: 1758210327
                  type: order.paid
                  account: 681cb49b-13d1-47e1-b3c4-45a055f1f2bb
                  created_at: 1758210327
                - id: 0f5e93c5-8ee4-492c-a0ae-622ead44eebb
                  object: event
                  data:
                    object:
                      id: 66e29152-a32d-4b41-868d-e74da2b66acb
                      object: purchase
                      live_mode: true
                      quantity: 1
                      revoked: false
                      revoked_at:
                      revoke_at:
                      customer: ae9c1a6f-c9c5-4344-a2cc-389740478a4c
                      initial_order: a9ca369f-0662-4579-a8ec-19e1e77416fd
                      license:
                      price: 1f842f44-f745-4f3c-908a-7f3ebeeccea0
                      product: e8b1a14d-ffd8-41c1-8bab-d9cb033d8e69
                      subscription:
                      variant:
                      review:
                      created_at: 1758210327
                      updated_at: 1758210327
                  type: purchase.created
                  account: 681cb49b-13d1-47e1-b3c4-45a055f1f2bb
                  created_at: 1758210327
                - id: a1a72bb7-36d0-42a8-acb8-46f5bfb97013
                  object: event
                  data:
                    object:
                      id: a9ca369f-0662-4579-a8ec-19e1e77416fd
                      object: order
                      fulfillment_status: unfulfilled
                      live_mode: true
                      number: '0001'
                      order_type: checkout
                      return_status: not_returned
                      shipment_status: unshippable
                      portal_url: http://app.example.com/portal_redirect/orders/a9ca369f-0662-4579-a8ec-19e1e77416fd
                      statement_url: http://app.example.com/statements/orders/a9ca369f-0662-4579-a8ec-19e1e77416fd
                      status: paid
                      checkout: 7f234088-95c7-4a80-b3d8-c25c0104c6d2
                      created_at: 1758210327
                      updated_at: 1758210327
                  type: order.made_processing
                  account: 681cb49b-13d1-47e1-b3c4-45a055f1f2bb
                  created_at: 1758210327
                - id: 80638593-1e5d-4ef7-874d-d198c722a590
                  object: event
                  data:
                    object:
                      id: a9ca369f-0662-4579-a8ec-19e1e77416fd
                      object: order
                      fulfillment_status: unfulfilled
                      live_mode: true
                      number: '0001'
                      order_type: checkout
                      return_status: not_returned
                      shipment_status: unshippable
                      portal_url: http://app.example.com/portal_redirect/orders/a9ca369f-0662-4579-a8ec-19e1e77416fd
                      statement_url: http://app.example.com/statements/orders/a9ca369f-0662-4579-a8ec-19e1e77416fd
                      status: paid
                      checkout: 7f234088-95c7-4a80-b3d8-c25c0104c6d2
                      created_at: 1758210327
                      updated_at: 1758210327
                  type: order.created
                  account: 681cb49b-13d1-47e1-b3c4-45a055f1f2bb
                  created_at: 1758210327
                - id: f628f0e3-9393-47ea-8333-e288d672f4e6
                  object: event
                  data:
                    object:
                      id: e8b1a14d-ffd8-41c1-8bab-d9cb033d8e69
                      object: product
                      allow_out_of_stock_purchases: false
                      archived: false
                      archived_at:
                      auto_fulfill_enabled: false
                      available_stock: -1
                      average_stars: '0.0'
                      description:
                      held_stock: 1
                      featured: false
                      licensing_enabled: false
                      license_activation_limit:
                      metadata: {}
                      purchase_limit:
                      metrics:
                        currency: usd
                        max_price_amount: 2900
                        min_price_amount: 2900
                        prices_count: 1
                      name: Test Product
                      recurring: false
                      reviews_breakdown: {}
                      reviews_enabled: true
                      shipping_enabled: false
                      sku:
                      slug: test-product
                      solicit_reviews: true
                      status: draft
                      stock: 0
                      stock_enabled: false
                      tax_enabled: false
                      tax_category: tangible
                      weight: 0.0
                      weight_unit: lb
                      commission_structure:
                      featured_product_media:
                      product_group:
                      current_release_download:
                      shipping_profile:
                      cataloged_at: 1758210327
                      discarded_at:
                      created_at: 1758210327
                      updated_at: 1758210327
                  type: product.stock_adjusted
                  account: 681cb49b-13d1-47e1-b3c4-45a055f1f2bb
                  created_at: 1758210327
              schema:
                "$ref": "#/components/schemas/list_response"
  "/v1/events/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Events
      operationId: retrieve_event
      description: Retrieves details of a specific event.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 794cecaf-0409-4683-a0a2-165bc98bd973
                object: event
                data:
                  object:
                    id: 4352e0de-4682-4362-90ca-b8b333ca8a25
                    object: purchase
                    live_mode: true
                    quantity: 1
                    revoked: false
                    revoked_at:
                    revoke_at:
                    customer: d35196ae-5c26-426d-9c65-929a4bfea70c
                    initial_order: cdb1bc24-0a66-4169-9865-ca3ebf91f719
                    license:
                    price: cb489b4d-9743-4d7b-b373-fa0579b21481
                    product: 10d003c9-2f2d-41ca-a3af-4357f9351b06
                    subscription:
                    variant:
                    review:
                    created_at: 1758210328
                    updated_at: 1758210328
                type: purchase.created
                account: ff75298a-0eae-48cf-9282-7898c9929f74
                created_at: 1758210328
              schema:
                "$ref": "#/components/schemas/event_response"
  "/v1/exports":
    get:
      summary: List
      tags:
      - Exports
      operationId: list_export
      description: Returns a list of your exports.
      parameters:
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/exports"
                data:
                - id: a668fd6b-4ccc-48f2-8c85-cf624fbc5fc5
                  object: export_customer
                  email: person@example.com
                  file_url:
                  record_count: 0
                  status: pending
                  type: customers
                  created_at: 1758210328
                  updated_at: 1758210328
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Exports
      operationId: create_export
      description: Creates a new export.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 2c4b5d46-59ee-478a-8ff4-552dd3ec654a
                object: export
                email: person@example.com
                file_url:
                record_count: 0
                status: pending
                type: orders
                created_at: 1758210328
                updated_at: 1758210328
              schema:
                "$ref": "#/components/schemas/export_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                export:
                  allOf:
                  - "$ref": "#/components/schemas/export_body"
              example:
                export:
                  type: orders
                  email: person@example.com
  "/v1/exports/{id}":
    get:
      summary: Retrieve
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Exports
      operationId: retrieve_export
      description: Retrieves details of a specific export.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 392074a8-2df8-446b-8916-b6bab53a9495
                object: export_customer
                email: person@example.com
                file_url:
                record_count: 0
                status: pending
                type: customers
                created_at: 1758210328
                updated_at: 1758210328
              schema:
                "$ref": "#/components/schemas/export_response"
  "/v1/fees":
    get:
      summary: List
      tags:
      - Fees
      operationId: list_fee
      description: Returns a list of your fees.
      parameters:
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/fees"
                data:
                - id: afd66ef9-ea37-47a7-9be0-42d80f1237c0
                  object: fee
                  amount: 100
                  description: Transaction Fee
                  fee_type: manual
                  line_item: 111b34bd-ce9a-46ad-852b-c26528bc0113
                  created_at: 1758210328
                  updated_at: 1758210328
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Fees
      operationId: create_fee
      description: Creates a new fee.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: d0b8afd4-0154-4be1-84ab-3c731c7dca4c
                object: fee
                amount: 10
                description: Setup fee
                fee_type: manual
                line_item: 11581efd-ea8b-45aa-9224-c1d0f4c63319
                created_at: 1758210329
                updated_at: 1758210329
              schema:
                "$ref": "#/components/schemas/fee_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                fee:
                  allOf:
                  - "$ref": "#/components/schemas/fee_body"
              example:
                fee:
                  amount: 10
                  description: Setup fee
                  line_item_id: 11581efd-ea8b-45aa-9224-c1d0f4c63319
  "/v1/fees/{id}":
    get:
      summary: Retrieve
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Fees
      operationId: retrieve_fee
      description: Retrieves details of a specific fee.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: d267a91b-1d0d-44ef-94e2-b1198eba287c
                object: fee
                amount: 100
                description: Transaction Fee
                fee_type: manual
                line_item: ecc4d5f5-6c27-4212-8731-4bff40c0d8ea
                created_at: 1758210329
                updated_at: 1758210329
              schema:
                "$ref": "#/components/schemas/fee_response"
    patch:
      summary: Update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Fees
      operationId: update_fee
      description: Updates a specific fee.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 9f6b5861-9e16-4511-8fa6-3f3bc9dbc60c
                object: fee
                amount: 25
                description: Transaction Fee
                fee_type: manual
                line_item: a218a60d-d40b-40b7-94a5-b0dc2eccd80d
                created_at: 1758210329
                updated_at: 1758210329
              schema:
                "$ref": "#/components/schemas/fee_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                fee:
                  allOf:
                  - "$ref": "#/components/schemas/fee_body"
              example:
                fee:
                  amount: 25
    delete:
      summary: Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Fees
      operationId: delete_fee
      description: Deletes a specific fee.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: d2207d3d-12a0-44a8-8aaf-636525622f28
                object: fee
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/fulfillment_items":
    get:
      summary: List
      tags:
      - Fulfillment Items
      operationId: list_fulfillment_item
      description: Returns a list of your fulfillment items.
      parameters:
      - name: fulfillment_ids[]
        in: query
        description: Only return objects that belong to the given fulfillments.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/fulfillment_items"
                data:
                - id: d6152824-f837-4b9f-9b0b-9dfaac4d889c
                  object: fulfillment_item
                  quantity: 1
                  g_weight: 0.0
                  unit_g_weight: 0.0
                  fulfillment: 70d66192-8e76-4cba-a7b6-5e93d4e3850d
                  line_item: b1925d9c-b407-4714-93ce-2a1c1b10a22f
                  created_at: 1758210330
                  updated_at: 1758210330
              schema:
                "$ref": "#/components/schemas/list_response"
  "/v1/fulfillment_items/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Fulfillment Items
      operationId: retrieve_fulfillment_item
      description: Retrieves details of a specific fulfillment item.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: fc3deba7-0ee3-4cc5-9a21-76113a06a688
                object: fulfillment_item
                quantity: 1
                g_weight: 0.0
                unit_g_weight: 0.0
                fulfillment: 215c5fc8-ef57-47dd-920c-d7d4618ace84
                line_item: 1c7eb5b1-74e0-4429-a207-d78ccc9c6e5b
                created_at: 1758210330
                updated_at: 1758210330
              schema:
                "$ref": "#/components/schemas/fulfillment_item_response"
  "/v1/fulfillments":
    get:
      summary: List
      tags:
      - Fulfillments
      operationId: list_fulfillment
      description: Returns a list of your fulfillments.
      parameters:
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: order_ids[]
        in: query
        description: Only return objects that belong to the given orders.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: shipment_status[]
        in: query
        description: Only return objects with the given shipment status.
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/fulfillments"
                data:
                - id: 4f4901a1-09a8-4c1a-bfdb-052a68e3f3b7
                  object: fulfillment
                  notifications_enabled: false
                  number: 0000-F
                  shipment_status: unshipped
                  g_weight: 0.0
                  order: 7f1da02e-9ac6-424a-9310-e3355484ae06
                  created_at: 1758210331
                  updated_at: 1758210331
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Fulfillments
      operationId: create_fulfillment
      description: Creates a new fulfillment.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 7dcb0cdf-29a2-4e6a-b6ee-385fddbdea59
                object: fulfillment
                notifications_enabled: false
                number: 0000-F1
                shipment_status: unshippable
                g_weight: 0.0
                order: 0f906780-9df6-4a1d-92c2-5e1968963cc3
                created_at: 1758210331
                updated_at: 1758210331
              schema:
                "$ref": "#/components/schemas/fulfillment_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                fulfillment:
                  allOf:
                  - "$ref": "#/components/schemas/fulfillment_body"
              example:
                fulfillment:
                  order: 0f906780-9df6-4a1d-92c2-5e1968963cc3
                  fulfillment_items:
                  - line_item: dd02e7cb-387d-484b-ae1c-8fced2cd4601
                    quantity: 1
  "/v1/fulfillments/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Fulfillments
      operationId: retrieve_fulfillment
      description: Retrieves details of a specific fulfillment.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 5e74a92f-3b54-4353-a5cb-7e5a68b5a413
                object: fulfillment
                notifications_enabled: false
                number: 0000-F
                shipment_status: unshipped
                g_weight: 0.0
                order: e207afc1-8018-4925-a354-799e783f2ebf
                created_at: 1758210332
                updated_at: 1758210332
              schema:
                "$ref": "#/components/schemas/fulfillment_response"
    patch:
      summary: Update
      tags:
      - Fulfillments
      operationId: update_fulfillment
      description: Updates a specific fulfillment.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 7233385c-ba5c-41e9-89e4-d1b8196590da
                object: fulfillment
                notifications_enabled: false
                number: 0000-F
                shipment_status: unshippable
                g_weight: 0.0
                order: 958aeb35-f4f4-4f91-a2d3-a2140b686312
                created_at: 1758210332
                updated_at: 1758210333
              schema:
                "$ref": "#/components/schemas/fulfillment_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                fulfillment:
                  allOf:
                  - "$ref": "#/components/schemas/fulfillment_body"
              example:
                fulfillment:
                  trackings:
                  - number: 1Z879E930346834440
    delete:
      summary: Delete
      tags:
      - Fulfillments
      operationId: delete_fulfillment
      description: Deletes a specific fulfillment.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 575f3ea3-2eed-40b8-a3e5-46bafc34e133
                object: fulfillment
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/import_rows":
    get:
      summary: List
      tags:
      - Import Rows
      operationId: list_import_row
      description: Returns a list of import rows.
      parameters:
      - name: import_ids[]
        in: query
        description: Only return objects with the given import IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 0
                  limit: 20
                  page: 1
                  url: "/v1/import_rows"
                data: []
              schema:
                "$ref": "#/components/schemas/list_response"
  "/v1/imports":
    get:
      summary: List
      tags:
      - Imports
      operationId: list_import
      description: Returns a list of your imports.
      parameters:
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/imports"
                data:
                - id: 25de5a8d-0427-4d34-8dc0-8df40dba0f64
                  object: import
                  import_type: customers
                  live_mode: false
                  rows_imported: 0
                  rows_uploaded: 0
                  status: pending
                  created_at: 1758210333
                  updated_at: 1758210333
              schema:
                "$ref": "#/components/schemas/list_response"
  "/v1/imports/{id}":
    get:
      summary: Retrieve
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Imports
      operationId: retrieve_import
      description: Retrieves details of a specific import.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 46ec8d78-e60c-4133-abe0-a5efb77e27fb
                object: import
                import_type: customers
                live_mode: false
                rows_imported: 0
                rows_uploaded: 0
                status: pending
                created_at: 1758210333
                updated_at: 1758210333
              schema:
                "$ref": "#/components/schemas/import_response"
  "/v1/imports/products":
    post:
      summary: Batch Create Products
      tags:
      - Imports
      operationId: batch_create_products_import
      description: Creates multiple products in batch.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: b76ee1cd-8bd7-493a-8e62-b2565d322ef3
                object: import
                import_type: product
                live_mode: true
                rows_imported: 0
                rows_uploaded: 0
                status: pending
                created_at: 1758210333
                updated_at: 1758210333
              schema:
                "$ref": "#/components/schemas/import_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                import_products:
                  allOf:
                  - "$ref": "#/components/schemas/import_products_body"
              example:
                import:
                  data:
                  - name: Test Product
                    slug: test-product
                    prices:
                    - amount: 1000
                      currency: usd
                    product_medias:
                    - url: https://example.com/image.jpg
  "/v1/imports/coupons":
    post:
      summary: Batch Create Coupons
      tags:
      - Imports
      operationId: batch_create_coupons_import
      description: Creates multiple coupons in batch.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 7878bd82-1d71-433d-9c31-fe58175b6904
                object: import
                import_type: coupon
                live_mode: true
                rows_imported: 0
                rows_uploaded: 0
                status: pending
                created_at: 1758210333
                updated_at: 1758210333
              schema:
                "$ref": "#/components/schemas/import_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                import_coupons:
                  allOf:
                  - "$ref": "#/components/schemas/import_coupons_body"
              example:
                import:
                  data:
                  - name: Test Coupon
                    amount_off: 500
  "/v1/invoices":
    get:
      summary: List
      tags:
      - Invoices
      operationId: list_invoice
      description: Returns a list of your invoices.
      parameters:
      - name: customer_ids[]
        in: query
        description: Only return objects that belong to the given customers.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: live_mode
        in: query
        description: Only return objects that are live mode or test mode.
        required: false
        schema:
          type: boolean
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: query
        in: query
        description: The query to be used for full text search of this collection.
        required: false
        schema:
          type: string
      - name: status[]
        in: query
        description: Only return objects with the given status.
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/invoices"
                data:
                - id: db203fe1-8bc8-4f5f-8026-0153c43ac928
                  object: invoice
                  automatic_collection: false
                  due_date:
                  footer:
                  issue_date:
                  live_mode: true
                  memo:
                  metadata: {}
                  notifications_enabled: true
                  order_number:
                  status: draft
                  portal_url: http://app.example.com/portal_redirect/invoices/db203fe1-8bc8-4f5f-8026-0153c43ac928
                  notification_sent_at:
                  reminder_notification_sent_at:
                  checkout: 64362afe-8a21-4698-9e08-674073c5a9d1
                  created_at: 1758210334
                  updated_at: 1758210334
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Invoices
      operationId: create_invoice
      description: Creates a new invoice.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 674fe953-589a-4fca-a322-0c676c29e005
                object: invoice
                automatic_collection: false
                due_date: 1717200000
                footer:
                issue_date:
                live_mode: true
                memo:
                metadata: {}
                notifications_enabled: true
                order_number:
                status: draft
                portal_url: http://app.example.com/portal_redirect/invoices/674fe953-589a-4fca-a322-0c676c29e005
                notification_sent_at:
                reminder_notification_sent_at:
                checkout: a0bbd285-517a-4442-a3fa-243211be1f7a
                created_at: 1758210334
                updated_at: 1758210334
              schema:
                "$ref": "#/components/schemas/invoice_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                invoice:
                  allOf:
                  - "$ref": "#/components/schemas/invoice_body"
              example:
                invoice:
                  due_date: '2024-06-01'
  "/v1/invoices/{id}":
    get:
      summary: Retrieve
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: refresh_status
        in: query
        description: If true, the server will check the associated payment processor
          to see if a status change has occured. (This should be used when retrieving
          a checkout or payment intent immediately after it has been paid through
          the processor. In this scenario, it's possible that you'll request the checkout
          before the server has received the webhook from the processor. Setting this
          pararmeter to `true` prevents this scenario.)
        required: false
        schema:
          type: boolean
      tags:
      - Invoices
      operationId: retrieve_invoice
      description: Retrieves details of a specific invoice.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 1aff4cc1-9f88-4c93-9dcc-6476e0743752
                object: invoice
                automatic_collection: false
                due_date:
                footer:
                issue_date:
                live_mode: true
                memo:
                metadata: {}
                notifications_enabled: true
                order_number:
                status: draft
                portal_url: http://app.example.com/portal_redirect/invoices/1aff4cc1-9f88-4c93-9dcc-6476e0743752
                notification_sent_at:
                reminder_notification_sent_at:
                checkout: '022957f9-af83-4d23-99c0-4b92f7d077b5'
                created_at: 1758210334
                updated_at: 1758210334
              schema:
                "$ref": "#/components/schemas/invoice_response"
    patch:
      summary: Update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Invoices
      operationId: update_invoice
      description: Updates a specific invoice.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: cd6c30a4-105b-4e10-9775-8d7fc003a458
                object: invoice
                automatic_collection: false
                due_date: 1719792000
                footer:
                issue_date:
                live_mode: true
                memo:
                metadata: {}
                notifications_enabled: true
                order_number:
                status: draft
                portal_url: http://app.example.com/portal_redirect/invoices/cd6c30a4-105b-4e10-9775-8d7fc003a458
                notification_sent_at:
                reminder_notification_sent_at:
                checkout: '0638fe98-bf4c-4bd0-96b8-9e3f9a4af4fa'
                created_at: 1758210334
                updated_at: 1758210334
              schema:
                "$ref": "#/components/schemas/invoice_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                invoice:
                  allOf:
                  - "$ref": "#/components/schemas/invoice_body"
              example:
                invoice:
                  due_date: '2024-07-01'
    delete:
      summary: Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Invoices
      operationId: delete_invoice
      description: Deletes a specific invoice.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: bf0e34e0-e56d-49a5-99e1-2a9ddea79377
                object: invoice
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/invoices/{id}/make_draft":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    patch:
      summary: Make Draft
      tags:
      - Invoices
      operationId: make_draft_invoice
      description: Revert an open invoice back to draft.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 051feafd-4649-4bbe-af5d-5f66e2f7ee6f
                object: invoice
                automatic_collection: false
                due_date:
                footer:
                issue_date: 1758153600
                live_mode: true
                memo:
                metadata: {}
                notifications_enabled: true
                order_number: '0001'
                status: draft
                portal_url: http://app.example.com/portal_redirect/invoices/051feafd-4649-4bbe-af5d-5f66e2f7ee6f
                notification_sent_at: 1758210334
                reminder_notification_sent_at:
                checkout: 9a8b6288-b52c-4949-b1fc-d54cd0b2a4e8
                created_at: 1758210334
                updated_at: 1758210334
              schema:
                "$ref": "#/components/schemas/invoice_response"
  "/v1/invoices/{id}/open":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    patch:
      summary: Open
      parameters:
      - name: manual_payment
        in: query
        description: Whether or not to finalize this checkout with a manual payment.
          If `true`, the checkout will move directly to the `processing` state.
        required: false
        schema:
          type: boolean
      - name: manual_payment_method_id
        in: query
        description: The manual payment method to use when finalizing this checkout.
          If set, this will take priority over all other parameters.
        required: false
        schema:
          type: string
      - name: payment_method_id
        in: query
        description: The payment method to use when finalizing this checkout. If set,
          this will take priority over all other finalize parameters and an attempt
          to pay the checkout will occur immediately.
        required: false
        schema:
          type: string
      tags:
      - Invoices
      operationId: open_invoice
      description: Open an invoice to send it to the customer or collect payment immediately.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 429aed32-c173-479e-863e-128c2ee032d9
                object: invoice
                automatic_collection: false
                due_date:
                footer:
                issue_date: 1758153600
                live_mode: true
                memo:
                metadata: {}
                notifications_enabled: true
                order_number: '0001'
                status: open
                portal_url: http://app.example.com/portal_redirect/invoices/429aed32-c173-479e-863e-128c2ee032d9
                notification_sent_at: 1758210335
                reminder_notification_sent_at:
                checkout: f72b2e2a-7a33-4641-af54-88586e13948e
                created_at: 1758210335
                updated_at: 1758210335
              schema:
                "$ref": "#/components/schemas/invoice_response"
  "/v1/invoices/{id}/resend_notification":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    post:
      summary: Resend Notification
      tags:
      - Invoices
      operationId: resend_notification_invoice
      description: Resend invoice to the customer.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: b4e06293-cc2e-4ead-bd27-f58c5089642e
                object: invoice
                automatic_collection: false
                due_date:
                footer:
                issue_date: 1758153600
                live_mode: true
                memo:
                metadata: {}
                notifications_enabled: true
                order_number: '0001'
                status: open
                portal_url: http://app.example.com/portal_redirect/invoices/b4e06293-cc2e-4ead-bd27-f58c5089642e
                notification_sent_at: 1758210335
                reminder_notification_sent_at:
                checkout: aad15d89-a838-43a3-a252-391bd48ea38c
                created_at: 1758210335
                updated_at: 1758210335
              schema:
                "$ref": "#/components/schemas/invoice_response"
  "/v1/licenses":
    get:
      summary: List
      tags:
      - Licenses
      operationId: list_license
      description: Returns a list of your licenses.
      parameters:
      - name: customer_ids[]
        in: query
        description: Only return objects that belong to the given customers.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: product_ids[]
        in: query
        description: Only return objects that belong to the given products.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: purchase_ids[]
        in: query
        description: Only return objects that belong to the given purchases.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: query
        in: query
        description: The query to be used for full text search of this collection.
        required: false
        schema:
          type: string
      - name: revoked
        in: query
        description: Only return objects that are revoked or not revoked.
        required: false
        schema:
          type: boolean
      - name: sort
        in: query
        description: The sorting column and order to be used for this collection.
          Available sorting columns for this endpoint are `activations_count`, `created_at`,
          and `updated_at`.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/licenses"
                data:
                - id: b30f7634-e0bb-4588-9548-35abc4f36aee
                  object: license
                  activations_count: 0
                  activation_limit:
                  key: 4a10b469-b79e-4dc4-a631-12cb92528c42
                  revokes_at:
                  status: inactive
                  customer: c81503f1-d7ba-497c-97b2-614b67ec467c
                  purchase: fcefaa23-a672-4515-b720-6f3e24a2b210
                  created_at: 1758210336
                  updated_at: 1758210336
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Licenses
      operationId: create_license
      description: Creates a new license.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 42a8461c-f35e-4cdb-b0b0-59caf4ecd860
                object: license
                activations_count: 0
                activation_limit:
                key: abc-123-def-456
                revokes_at:
                status: inactive
                customer: d5f7f7a6-1eb3-47ee-8100-945b9b5f42c6
                purchase: 1e98b2ea-69e0-4b71-89d8-67e3f3ce4059
                created_at: 1758210337
                updated_at: 1758210337
              schema:
                "$ref": "#/components/schemas/license_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                license:
                  allOf:
                  - "$ref": "#/components/schemas/license_body"
              example:
                license:
                  key: abc-123-def-456
                  purchase: 1e98b2ea-69e0-4b71-89d8-67e3f3ce4059
  "/v1/licenses/{id}":
    get:
      summary: Retrieve
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Licenses
      operationId: retrieve_license
      description: Retrieves details of a specific license.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 30c19fd8-83ad-4bcc-b35a-2b25d6c06aed
                object: license
                activations_count: 0
                activation_limit:
                key: dbd60d56-2d20-484a-86b6-f3cb3e337214
                revokes_at:
                status: inactive
                customer: b5ecda3b-7c8d-47c0-b4f7-e2e7bad0a399
                purchase: de4f4052-1272-4208-88f6-8bfeb8d0e869
                created_at: 1758210337
                updated_at: 1758210337
              schema:
                "$ref": "#/components/schemas/license_response"
    patch:
      summary: Update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Licenses
      operationId: update_license
      description: Updates a specific license.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 2a6cf504-ddf0-4aab-bf75-ae5f18d20842
                object: license
                activations_count: 0
                activation_limit: 10
                key: 01d2801b-a74f-4868-8fa0-f2364feed6e5
                revokes_at:
                status: inactive
                customer: 6b20b4cc-69fd-42ae-831e-35084993baba
                purchase: 69739cb5-b201-4df7-988e-b37d8587f08e
                created_at: 1758210338
                updated_at: 1758210338
              schema:
                "$ref": "#/components/schemas/license_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                license:
                  allOf:
                  - "$ref": "#/components/schemas/license_body"
              example:
                license:
                  activation_limit: 10
    delete:
      summary: Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Licenses
      operationId: delete_license
      description: Deletes a specific license.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 1b2e728f-733d-4cf0-a885-642eb0a16a20
                object: license
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/line_items":
    get:
      summary: List
      tags:
      - Line Items
      operationId: list_line_item
      description: Returns a list of your line_items.
      parameters:
      - name: checkout_ids[]
        in: query
        description: Only return objects that belong to the given checkouts.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/line_items"
                data:
                - id: 7b0fe24d-2a48-4f19-adb0-f9fe383d379f
                  object: line_item
                  ad_hoc_amount:
                  discount_amount: 0
                  fees_amount: 0
                  full_amount: 2900
                  fulfilled_quantity: 0
                  locked: false
                  note:
                  purchasable_status: purchasable
                  quantity: 1
                  g_weight: 0.0
                  unit_g_weight: 0.0
                  scratch_amount: 2900
                  stock_held: false
                  subtotal_amount: 2900
                  tax_amount: 0
                  tax_rate: 0.0
                  total_amount: 2900
                  total_savings_amount: 0
                  trial: false
                  trial_amount: 0
                  variant_options:
                  variant_option_names:
                  bump:
                  checkout: 0fdf28b4-c5da-4bb4-9794-14ba093637d0
                  price: 54a9cd6a-5d54-449a-8812-d6b8835c6215
                  upsell:
                  variant:
                  swap:
                  created_at: 1758210339
                  updated_at: 1758210339
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Line Items
      operationId: create_line_item
      description: Creates a new line item.
      parameters:
      - name: consolidate
        in: query
        description: If `true` then existing line_items for the same price will be
          consolidated into this line item. (Ad hoc line items will not be consolidated.)
        required: false
        schema:
          type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 40a2819b-e25d-4eb4-a259-97336b19f78c
                object: line_item
                ad_hoc_amount:
                discount_amount: 0
                fees_amount: 0
                full_amount: 2900
                fulfilled_quantity: 0
                locked: false
                note:
                purchasable_status: purchasable
                quantity: 1
                g_weight: 0.0
                unit_g_weight: 0.0
                scratch_amount: 2900
                stock_held: false
                subtotal_amount: 2900
                tax_amount: 0
                tax_rate: 0.0
                total_amount: 2900
                total_savings_amount: 0
                trial: false
                trial_amount: 0
                variant_options:
                variant_option_names:
                bump:
                checkout: 3b77b163-5aff-4191-91cf-4e06250b14db
                price: 0fe492d2-04b6-4eb1-9fb1-7cb08f69a3ae
                upsell:
                variant:
                swap:
                created_at: 1758210339
                updated_at: 1758210339
              schema:
                "$ref": "#/components/schemas/line_item_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                line_item:
                  allOf:
                  - "$ref": "#/components/schemas/line_item_body"
              example:
                line_item:
                  price: 0fe492d2-04b6-4eb1-9fb1-7cb08f69a3ae
                  checkout: 3b77b163-5aff-4191-91cf-4e06250b14db
  "/v1/line_items/{id}":
    get:
      summary: Retrieve
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Line Items
      operationId: retrieve_line_item
      description: Retrieves details of a specific line item.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 2a2cab16-6d46-4dc0-8e68-68508006377e
                object: line_item
                ad_hoc_amount:
                discount_amount: 0
                fees_amount: 0
                full_amount: 2900
                fulfilled_quantity: 0
                locked: false
                note:
                purchasable_status: purchasable
                quantity: 1
                g_weight: 0.0
                unit_g_weight: 0.0
                scratch_amount: 2900
                stock_held: false
                subtotal_amount: 2900
                tax_amount: 0
                tax_rate: 0.0
                total_amount: 2900
                total_savings_amount: 0
                trial: false
                trial_amount: 0
                variant_options:
                variant_option_names:
                bump:
                checkout: 36979b05-0005-4621-acb0-8b83a8843714
                price: e64f5c93-f98a-46e0-8c66-b084c7dc2707
                upsell:
                variant:
                swap:
                created_at: 1758210339
                updated_at: 1758210339
              schema:
                "$ref": "#/components/schemas/line_item_response"
    patch:
      summary: Update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: consolidate
        in: query
        description: If `true` then existing line_items for the same price will be
          consolidated into this line item. (Ad hoc line items will not be consolidated.)
        required: false
        schema:
          type: boolean
      tags:
      - Line Items
      operationId: update_line_item
      description: Updates a specific line item.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: e6d9d90c-9020-4e24-bbf8-13c2cf2ec80c
                object: line_item
                ad_hoc_amount:
                discount_amount: 0
                fees_amount: 0
                full_amount: 5800
                fulfilled_quantity: 0
                locked: false
                note:
                purchasable_status: purchasable
                quantity: 2
                g_weight: 0.0
                unit_g_weight: 0.0
                scratch_amount: 5800
                stock_held: false
                subtotal_amount: 5800
                tax_amount: 0
                tax_rate: 0.0
                total_amount: 5800
                total_savings_amount: 0
                trial: false
                trial_amount: 0
                variant_options:
                variant_option_names:
                bump:
                checkout: 1f3d265f-586b-4299-bda8-665081116e36
                price: 6e3d225a-fb68-4455-ac9c-99c758fd29ca
                upsell:
                variant:
                swap:
                created_at: 1758210339
                updated_at: 1758210339
              schema:
                "$ref": "#/components/schemas/line_item_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                line_item:
                  allOf:
                  - "$ref": "#/components/schemas/line_item_body"
              example:
                line_item:
                  quantity: 2
    delete:
      summary: Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Line Items
      operationId: delete_line_item
      description: Deletes a specific line item.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 56b86d4a-dd3f-46a6-8fd4-5aa32ba3c91d
                object: line_item
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/line_items/upsell":
    post:
      summary: Upsell
      tags:
      - Line Items
      operationId: upsell_line_item
      description: Creates a new line item as an upsell. An attempt to pay the upsell
        will be made using the payment method on the checkout.
      parameters:
      - name: preview
        in: query
        description: Whether or not the endpoint should return a preview of the result.
          If `true`, no modifications to the resource will be saved.
        required: false
        schema:
          type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: d801761b-1066-4e38-8b15-4417aaddf446
                object: line_item
                ad_hoc_amount:
                discount_amount: 0
                fees_amount: -500
                full_amount: 2400
                fulfilled_quantity: 0
                locked: false
                note:
                purchasable_status: purchasable
                quantity: 1
                g_weight: 0.0
                unit_g_weight: 0.0
                scratch_amount: 2900
                stock_held: true
                subtotal_amount: 2900
                tax_amount: 0
                tax_rate: 0.0
                total_amount: 2400
                total_savings_amount: -500
                trial: false
                trial_amount: 0
                variant_options:
                variant_option_names:
                bump:
                checkout: d4a4ed24-1ac6-49c7-bed4-786a961cfc3d
                price: 2913adab-ebbf-42f2-8ac0-f09ed7ba973d
                upsell: a34d2ee0-8e45-40ce-9461-d50805d129f1
                variant:
                swap:
                created_at: 1758210340
                updated_at: 1758210341
              schema:
                "$ref": "#/components/schemas/line_item_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                line_item:
                  allOf:
                  - "$ref": "#/components/schemas/line_item_body"
              example:
                line_item:
                  price: 2913adab-ebbf-42f2-8ac0-f09ed7ba973d
                  checkout: d4a4ed24-1ac6-49c7-bed4-786a961cfc3d
                  upsell: a34d2ee0-8e45-40ce-9461-d50805d129f1
  "/v1/line_items/{id}/swap":
    patch:
      summary: Swap
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Line Items
      operationId: swap_line_item
      description: Performs a swap on the line item for the specific swap price.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: e6c7c60e-68b3-413d-a1b6-2e8724327ea9
                object: line_item
                ad_hoc_amount:
                discount_amount: 0
                fees_amount: 0
                full_amount: 2900
                fulfilled_quantity: 0
                locked: false
                note:
                purchasable_status: purchasable
                quantity: 1
                g_weight: 0.0
                unit_g_weight: 0.0
                scratch_amount: 2900
                stock_held: false
                subtotal_amount: 2900
                tax_amount: 0
                tax_rate: 0.0
                total_amount: 2900
                total_savings_amount: 0
                trial: false
                trial_amount: 0
                variant_options:
                variant_option_names:
                bump:
                checkout: a46ae926-3cfe-47b1-9dbf-5f804974edd6
                price: 419d50ce-24d2-45d0-89cb-92bfa6b8368d
                upsell:
                variant:
                swap: 4ec77fd1-16fc-4f11-9b71-e7be2569a761
                created_at: 1758210341
                updated_at: 1758210341
              schema:
                "$ref": "#/components/schemas/line_item_response"
  "/v1/line_items/{id}/unswap":
    patch:
      summary: Unswap
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Line Items
      operationId: unswap_line_item
      description: Reverses the swap on the line item for the original price.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: bcafda53-b56a-4339-ac5f-3725f681389a
                object: line_item
                ad_hoc_amount:
                discount_amount: 0
                fees_amount: 0
                full_amount: 2900
                fulfilled_quantity: 0
                locked: false
                note:
                purchasable_status: purchasable
                quantity: 1
                g_weight: 0.0
                unit_g_weight: 0.0
                scratch_amount: 2900
                stock_held: false
                subtotal_amount: 2900
                tax_amount: 0
                tax_rate: 0.0
                total_amount: 2900
                total_savings_amount: 0
                trial: false
                trial_amount: 0
                variant_options:
                variant_option_names:
                bump:
                checkout: 67155cb8-0936-490d-b536-f705a7db99bd
                price: adcf2625-abf7-4a2d-b616-da63c5f8fcb4
                upsell:
                variant:
                swap:
                created_at: 1758210341
                updated_at: 1758210341
              schema:
                "$ref": "#/components/schemas/line_item_response"
  "/v1/line_items/{id}/offer_swap":
    patch:
      summary: Offer Swap
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Line Items
      operationId: offer_swap_line_item
      description: Records an offer for the specific swap â€“ used for swap analytics.
      responses:
        '200':
          description: Success
  "/v1/manual_charges":
    get:
      summary: List
      tags:
      - Manual Charges
      operationId: list_manual_charge
      description: Returns a list of your manual charges.
      parameters:
      - name: checkout_ids[]
        in: query
        description: Only return objects that belong to the given checkouts.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/manual_charges"
                data:
                - id: 9434b569-d133-4b5e-b62c-bef58fd153c4
                  object: manual_charge
                  amount: 2900
                  currency: usd
                  checkout: b2f1a581-c9a7-40c8-b700-f7833ee46ec1
                  manual_payment_method:
                  created_at: 1758210342
                  updated_at: 1758210342
              schema:
                "$ref": "#/components/schemas/list_response"
  "/v1/manual_charges/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Manual Charges
      operationId: retrieve_manual_charge
      description: Retrieves details of a specific manual charge.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 0eff6efc-cde2-4706-9c59-38b2b88bcefa
                object: manual_charge
                amount: 2900
                currency: usd
                checkout: c219ff30-5b53-4e8f-9e73-be92314dfb12
                manual_payment_method:
                created_at: 1758210343
                updated_at: 1758210343
              schema:
                "$ref": "#/components/schemas/manual_charge_response"
  "/v1/manual_payment_methods":
    get:
      summary: List
      tags:
      - Manual Payment Methods
      operationId: list_manual_payment_method
      description: Returns a list of your manual payment methods.
      parameters:
      - name: archived
        in: query
        description: Only return objects that are archived or not archived.
        required: false
        schema:
          type: boolean
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: reusable
        in: query
        description: Only return payment methods that are reusable or not.
        required: false
        schema:
          type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/manual_payment_methods"
                data:
                - id: 41aab539-f18b-44a9-9ddb-3e832f1d5c03
                  object: manual_payment_method
                  archived: false
                  archived_at:
                  description:
                  instructions:
                  name: Manual Payment Method 1
                  reusable: true
                  discarded_at:
                  created_at: 1758210343
                  updated_at: 1758210343
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Manual Payment Methods
      operationId: create_manual_payment_method
      description: Creates a new manual_payment_method.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 774497f9-da2c-493b-ab08-c7622421ae16
                object: manual_payment_method
                archived: false
                archived_at:
                description:
                instructions:
                name: Cash on Delivery
                reusable: true
                discarded_at:
                created_at: 1758210343
                updated_at: 1758210343
              schema:
                "$ref": "#/components/schemas/manual_payment_method_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                manual_payment_method:
                  allOf:
                  - "$ref": "#/components/schemas/manual_payment_method_body"
              example:
                manual_payment_method:
                  name: Cash on Delivery
  "/v1/manual_payment_methods/{id}":
    get:
      summary: Retrieve
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Manual Payment Methods
      operationId: retrieve_manual_payment_method
      description: Retrieves details of a specific manual payment method.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 0c9678ca-5187-4b79-bfa3-90000daa7c78
                object: manual_payment_method
                archived: false
                archived_at:
                description:
                instructions:
                name: Manual Payment Method 3
                reusable: true
                discarded_at:
                created_at: 1758210343
                updated_at: 1758210343
              schema:
                "$ref": "#/components/schemas/manual_payment_method_response"
    patch:
      summary: Update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Manual Payment Methods
      operationId: update_manual_payment_method
      description: Updates a specific manual payment method.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 8f101ae9-f56b-4b28-952c-2b1a326143d7
                object: manual_payment_method
                archived: false
                archived_at:
                description:
                instructions:
                name: Bank Transfer
                reusable: true
                discarded_at:
                created_at: 1758210343
                updated_at: 1758210343
              schema:
                "$ref": "#/components/schemas/manual_payment_method_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                manual_payment_method:
                  allOf:
                  - "$ref": "#/components/schemas/manual_payment_method_body"
              example:
                manual_payment_method:
                  name: Bank Transfer
    delete:
      summary: Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Manual Payment Methods
      operationId: delete_manual_payment_method
      description: Deletes a specific manual payment method.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 6b7fd1cc-153b-448c-bb6e-1dae8e4655e7
                object: manual_payment_method
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/medias":
    get:
      summary: List
      tags:
      - Medias
      operationId: list_media
      description: Returns a list of your medias.
      parameters:
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: public_access
        in: query
        description: Only return objects that have public access or private access.
        required: false
        schema:
          type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/medias"
                data:
                - id: b67f0ffe-5d64-4937-ab76-49a3b781e5a2
                  object: media
                  alt:
                  byte_size: 12254
                  content_type: image/png
                  extension: png
                  filename: test.png
                  height:
                  public_access: false
                  release_json:
                  title:
                  url:
                  width:
                  url_expires_at:
                  created_at: 1758210343
                  updated_at: 1758210343
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Medias
      operationId: create_media
      description: Creates a new media.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: cc61dfde-fd87-4c1d-b67e-f2550d47403a
                object: media
                alt:
                byte_size: 12254
                content_type: image/png
                extension: png
                filename: test.png
                height:
                public_access: false
                release_json:
                title:
                url:
                width:
                url_expires_at:
                created_at: 1758210344
                updated_at: 1758210344
              schema:
                "$ref": "#/components/schemas/media_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                media:
                  allOf:
                  - "$ref": "#/components/schemas/media_body"
              example:
                media:
                  direct_upload_signed_id: eyJfcmFpbHMiOnsiZGF0YSI6ImFmZTBhMDMyLWRhYTMtNDFkMy1iNGZhLTJjNTUzYjI4MDkyNCIsInB1ciI6ImJsb2JfaWQifX0=--05244e6ccef0ad298ad07a897aa9a4e56a17f3f3
  "/v1/medias/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      parameters:
      - name: expose_for
        in: query
        description: Sets how long a private media URL should be valid for, in seconds.
          The max value allowed is `86400` or 24 hours. When exposing a media through
          a purchase or license the default value is `900` or 15 minutes.
        required: false
        schema:
          type: integer
      tags:
      - Medias
      operationId: retrieve_media
      description: Retrieves details of a specific media.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 7e8cc33f-59a3-45bc-9587-c0137912598b
                object: media
                alt:
                byte_size: 12254
                content_type: image/png
                extension: png
                filename: test.png
                height:
                public_access: false
                release_json:
                title:
                url:
                width:
                url_expires_at:
                created_at: 1758210344
                updated_at: 1758210344
              schema:
                "$ref": "#/components/schemas/media_response"
    patch:
      summary: Update
      tags:
      - Medias
      operationId: update_media
      description: Updates a specific media.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 580b37ca-ff61-427e-bf9b-1087346672d4
                object: media
                alt:
                byte_size: 12254
                content_type: image/png
                extension: png
                filename: test.png
                height:
                public_access: false
                release_json:
                title: My Image Title
                url:
                width:
                url_expires_at:
                created_at: 1758210344
                updated_at: 1758210344
              schema:
                "$ref": "#/components/schemas/media_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                media:
                  allOf:
                  - "$ref": "#/components/schemas/media_body"
              example:
                media:
                  title: My Image Title
    delete:
      summary: Delete
      tags:
      - Medias
      operationId: delete_media
      description: Deletes a specific media.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 5090b2a1-6cc3-4c1d-9850-9d6b92e64cf4
                object: media
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/notes":
    get:
      summary: List
      tags:
      - Notes
      operationId: list_note
      description: Returns a list of your notes.
      parameters:
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: notable_id
        in: query
        description: The ID of the object that this note belongs to.
        required: false
        schema:
          type: string
      - name: notable_type
        in: query
        description: The type of object that this note belongs to â€“ one of `customer`,
          `order`, or `subscription`.
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/notes"
                data:
                - id: 2a7388a9-a692-4fae-bf9e-e9a73e6370d5
                  object: note
                  body: This is the body of note.
                  metadata: {}
                  notable_id: 798edc28-6a0b-40b0-9493-38c167ee1bc3
                  notable_type: customer
                  created_at: 1758210344
                  updated_at: 1758210344
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Notes
      operationId: create_note
      description: Creates a new note.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 91bafbbc-70ce-402c-bf8e-feb95e072ccc
                object: note
                body: This is some text!
                metadata: {}
                notable_id: 71ede2bf-4183-4d3f-b426-63cce4646c28
                notable_type: customer
                created_at: 1758210344
                updated_at: 1758210344
              schema:
                "$ref": "#/components/schemas/note_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                note:
                  allOf:
                  - "$ref": "#/components/schemas/note_body"
              example:
                note:
                  body: This is some text!
                  notable_id: 71ede2bf-4183-4d3f-b426-63cce4646c28
                  notable_type: Customer
  "/v1/notes/{id}":
    get:
      summary: Retrieve
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Notes
      operationId: retrieve_note
      description: Retrieves details of a specific note.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 32d281bf-7359-44bd-b95c-8404eeba3d25
                object: note
                body: This is the body of note.
                metadata: {}
                notable_id: 2aed8f6d-8f13-4de6-9206-8465e7b297c9
                notable_type: customer
                created_at: 1758210344
                updated_at: 1758210344
              schema:
                "$ref": "#/components/schemas/note_response"
    patch:
      summary: Update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Notes
      operationId: update_note
      description: Updates a specific note.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 8cdbf12a-6ca0-4e06-b4f7-2bfb844b1966
                object: note
                body: This is different text for this note!
                metadata: {}
                notable_id: b897ad6c-dbbb-4deb-8de9-dac33740d245
                notable_type: customer
                created_at: 1758210344
                updated_at: 1758210344
              schema:
                "$ref": "#/components/schemas/note_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                note:
                  allOf:
                  - "$ref": "#/components/schemas/note_body"
              example:
                note:
                  body: This is different text for this note!
    delete:
      summary: Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Notes
      operationId: delete_note
      description: Deletes a specific note.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: '01616028-1b9a-4534-a41b-ef6bb777d3b5'
                object: note
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/order_protocol":
    get:
      summary: Retrieve
      tags:
      - Order Protocols
      operationId: retrieve_order_protocol
      description: Retrieves details of the current account's order protocol.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: db2f8e58-c426-463d-921f-71f3facdfbae
                object: order_protocol
                inherit_customer_enabled: true
                footer:
                memo:
                next_sequential_number: 1
                number_type: sequential
                number_prefix:
                require_reusable_payment_methods: false
                upsells_expire_after_minutes: 30
                created_at: 1758210344
                updated_at: 1758210344
              schema:
                "$ref": "#/components/schemas/order_protocol_response"
    patch:
      summary: Update
      tags:
      - Order Protocols
      operationId: update_order_protocol
      description: Updates the current account's order protocol.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: e5ba274a-87e4-448a-a43b-74c575c81876
                object: order_protocol
                inherit_customer_enabled: true
                footer: This is some customer footer text...
                memo:
                next_sequential_number: 1
                number_type: sequential
                number_prefix:
                require_reusable_payment_methods: false
                upsells_expire_after_minutes: 30
                created_at: 1758210344
                updated_at: 1758210344
              schema:
                "$ref": "#/components/schemas/order_protocol_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                order_protocol:
                  allOf:
                  - "$ref": "#/components/schemas/order_protocol_body"
              example:
                order_protocol:
                  footer: This is some customer footer text...
  "/v1/orders":
    get:
      summary: List
      tags:
      - Orders
      operationId: list_order
      description: Returns a list of your orders.
      parameters:
      - name: checkout_ids[]
        in: query
        description: Only return objects that belong to the given checkouts.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: customer_ids[]
        in: query
        description: Only return objects that belong to the given customers.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: fulfillment_status[]
        in: query
        description: Only return objects with the given fulfillment status.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: live_mode
        in: query
        description: Only return objects that are live mode or test mode.
        required: false
        schema:
          type: boolean
      - name: order_type[]
        in: query
        description: Only return orders with the given type.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: product_ids[]
        in: query
        description: Only return objects that belong to the given products.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: query
        in: query
        description: The query to be used for full text search of this collection.
        required: false
        schema:
          type: string
      - name: return_status[]
        in: query
        description: Only return objects with the given return status.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: shipment_status[]
        in: query
        description: Only return objects with the given shipment status.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: status[]
        in: query
        description: Only return objects with the given status.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: rule_string
        in: query
        description: The rule string for filtering this collection. Uses the `order`
          rule schema.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/orders"
                data:
                - id: 9a6743dd-2761-4a50-b418-b3aa7f7eec99
                  object: order
                  fulfillment_status: unfulfilled
                  live_mode: true
                  number: '0000'
                  order_type: checkout
                  return_status: not_returned
                  shipment_status: unshippable
                  portal_url: http://app.example.com/portal_redirect/orders/9a6743dd-2761-4a50-b418-b3aa7f7eec99
                  statement_url: http://app.example.com/statements/orders/9a6743dd-2761-4a50-b418-b3aa7f7eec99
                  status: paid
                  checkout: 17eef392-cb57-4595-82f1-4c33237854c3
                  created_at: 1758210345
                  updated_at: 1758210345
              schema:
                "$ref": "#/components/schemas/list_response"
  "/v1/orders/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Orders
      operationId: retrieve_order
      description: Retrieves details of a specific order.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: c91ad53e-18b9-45e3-b724-a8b0b483da8a
                object: order
                fulfillment_status: unfulfilled
                live_mode: true
                number: '0000'
                order_type: checkout
                return_status: not_returned
                shipment_status: unshippable
                portal_url: http://app.example.com/portal_redirect/orders/c91ad53e-18b9-45e3-b724-a8b0b483da8a
                statement_url: http://app.example.com/statements/orders/c91ad53e-18b9-45e3-b724-a8b0b483da8a
                status: paid
                checkout: f59f1bb4-c56a-46e6-93a9-dd26c95a898e
                created_at: 1758210345
                updated_at: 1758210345
              schema:
                "$ref": "#/components/schemas/order_response"
  "/v1/orders/{id}/resend_notification":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    post:
      summary: Resend Notification
      tags:
      - Orders
      operationId: resend_notification_order
      description: Resend order confirmation or subscription renewal email to the
        customer.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: e865f45b-83a4-4ed0-8845-45b980b244c2
                object: order
                fulfillment_status: unfulfilled
                live_mode: true
                number: '0000'
                order_type: checkout
                return_status: not_returned
                shipment_status: unshippable
                portal_url: http://app.example.com/portal_redirect/orders/e865f45b-83a4-4ed0-8845-45b980b244c2
                statement_url: http://app.example.com/statements/orders/e865f45b-83a4-4ed0-8845-45b980b244c2
                status: paid
                checkout: c7bcced7-ea49-4da3-813e-53865c8f332e
                created_at: 1758210345
                updated_at: 1758210345
              schema:
                "$ref": "#/components/schemas/order_response"
  "/v1/payment_failures":
    get:
      summary: List
      tags:
      - Payment Failures
      operationId: list_payment_failure
      description: Returns a list of your payment failures.
      parameters:
      - name: checkout_ids[]
        in: query
        description: Only return objects that belong to the given checkouts.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: customer_ids[]
        in: query
        description: Only return objects that belong to the given customers.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/payment_failures"
                data:
                - id: 9bd8c242-074c-48ba-a2de-2d600c1b45a1
                  object: payment_failure
                  amount: 2900
                  currency: usd
                  error_message: Your card was declined.
                  error_type: payment_method_error
                  renewal: true
                  validation_error_codes: []
                  checkout:
                  customer: 316ffd92-a53a-439d-a821-70bfc8babf6a
                  payment_intent:
                  payment_method:
                  created_at: 1758210346
                  updated_at: 1758210346
              schema:
                "$ref": "#/components/schemas/list_response"
  "/v1/payment_intents":
    get:
      summary: List
      tags:
      - Payment Intents
      operationId: list_payment_intent
      description: Returns a list of your payment intents.
      parameters:
      - name: checkout_ids[]
        in: query
        description: Only return objects that belong to the given checkouts.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: customer_ids[]
        in: query
        description: Only return objects that belong to the given customers.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: live_mode
        in: query
        description: Only return objects that are live mode or test mode.
        required: false
        schema:
          type: boolean
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: status[]
        in: query
        description: Only return objects with the given status.
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/payment_intents"
                data:
                - id: 03f11d3a-7d65-4dab-9d53-7a03186dabc5
                  object: payment_intent
                  amount: 500
                  currency: usd
                  external_intent_id: pi_3JhDzG2fs4LLhxzS06L7dgBR
                  live_mode: true
                  off_session: false
                  processor_data:
                    stripe:
                      account_id: external_account_45
                      publishable_key: pk_test_51KeWoQFugiAKLuJycCZesY1aYEzfauqW2SHSZSUj5xCorx7h7oZd5i6Vz2whx7Y5fMZr6WQQTeOoQEtaEnpk4fkB00dinySlbK
                      client_secret: pi_3K6NFo2fs4LLhxzS1leftxKh_secret_qoy2TA8XJEYKTp4bbF8hT3clV
                      type: payment
                      payment_method_id:
                  processor_type: stripe
                  reusable: false
                  status: pending
                  checkout:
                  customer: 3eaca41f-2d4a-401e-b0e2-86b9f3256f5b
                  payment_method:
                  platform_fee:
                  service_fee:
                  created_at: 1758210346
                  updated_at: 1758210346
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Payment Intents
      operationId: create_payment_intent
      description: Creates a new payment intent.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: de11e5c7-c948-4729-bf12-eb48c0ec28d1
                object: payment_intent
                amount: 0
                currency: usd
                external_intent_id: seti_PNyAnEbwqGDoHwj
                live_mode: true
                off_session: false
                processor_data:
                  stripe:
                    account_id: external_account_46
                    publishable_key: pk_test_51KeWoQFugiAKLuJycCZesY1aYEzfauqW2SHSZSUj5xCorx7h7oZd5i6Vz2whx7Y5fMZr6WQQTeOoQEtaEnpk4fkB00dinySlbK
                    client_secret: seti_1Pgag7B7WZ01zgkWSgwGdb8Z_secret_QXg2AQLdBxJwtY51IkwvUaBVsnCqPSp
                    type: setup
                    payment_method_id:
                processor_type: stripe
                reusable: true
                status: pending
                checkout:
                customer: 84082897-6f90-4306-a76e-55b7704a7703
                payment_method:
                platform_fee:
                service_fee:
                created_at: 1758210346
                updated_at: 1758210346
              schema:
                "$ref": "#/components/schemas/payment_intent_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_intent:
                  allOf:
                  - "$ref": "#/components/schemas/payment_intent_body"
              example:
                payment_intent:
                  customer: 84082897-6f90-4306-a76e-55b7704a7703
                  processor_type: stripe
  "/v1/payment_intents/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      parameters:
      - name: refresh_status
        in: query
        description: If true, the server will check the associated payment processor
          to see if a status change has occured. (This should be used when retrieving
          a checkout or payment intent immediately after it has been paid through
          the processor. In this scenario, it's possible that you'll request the checkout
          before the server has received the webhook from the processor. Setting this
          pararmeter to `true` prevents this scenario.)
        required: false
        schema:
          type: boolean
      tags:
      - Payment Intents
      operationId: retrieve_payment_intent
      description: Retrieves details of a specific payment intent.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: d7e5738b-f238-48e1-8983-8c590884e38f
                object: payment_intent
                amount: 500
                currency: usd
                external_intent_id: pi_3JhDzG2fs4LLhxzS06L7dgBR
                live_mode: true
                off_session: false
                processor_data:
                  stripe:
                    account_id: external_account_47
                    publishable_key: pk_test_51KeWoQFugiAKLuJycCZesY1aYEzfauqW2SHSZSUj5xCorx7h7oZd5i6Vz2whx7Y5fMZr6WQQTeOoQEtaEnpk4fkB00dinySlbK
                    client_secret: pi_3K6NFo2fs4LLhxzS1leftxKh_secret_qoy2TA8XJEYKTp4bbF8hT3clV
                    type: payment
                    payment_method_id:
                processor_type: stripe
                reusable: false
                status: pending
                checkout:
                customer: 1f2ea2a2-273e-4ae9-b0c4-7749074dec56
                payment_method:
                platform_fee:
                service_fee:
                created_at: 1758210346
                updated_at: 1758210346
              schema:
                "$ref": "#/components/schemas/payment_intent_response"
  "/v1/payment_intents/{id}/capture":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    patch:
      summary: Capture
      tags:
      - Payment Intents
      operationId: capture_payment_intent
      description: Capture a specific payment intent.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 2f9c13c9-d532-4ddd-af41-d7ab971f8884
                object: payment_intent
                amount: 500
                currency: usd
                external_intent_id: 8HV68613WA006590K
                live_mode: true
                off_session: false
                processor_data:
                  paypal:
                    account_id: external_account_48
                    client_id: AcvWgKnWqxsUIo9VdwKFOMWxlNGElh2i5NX0MsMgqcFc_6UTds2tezGVS6ssem02RqW-tF6gasFEnw4K
                    merchant_initiated_enabled: false
                    payer_email: ben+sandbox-personal@bartling.io
                    payer_name: Ben Bartling
                    type: order
                    id: 8HV68613WA006590K
                    merchant_initiated: false
                processor_type: paypal
                reusable: false
                status: succeeded
                checkout:
                customer: 2fd34ec8-ec1a-4f05-9b0d-c864d4b367b7
                payment_method: db9846cc-3523-4216-be12-a6019c1c980c
                platform_fee:
                service_fee:
                created_at: 1758210346
                updated_at: 1758210346
              schema:
                "$ref": "#/components/schemas/payment_intent_response"
  "/v1/payment_methods":
    get:
      summary: List
      tags:
      - Payment Methods
      operationId: list_payment_method
      description: Returns a list of your payment methods.
      parameters:
      - name: customer_ids[]
        in: query
        description: Only return objects that belong to the given customers.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: live_mode
        in: query
        description: Only return objects that are live mode or test mode.
        required: false
        schema:
          type: boolean
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: reusable
        in: query
        description: Only return payment methods that are reusable or not.
        required: false
        schema:
          type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/payment_methods"
                data:
                - id: 1b03d83e-569a-440b-80fd-259cb0fc12d9
                  object: payment_method
                  external_payment_method_id: pm_3_Ju1BB2fs4LLhxzSoekOTDo3
                  live_mode: true
                  processor_type: stripe
                  reusable: true
                  supported_currencies:
                  type: card
                  bank_account:
                  card: c7c38298-a09a-4393-8303-46031069c0ca
                  customer: 4ed99669-f674-4e57-8b28-0540158b02f1
                  payment_instrument:
                  paypal_account:
                  created_at: 1758210346
                  updated_at: 1758210346
              schema:
                "$ref": "#/components/schemas/list_response"
  "/v1/payment_methods/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Payment Methods
      operationId: retrieve_payment_method
      description: Retrieves details of a specific payment method.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 1b9fad55-d3c2-46dc-8623-a0179c79ee65
                object: payment_method
                external_payment_method_id: pm_4_Ju1BB2fs4LLhxzSoekOTDo3
                live_mode: true
                processor_type: stripe
                reusable: true
                supported_currencies:
                type: card
                bank_account:
                card: 0cc8f31c-a8ed-4b90-bdbd-69e7713180da
                customer: 75ce3c90-07f5-480e-8de6-8b2b23d87b51
                payment_instrument:
                paypal_account:
                created_at: 1758210346
                updated_at: 1758210346
              schema:
                "$ref": "#/components/schemas/payment_method_response"
  "/v1/payment_methods/{id}/detach":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    patch:
      summary: Detach
      tags:
      - Payment Methods
      operationId: detach_payment_method
      description: Detaches a payment method from the associated customer.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 40a402e3-73a6-459d-93f2-73897b851c08
                object: payment_method
                external_payment_method_id: pm_5_Ju1BB2fs4LLhxzSoekOTDo3
                live_mode: true
                processor_type: stripe
                reusable: true
                supported_currencies:
                type: card
                bank_account:
                card: c5d4df03-1c45-462a-a63b-206c4d183531
                customer:
                payment_instrument:
                paypal_account:
                created_at: 1758210346
                updated_at: 1758210346
              schema:
                "$ref": "#/components/schemas/payment_method_response"
  "/v1/payout_groups":
    get:
      summary: List
      tags:
      - Payout Groups
      operationId: list_payout_group
      description: Returns a list of your payout groups.
      parameters:
      - name: currency
        in: query
        description: Three-letter ISO currency code, in lowercase.
        required: false
        schema:
          type: string
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/payout_groups"
                data:
                - id: 1c58ee14-bee1-4606-a76a-19786511e1c4
                  object: payout_group
                  currency: usd
                  end_date: 1757894400
                  live_mode: true
                  min_commission_amount:
                  created_at: 1758210346
                  updated_at: 1758210346
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Payout Groups
      operationId: create_payout_group
      description: Creates a new payout group.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: e1060383-217b-4a87-a073-a4c7f626b8f8
                object: payout_group
                currency: usd
                end_date: 1757894400
                live_mode: true
                min_commission_amount:
                created_at: 1758210347
                updated_at: 1758210347
              schema:
                "$ref": "#/components/schemas/payout_group_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                payout_group:
                  allOf:
                  - "$ref": "#/components/schemas/payout_group_body"
              example:
                payout_group:
                  end_date: 2025-09-15 15:45:47 UTC
  "/v1/payout_groups/{id}":
    get:
      summary: Retrieve
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Payout Groups
      operationId: retrieve_payout_group
      description: Retrieves details of a specific payout group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 43782c74-9d0f-43b6-9d97-8ff9f4b8d924
                object: payout_group
                currency: usd
                end_date: 1757894400
                live_mode: true
                min_commission_amount:
                created_at: 1758210347
                updated_at: 1758210347
              schema:
                "$ref": "#/components/schemas/payout_group_response"
  "/v1/payouts":
    get:
      summary: List
      tags:
      - Payouts
      operationId: list_payout
      description: Returns a list of your payouts.
      parameters:
      - name: affiliation_ids[]
        in: query
        description: Only return objects that belong to the given affiliations.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: currency
        in: query
        description: Three-letter ISO currency code, in lowercase.
        required: false
        schema:
          type: string
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: live_mode
        in: query
        description: Only return objects that are live mode or test mode.
        required: false
        schema:
          type: boolean
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: payout_group_ids[]
        in: query
        description: Only return objects that belong to the given payout groups.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: status[]
        in: query
        description: Only return objects with the given status.
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/payouts"
                data:
                - id: c10c8ae0-a742-4506-96be-0690453347e7
                  object: payout
                  currency: usd
                  description:
                  end_date: 1757894400
                  live_mode: true
                  manual: false
                  payout_email:
                  status: processing
                  total_commission_amount: 9900
                  affiliation: 9ee14e56-b2c4-4de5-93b7-86c465666e63
                  payout_group:
                  created_at: 1758210347
                  updated_at: 1758210347
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Payouts
      operationId: create_payout
      description: Creates a new payout.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 5ca8e135-a1a7-4e98-962a-125ca6761b60
                object: payout
                currency: usd
                description:
                end_date: 1758067200
                live_mode: true
                manual: false
                payout_email:
                status: processing
                total_commission_amount: 9900
                affiliation: a66ab1f4-6121-4654-9b65-094955df1513
                payout_group:
                created_at: 1758210347
                updated_at: 1758210347
              schema:
                "$ref": "#/components/schemas/payout_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                payout:
                  allOf:
                  - "$ref": "#/components/schemas/payout_body"
              example:
                payout:
                  affiliation: a66ab1f4-6121-4654-9b65-094955df1513
                  end_date: 2025-09-17 15:45:47 UTC
  "/v1/payouts/{id}":
    get:
      summary: Retrieve
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Payouts
      operationId: retrieve_payout
      description: Retrieves details of a specific payout.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: d0b78638-9732-4fb9-bdd6-f696657d4146
                object: payout
                currency: usd
                description:
                end_date: 1757894400
                live_mode: true
                manual: false
                payout_email:
                status: processing
                total_commission_amount: 9900
                affiliation: c8b592f1-fe5d-40ea-b82d-5d71d4d0aa57
                payout_group:
                created_at: 1758210347
                updated_at: 1758210347
              schema:
                "$ref": "#/components/schemas/payout_response"
    delete:
      summary: Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Payouts
      operationId: delete_payout
      description: Deletes a specific payout.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 47d9cddf-4f2f-4dbb-9ac3-29a773ba1ae9
                object: payout
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/payouts/{id}/complete":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    patch:
      summary: Complete
      tags:
      - Payouts
      operationId: complete_payout
      description: Completes a specific payout.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: b473baf4-e15d-4d83-b8bb-b13a4cecb64f
                object: payout
                currency: usd
                description:
                end_date: 1757894400
                live_mode: true
                manual: false
                payout_email:
                status: completed
                total_commission_amount: 9900
                affiliation: 35c28628-04b1-4294-aef0-0c06fcdafda1
                payout_group:
                created_at: 1758210347
                updated_at: 1758210347
              schema:
                "$ref": "#/components/schemas/payout_response"
  "/v1/payouts/{id}/make_processing":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    patch:
      summary: Make Processing
      tags:
      - Payouts
      operationId: make_processing_payout
      description: Makes a specific payout processing.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 1c6f897c-06a5-434f-b523-db2d7336e698
                object: payout
                currency: usd
                description:
                end_date: 1757894400
                live_mode: true
                manual: false
                payout_email:
                status: processing
                total_commission_amount: 9900
                affiliation: de007185-4a9e-4f9b-9a69-70a8b6cd7a5f
                payout_group:
                created_at: 1758210347
                updated_at: 1758210347
              schema:
                "$ref": "#/components/schemas/payout_response"
  "/v1/periods":
    get:
      summary: List
      tags:
      - Periods
      operationId: list_period
      description: Returns a list of periods.
      parameters:
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: subscription_ids[]
        in: query
        description: Only return objects that belong to the given subscriptions.
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 2
                  limit: 20
                  page: 1
                  url: "/v1/periods"
                data:
                - id: 4c5c4b7d-ab72-43e6-b198-31129f932737
                  object: period
                  ad_hoc_amount:
                  end_at: 1760802347
                  next_payment_retry_at:
                  payment_retry_count: 0
                  payoff: false
                  quantity: 1
                  renewal: false
                  renewal_reminder_sent_at:
                  restoral: false
                  skip_proration: false
                  start_at: 1758210347
                  status: paid
                  checkout: 1504f725-a0ab-4e64-bb41-8de98ad04526
                  price: 0b88f680-2d95-4305-88b1-f7bc39bbdb14
                  subscription: a09d00bc-5260-487c-8aeb-2510d458eca2
                  variant:
                  created_at: 1758210347
                  updated_at: 1758210347
                - id: dd03b598-d0d5-4c34-95fd-89ef1c798660
                  object: period
                  ad_hoc_amount:
                  end_at: 1760802347
                  next_payment_retry_at:
                  payment_retry_count: 0
                  payoff: false
                  quantity: 1
                  renewal: false
                  renewal_reminder_sent_at:
                  restoral: false
                  skip_proration: false
                  start_at: 1758210347
                  status: paid
                  checkout: 2753fa90-94c7-4dd2-804f-c7e632d6dabc
                  price: 0b88f680-2d95-4305-88b1-f7bc39bbdb14
                  subscription: a09d00bc-5260-487c-8aeb-2510d458eca2
                  variant:
                  created_at: 1758210347
                  updated_at: 1758210347
              schema:
                "$ref": "#/components/schemas/list_response"
  "/v1/periods/{id}":
    patch:
      summary: Update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Periods
      operationId: update_period
      description: Updates a specific period.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 771d0b11-98c1-4be7-b0cb-d7fe97e5ebb1
                object: period
                ad_hoc_amount:
                end_at: 1758213948
                next_payment_retry_at:
                payment_retry_count: 0
                payoff: false
                quantity: 1
                renewal: false
                renewal_reminder_sent_at:
                restoral: false
                skip_proration: false
                start_at: 1758210348
                status: paid
                checkout: 8df35337-1be5-4b72-9885-d75e7fdf6cf9
                price: cc6e8248-7357-45b1-aee0-304bda6d774b
                subscription: fd81389f-d2ae-4b0f-8540-8ab3ca87f6ec
                variant:
                created_at: 1758210348
                updated_at: 1758210348
              schema:
                "$ref": "#/components/schemas/period_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                period:
                  allOf:
                  - "$ref": "#/components/schemas/period_body"
              example:
                period:
                  end_at: 1758213948
  "/v1/periods/{id}/retry_payment":
    patch:
      summary: Retry Payment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Periods
      operationId: retry_payment_period
      description: Retries payment for a specific period.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: b21dd5a5-2553-41e5-8e29-2106987ab828
                object: period
                ad_hoc_amount:
                end_at: 1760802348
                next_payment_retry_at:
                payment_retry_count: 0
                payoff: false
                quantity: 1
                renewal: true
                renewal_reminder_sent_at:
                restoral: false
                skip_proration: false
                start_at: 1758210348
                status: payment_failed
                checkout: 5818348c-e740-414a-b263-a627f2deddc7
                price: 86257fdc-8f25-4bd3-8806-d9d5ad4faf91
                subscription: f419a6bb-0ec3-4494-94a9-baac58743f51
                variant:
                created_at: 1758210348
                updated_at: 1758210348
              schema:
                "$ref": "#/components/schemas/period_response"
  "/v1/prices":
    get:
      summary: List
      tags:
      - Prices
      operationId: list_price
      description: Returns a list of your prices.
      parameters:
      - name: ad_hoc
        in: query
        description: Only return prices that allow ad hoc amounts or not.
        required: false
        schema:
          type: boolean
      - name: archived
        in: query
        description: Only return objects that are archived or not archived.
        required: false
        schema:
          type: boolean
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: product_ids[]
        in: query
        description: Only return objects that belong to the given products.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: The sorting column and order to be used for this collection.
          Available sorting columns for this endpoint are `amount`, `created_at`,
          and `updated_at`.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/prices"
                data:
                - id: 29c7ad4d-2c18-4b09-9fa4-c05beafce3f0
                  object: price
                  ad_hoc: false
                  ad_hoc_max_amount:
                  ad_hoc_min_amount: 0
                  amount: 2900
                  archived: false
                  archived_at:
                  currency: usd
                  current_version: true
                  full_amount: 2900
                  license_activation_limit:
                  metadata: {}
                  name:
                  position: 0
                  portal_subscription_update_enabled: true
                  restart_subscription_on_completed: false
                  revoke_after_days:
                  revoke_purchases_on_completed: false
                  recurring_interval:
                  recurring_interval_count:
                  recurring_period_count:
                  scratch_amount:
                  setup_fee_amount: 0
                  setup_fee_enabled: false
                  setup_fee_trial_enabled: true
                  setup_fee_name:
                  trial_duration_days:
                  current_swap:
                  product: 6a82c0d1-1a09-42a6-a0dd-c9d5b5ebab86
                  renewal_price:
                  discarded_at:
                  created_at: 1758210348
                  updated_at: 1758210348
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Prices
      operationId: create_price
      description: Creates a new price.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: ced707a4-6ba3-4f40-b14e-e1a1f6a56c4a
                object: price
                ad_hoc: false
                ad_hoc_max_amount:
                ad_hoc_min_amount: 0
                amount: 2900
                archived: false
                archived_at:
                currency: usd
                current_version: true
                full_amount: 2900
                license_activation_limit:
                metadata: {}
                name: Test Price
                position: 0
                portal_subscription_update_enabled: true
                restart_subscription_on_completed: false
                revoke_after_days:
                revoke_purchases_on_completed: false
                recurring_interval:
                recurring_interval_count:
                recurring_period_count:
                scratch_amount:
                setup_fee_amount: 0
                setup_fee_enabled: false
                setup_fee_trial_enabled: true
                setup_fee_name:
                trial_duration_days:
                current_swap:
                product: 835f7efd-6968-4d3a-92c8-fb8924b85f85
                renewal_price:
                discarded_at:
                created_at: 1758210349
                updated_at: 1758210349
              schema:
                "$ref": "#/components/schemas/price_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                price:
                  allOf:
                  - "$ref": "#/components/schemas/price_body"
              example:
                price:
                  name: Test Price
                  amount: 2900
                  product_id: 835f7efd-6968-4d3a-92c8-fb8924b85f85
  "/v1/prices/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Prices
      operationId: retrieve_price
      description: Retrieves details of a specific price.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 0dde6ff2-2068-4bf6-b6a6-be27569e9e93
                object: price
                ad_hoc: false
                ad_hoc_max_amount:
                ad_hoc_min_amount: 0
                amount: 2900
                archived: false
                archived_at:
                currency: usd
                current_version: true
                full_amount: 2900
                license_activation_limit:
                metadata: {}
                name:
                position: 0
                portal_subscription_update_enabled: true
                restart_subscription_on_completed: false
                revoke_after_days:
                revoke_purchases_on_completed: false
                recurring_interval:
                recurring_interval_count:
                recurring_period_count:
                scratch_amount:
                setup_fee_amount: 0
                setup_fee_enabled: false
                setup_fee_trial_enabled: true
                setup_fee_name:
                trial_duration_days:
                current_swap:
                product: b15a0244-36e6-414c-a57b-c2ab2eb2a5d4
                renewal_price:
                discarded_at:
                created_at: 1758210349
                updated_at: 1758210349
              schema:
                "$ref": "#/components/schemas/price_response"
    patch:
      summary: Update
      tags:
      - Prices
      operationId: update_price
      description: Updates a specific price.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 328061b8-5744-4555-bc7d-a52b242a9569
                object: price
                ad_hoc: false
                ad_hoc_max_amount:
                ad_hoc_min_amount: 0
                amount: 2900
                archived: false
                archived_at:
                currency: usd
                current_version: true
                full_amount: 2900
                license_activation_limit:
                metadata: {}
                name: Updated Price
                position: 0
                portal_subscription_update_enabled: true
                restart_subscription_on_completed: false
                revoke_after_days:
                revoke_purchases_on_completed: false
                recurring_interval:
                recurring_interval_count:
                recurring_period_count:
                scratch_amount:
                setup_fee_amount: 0
                setup_fee_enabled: false
                setup_fee_trial_enabled: true
                setup_fee_name:
                trial_duration_days:
                current_swap:
                product: 1552a0e4-96af-4e0f-bf31-8c03cafd1c99
                renewal_price:
                discarded_at:
                created_at: 1758210349
                updated_at: 1758210349
              schema:
                "$ref": "#/components/schemas/price_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                price:
                  allOf:
                  - "$ref": "#/components/schemas/price_body"
              example:
                price:
                  name: Updated Price
    delete:
      summary: Delete
      tags:
      - Prices
      operationId: delete_price
      description: Deletes a specific price.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: ddeeaa1f-1d48-47c1-a3d9-f68cac1fa2b6
                object: price
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/prices/{id}/duplicate":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    post:
      summary: Duplicate
      tags:
      - Prices
      operationId: duplicate_price
      description: Duplicates a specific price.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 7ae592db-7081-45b2-8a3f-f32be41d2e11
                object: price
                ad_hoc: false
                ad_hoc_max_amount:
                ad_hoc_min_amount: 0
                amount: 2900
                archived: false
                archived_at:
                currency: usd
                current_version: true
                full_amount: 2900
                license_activation_limit:
                metadata: {}
                name: " (Duplicate)"
                position: 0
                portal_subscription_update_enabled: true
                restart_subscription_on_completed: false
                revoke_after_days:
                revoke_purchases_on_completed: false
                recurring_interval:
                recurring_interval_count:
                recurring_period_count:
                scratch_amount:
                setup_fee_amount: 0
                setup_fee_enabled: false
                setup_fee_trial_enabled: true
                setup_fee_name:
                trial_duration_days:
                current_swap:
                product: c94f4a14-17a5-41fd-9cc3-8aca4830bbc9
                renewal_price:
                discarded_at:
                created_at: 1758210349
                updated_at: 1758210349
              schema:
                "$ref": "#/components/schemas/price_response"
  "/v1/processors":
    get:
      summary: List
      tags:
      - Processors
      operationId: list_processor
      description: Returns a list of your processors.
      parameters:
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: live_mode
        in: query
        description: Only return objects that are live mode or test mode.
        required: false
        schema:
          type: boolean
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/processors"
                data:
                - id: 200fd7a9-0cae-4086-90b9-bf30882a3e4d
                  object: processor
                  approved: true
                  enabled: true
                  live_mode: true
                  processor_type: stripe
                  processor_data:
                    account_id: external_account_55
                    publishable_key: pk_test_51KeWoQFugiAKLuJycCZesY1aYEzfauqW2SHSZSUj5xCorx7h7oZd5i6Vz2whx7Y5fMZr6WQQTeOoQEtaEnpk4fkB00dinySlbK
                  recurring_enabled: true
                  supported_currencies:
                  created_at: 1758210349
                  updated_at: 1758210349
              schema:
                "$ref": "#/components/schemas/list_response"
  "/v1/processors/{id}":
    get:
      summary: Retrieve
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Processors
      operationId: retrieve_processor
      description: Retrieves details of a specific processor.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: af00794f-a576-4856-bc7b-dfc04ea7d1d1
                object: processor
                approved: true
                enabled: true
                live_mode: true
                processor_type: stripe
                processor_data:
                  account_id: external_account_56
                  publishable_key: pk_test_51KeWoQFugiAKLuJycCZesY1aYEzfauqW2SHSZSUj5xCorx7h7oZd5i6Vz2whx7Y5fMZr6WQQTeOoQEtaEnpk4fkB00dinySlbK
                recurring_enabled: true
                supported_currencies:
                created_at: 1758210349
                updated_at: 1758210349
              schema:
                "$ref": "#/components/schemas/processor_response"
  "/v1/processors/{id}/payment_method_types":
    get:
      summary: Payment Method Types
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: amount
        in: query
        description: The amount in cents to be charged, represented as a whole integer.
          For example `9900` is equivalent to `$99`.
        required: false
        schema:
          type: string
      - name: country
        in: query
        description: Two-letter country code (ISO 3166-1 alpha-2) of the billing address.
        required: false
        schema:
          type: string
      - name: currency
        in: query
        description: Three-letter ISO currency code, in lowercase.
        required: false
        schema:
          type: string
      - name: reusable
        in: query
        description: Only return payment methods that are reusable or not.
        required: false
        schema:
          type: boolean
      tags:
      - Processors
      operationId: payment_method_types_processor
      description: Retrieves a list of available payment method types for this specific
        processor and the given parameters (amount, country, etc.). This endpoint
        is only available for `mollie` processors.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 5
                  limit:
                  page:
                  url:
                data:
                - id: applepay
                  description: Apple Pay
                  image: https://www.mollie.com/external/icons/payment-methods/applepay.svg
                - id: creditcard
                  description: Card
                  image: https://www.mollie.com/external/icons/payment-methods/creditcard.svg
                - id: paypal
                  description: PayPal
                  image: https://www.mollie.com/external/icons/payment-methods/paypal.svg
                - id: sofort
                  description: SOFORT Banking
                  image: https://www.mollie.com/external/icons/payment-methods/sofort.svg
                - id: banktransfer
                  description: Bank transfer
                  image: https://www.mollie.com/external/icons/payment-methods/banktransfer.svg
              schema:
                "$ref": "#/components/schemas/list_response"
  "/v1/product_collections":
    get:
      summary: List
      tags:
      - Product Collections
      operationId: list_product_collection
      description: Returns a list of your product collections
      parameters:
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: product_ids[]
        in: query
        description: Only return objects that belong to the given products.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: query
        in: query
        description: The query to be used for full text search of this collection.
        required: false
        schema:
          type: string
      - name: sort
        in: query
        description: The sorting column and order to be used for this collection.
          Available sorting columns for this endpoint are `created_at`, `name`, and
          `updated_at`.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/product_collections"
                data:
                - id: b8a7c05e-4e46-4726-a78e-9e75f1bbe4c3
                  object: product_collection
                  name: Test Product Collection 1
                  description:
                  metadata: {}
                  position: 0
                  products_count: 0
                  slug: test-product-collection-1
                  image:
                  created_at: 1758210349
                  updated_at: 1758210349
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Product Collections
      operationId: create_product_collection
      description: Creates a new product collection.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: b3f04429-c78f-4074-92e3-0d08d1eca83b
                object: product_collection
                name: Shoes
                description:
                metadata: {}
                position: 1
                products_count: 0
                slug: shoes
                image:
                created_at: 1758210349
                updated_at: 1758210349
              schema:
                "$ref": "#/components/schemas/product_collection_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product_collection:
                  allOf:
                  - "$ref": "#/components/schemas/product_collection_body"
              example:
                product_collection:
                  name: Shoes
  "/v1/product_collections/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Product Collections
      operationId: retrieve_product_collection
      description: Retrieves details of a specific product collection. The `{id}`
        section of the endpoint accepts the product collection ID or slug.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: fa249d1d-9acf-40f5-a9ec-db8fee6f2a50
                object: product_collection
                name: Test Product Collection 3
                description:
                metadata: {}
                position: 0
                products_count: 0
                slug: test-product-collection-3
                image:
                created_at: 1758210350
                updated_at: 1758210350
              schema:
                "$ref": "#/components/schemas/product_collection_response"
    patch:
      summary: Update
      tags:
      - Product Collections
      operationId: update_product_collection
      description: Updates a specific product collection
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 041e2af1-18d7-4f26-a551-f7cd26222b17
                object: product_collection
                name: T-Shirts
                description:
                metadata: {}
                position: 0
                products_count: 0
                slug: test-product-collection-4
                image:
                created_at: 1758210350
                updated_at: 1758210350
              schema:
                "$ref": "#/components/schemas/product_collection_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product_collection:
                  allOf:
                  - "$ref": "#/components/schemas/product_collection_body"
              example:
                product_collection:
                  name: T-Shirts
    delete:
      summary: Delete
      tags:
      - Product Collections
      operationId: delete_product_collection
      description: Deletes a specific product collection.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 7f957ae8-9900-4cf5-8c4b-47a013c3d46c
                object: product_collection
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/product_groups":
    get:
      summary: List
      tags:
      - Product Groups
      operationId: list_product_group
      description: Returns a list of your product groups.
      parameters:
      - name: archived
        in: query
        description: Only return objects that are archived or not archived.
        required: false
        schema:
          type: boolean
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: query
        in: query
        description: The query to be used for full text search of this collection.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/product_groups"
                data:
                - id: 97144489-0fa1-44cc-988b-5845f1a991eb
                  object: product_group
                  archived: false
                  archived_at:
                  metadata: {}
                  name: Membership - V1
                  purchase_limit:
                  created_at: 1758210350
                  updated_at: 1758210350
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Product Groups
      operationId: create_product_group
      description: Creates a new product group.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 236b05ab-fac6-47b7-b143-a34596c35e42
                object: product_group
                archived: false
                archived_at:
                metadata: {}
                name: Membership â€“ V2
                purchase_limit:
                created_at: 1758210350
                updated_at: 1758210350
              schema:
                "$ref": "#/components/schemas/product_group_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product_group:
                  allOf:
                  - "$ref": "#/components/schemas/product_group_body"
              example:
                product_group:
                  name: Membership â€“ V2
  "/v1/product_groups/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Product Groups
      operationId: retrieve_product_group
      description: Retrieves details of a specific product group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: c0307971-c7e4-42ce-b29d-96ba1c2a7c23
                object: product_group
                archived: false
                archived_at:
                metadata: {}
                name: Membership - V1
                purchase_limit:
                created_at: 1758210350
                updated_at: 1758210350
              schema:
                "$ref": "#/components/schemas/product_group_response"
    patch:
      summary: Update
      tags:
      - Product Groups
      operationId: update_product_group
      description: Updates a specific product group.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 680019c4-ff80-4db6-be7b-1268f7c82841
                object: product_group
                archived: false
                archived_at:
                metadata: {}
                name: Membership â€“ V1 (Legacy)
                purchase_limit:
                created_at: 1758210350
                updated_at: 1758210350
              schema:
                "$ref": "#/components/schemas/product_group_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product_group:
                  allOf:
                  - "$ref": "#/components/schemas/product_group_body"
              example:
                product_group:
                  name: Membership â€“ V1 (Legacy)
    delete:
      summary: Delete
      tags:
      - Product Groups
      operationId: delete_product_group
      description: Deletes a specific product group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: b999d9cd-a22d-467c-a8bb-2630871af349
                object: product_group
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/product_medias":
    get:
      summary: List
      tags:
      - Product Medias
      operationId: list_product_media
      description: Returns a list of your product medias.
      parameters:
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: product_ids[]
        in: query
        description: Only return objects that belong to the given products.
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/product_medias"
                data:
                - id: 21797bda-74f2-4934-b2ef-80707a87ebd3
                  object: product_media
                  alt:
                  position: 0
                  title:
                  url:
                  media: b6176ebf-6b97-45da-a5c8-bacd57dcc436
                  product: 385f1cef-eb24-4200-a230-fee34b4eea98
                  created_at: 1758210350
                  updated_at: 1758210350
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Product Medias
      operationId: create_product_media
      description: Create a new product media.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: f3f06974-7664-4f0d-b84a-83e9e7434bb3
                object: product_media
                alt:
                position: 0
                title:
                url:
                media: f8e958bb-cb7d-4b93-b9cd-aa48b018d408
                product: bdfc8e64-1cdc-41b3-bd96-70fc3a11db28
                created_at: 1758210350
                updated_at: 1758210350
              schema:
                "$ref": "#/components/schemas/product_media_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product_media:
                  allOf:
                  - "$ref": "#/components/schemas/product_media_body"
              example:
                product_media:
                  product_id: bdfc8e64-1cdc-41b3-bd96-70fc3a11db28
                  media_id: f8e958bb-cb7d-4b93-b9cd-aa48b018d408
  "/v1/product_medias/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Product Medias
      operationId: retrieve_product_media
      description: Retrieves details of a specific product media.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 1deff50b-dfd6-4ef9-9aad-916f21cbbf50
                object: product_media
                alt:
                position: 0
                title:
                url:
                media: eb224ce7-5187-42af-ab46-c12ece04e308
                product: 06d4a186-9e16-4e66-a48d-27182266c7cc
                created_at: 1758210350
                updated_at: 1758210350
              schema:
                "$ref": "#/components/schemas/product_media_response"
    patch:
      summary: Update
      tags:
      - Product Medias
      operationId: update_product_media
      description: Updates a specific product media.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 8b2bffb9-1655-4046-b30a-5c3093dfd2b6
                object: product_media
                alt:
                position: 1
                title:
                url:
                media: f6e2bb4a-9212-477e-ad64-21940f09d2ec
                product: e3a515f3-3ac7-49a9-a284-7f37682b3040
                created_at: 1758210351
                updated_at: 1758210351
              schema:
                "$ref": "#/components/schemas/product_media_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product_media:
                  allOf:
                  - "$ref": "#/components/schemas/product_media_body"
              example:
                product_media:
                  position: 1
    delete:
      summary: Delete
      tags:
      - Product Medias
      operationId: delete_product_media
      description: Deletes a specific product media.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 1ebf2977-aa9f-4337-bbbc-cf95d3ba55d5
                object: product_media
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/products":
    get:
      summary: List
      tags:
      - Products
      operationId: list_product
      description: Returns a list of your products.
      parameters:
      - name: ad_hoc
        in: query
        description: Only return prices that allow ad hoc amounts or not.
        required: false
        schema:
          type: boolean
      - name: archived
        in: query
        description: Only return objects that are archived or not archived.
        required: false
        schema:
          type: boolean
      - name: downloadable
        in: query
        description: Only return objects that have associated downloads.
        required: false
        schema:
          type: boolean
      - name: featured
        in: query
        description: Only return products that are featured or not.
        required: false
        schema:
          type: boolean
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: product_collection_ids[]
        in: query
        description: Only return objects that belong to the given product collections.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: product_group_ids[]
        in: query
        description: Only return objects that belong to the given product groups.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: query
        in: query
        description: The query to be used for full text search of this collection.
        required: false
        schema:
          type: string
      - name: recurring
        in: query
        description: Only return products that are recurring or not recurring (one
          time).
        required: false
        schema:
          type: boolean
      - name: shipping_enabled
        in: query
        description: Only return objects that have shipping enabled or disabled.
        required: false
        schema:
          type: boolean
      - name: shipping_profile_ids[]
        in: query
        description: Only return objects that belong to the given shipping profile.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: status[]
        in: query
        description: Only return objects with the given status.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: rule_string
        in: query
        description: The rule string for filtering this collection. Uses the `product`
          rule schema.
        required: false
        schema:
          type: string
      - name: sort
        in: query
        description: The sorting column and order to be used for this collection.
          Available sorting columns for this endpoint are `cataloged_at`, `created_at`,
          `name`, and `updated_at`.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/products"
                data:
                - id: c0476318-e089-4bfe-8d66-f5efdd3af9e2
                  object: product
                  allow_out_of_stock_purchases: false
                  archived: false
                  archived_at:
                  auto_fulfill_enabled: false
                  available_stock: 0
                  average_stars: '0.0'
                  description:
                  held_stock: 0
                  featured: false
                  licensing_enabled: false
                  license_activation_limit:
                  metadata: {}
                  purchase_limit:
                  metrics:
                    currency: usd
                    max_price_amount: 2900
                    min_price_amount: 2900
                    prices_count: 1
                  name: Test Product
                  recurring: true
                  reviews_breakdown: {}
                  reviews_enabled: true
                  shipping_enabled: false
                  sku:
                  slug: test-product
                  solicit_reviews: true
                  status: draft
                  stock: 0
                  stock_enabled: false
                  tax_enabled: false
                  tax_category: tangible
                  weight: 0.0
                  weight_unit: lb
                  commission_structure:
                  featured_product_media:
                  product_group:
                  current_release_download:
                  shipping_profile:
                  cataloged_at: 1758210351
                  discarded_at:
                  created_at: 1758210351
                  updated_at: 1758210351
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Products
      operationId: create_product
      description: Creates a new product.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: d2185853-3e73-4bf8-9864-6fa85a490d0b
                object: product
                allow_out_of_stock_purchases: false
                archived: false
                archived_at:
                auto_fulfill_enabled: true
                available_stock: 0
                average_stars: '0.0'
                description:
                held_stock: 0
                featured: false
                licensing_enabled: false
                license_activation_limit:
                metadata: {}
                purchase_limit:
                metrics:
                  currency: usd
                  max_price_amount:
                  min_price_amount:
                  prices_count: 0
                name: Test Product
                recurring: false
                reviews_breakdown: {}
                reviews_enabled: true
                shipping_enabled: false
                sku:
                slug: test-product-1
                solicit_reviews: true
                status: draft
                stock: 0
                stock_enabled: false
                tax_enabled: true
                tax_category: tangible
                weight: 0.0
                weight_unit: lb
                commission_structure:
                featured_product_media:
                product_group:
                current_release_download:
                shipping_profile:
                cataloged_at: 1758210351
                discarded_at:
                created_at: 1758210351
                updated_at: 1758210351
              schema:
                "$ref": "#/components/schemas/product_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product:
                  allOf:
                  - "$ref": "#/components/schemas/product_body"
              example:
                product:
                  name: Test Product
  "/v1/products/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Products
      operationId: retrieve_product
      description: Retrieves details of a specific product. The `{id}` section of
        this endpoint accepts the product ID or slug.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: adf22e09-fccf-49b7-b6cd-a907515fa88f
                object: product
                allow_out_of_stock_purchases: false
                archived: false
                archived_at:
                auto_fulfill_enabled: false
                available_stock: 0
                average_stars: '0.0'
                description:
                held_stock: 0
                featured: false
                licensing_enabled: false
                license_activation_limit:
                metadata: {}
                purchase_limit:
                metrics:
                  currency: usd
                  max_price_amount: 2900
                  min_price_amount: 2900
                  prices_count: 1
                name: Test Product
                recurring: true
                reviews_breakdown: {}
                reviews_enabled: true
                shipping_enabled: false
                sku:
                slug: test-product
                solicit_reviews: true
                status: draft
                stock: 0
                stock_enabled: false
                tax_enabled: false
                tax_category: tangible
                weight: 0.0
                weight_unit: lb
                commission_structure:
                featured_product_media:
                product_group:
                current_release_download:
                shipping_profile:
                cataloged_at: 1758210351
                discarded_at:
                created_at: 1758210351
                updated_at: 1758210351
              schema:
                "$ref": "#/components/schemas/product_response"
    patch:
      summary: Update
      tags:
      - Products
      operationId: update_product
      description: Updates a specific product.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 910de021-51a8-4d8c-9d98-db601d98cad0
                object: product
                allow_out_of_stock_purchases: false
                archived: false
                archived_at:
                auto_fulfill_enabled: false
                available_stock: 0
                average_stars: '0.0'
                description:
                held_stock: 0
                featured: false
                licensing_enabled: false
                license_activation_limit:
                metadata: {}
                purchase_limit:
                metrics:
                  currency: usd
                  max_price_amount: 2900
                  min_price_amount: 2900
                  prices_count: 1
                name: Updated Product
                recurring: true
                reviews_breakdown: {}
                reviews_enabled: true
                shipping_enabled: false
                sku:
                slug: test-product
                solicit_reviews: true
                status: draft
                stock: 0
                stock_enabled: false
                tax_enabled: false
                tax_category: tangible
                weight: 0.0
                weight_unit: lb
                commission_structure:
                featured_product_media:
                product_group:
                current_release_download:
                shipping_profile:
                cataloged_at: 1758210351
                discarded_at:
                created_at: 1758210351
                updated_at: 1758210351
              schema:
                "$ref": "#/components/schemas/product_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product:
                  allOf:
                  - "$ref": "#/components/schemas/product_body"
              example:
                product:
                  name: Updated Product
    delete:
      summary: Delete
      tags:
      - Products
      operationId: delete_product
      description: Deletes a specific product.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 9ea3cb06-56c9-462c-9ffa-4aa726768f8d
                object: product
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/products/{id}/duplicate":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    post:
      summary: Duplicate
      tags:
      - Products
      operationId: duplicate_product
      description: Duplicates a specific product.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: d193b6ad-9dc2-415b-a9db-ccbf955297a7
                object: product
                allow_out_of_stock_purchases: false
                archived: false
                archived_at:
                auto_fulfill_enabled: false
                available_stock: 0
                average_stars: '0.0'
                description:
                held_stock: 0
                featured: false
                licensing_enabled: false
                license_activation_limit:
                metadata: {}
                purchase_limit:
                metrics:
                  currency: usd
                  max_price_amount: 2900
                  min_price_amount: 2900
                  prices_count: 1
                name: Test Product (Duplicate)
                recurring: true
                reviews_breakdown: {}
                reviews_enabled: true
                shipping_enabled: false
                sku:
                slug: test-product-duplicate
                solicit_reviews: true
                status: draft
                stock: 0
                stock_enabled: false
                tax_enabled: false
                tax_category: tangible
                weight: 0.0
                weight_unit: lb
                commission_structure:
                featured_product_media:
                product_group:
                current_release_download:
                shipping_profile:
                cataloged_at: 1758210351
                discarded_at:
                created_at: 1758210351
                updated_at: 1758210351
              schema:
                "$ref": "#/components/schemas/product_response"
  "/v1/promotions":
    get:
      summary: List
      tags:
      - Promotions
      operationId: list_promotion
      description: Returns a list of your promotions.
      parameters:
      - name: affiliation_ids[]
        in: query
        description: Only return objects that belong to the given affiliations.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: archived
        in: query
        description: Only return objects that are archived or not archived.
        required: false
        schema:
          type: boolean
      - name: coupon_ids[]
        in: query
        description: Only return objects with the given coupon IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: customer_ids[]
        in: query
        description: Only return objects that belong to the given customers.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: query
        in: query
        description: The query to be used for full text search of this collection.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/promotions"
                data:
                - id: 603f975c-c538-491c-90e3-6c93df07f27d
                  object: promotion
                  archived: false
                  archived_at:
                  code: TESTCODE
                  expired: false
                  max_redemptions:
                  metadata: {}
                  redeem_by:
                  times_redeemed: 0
                  affiliation:
                  coupon: 31e2495a-e01e-4890-8842-f0f55157b981
                  customer:
                  discarded_at:
                  created_at: 1758210351
                  updated_at: 1758210351
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Promotions
      operationId: create_promotion
      description: Creates a new promotion.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: a31de5ba-ffc4-402e-9adf-1bae150182b9
                object: promotion
                archived: false
                archived_at:
                code: TESTCODE
                expired: false
                max_redemptions:
                metadata: {}
                redeem_by:
                times_redeemed: 0
                affiliation:
                coupon: adf69ed3-b211-468a-aca3-e090e1b52c51
                customer:
                discarded_at:
                created_at: 1758210352
                updated_at: 1758210352
              schema:
                "$ref": "#/components/schemas/promotion_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                promotion:
                  allOf:
                  - "$ref": "#/components/schemas/promotion_body"
              example:
                promotion:
                  code: TESTCODE
                  coupon_id: adf69ed3-b211-468a-aca3-e090e1b52c51
  "/v1/promotions/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Promotions
      operationId: retrieve_promotion
      description: Retrieves details of a specific promotion.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 7ce13c24-7ebd-4a51-9636-df08d09f65f2
                object: promotion
                archived: false
                archived_at:
                code: TESTCODE
                expired: false
                max_redemptions:
                metadata: {}
                redeem_by:
                times_redeemed: 0
                affiliation:
                coupon: f44638ac-852d-491a-8311-924cc8bf0cbf
                customer:
                discarded_at:
                created_at: 1758210352
                updated_at: 1758210352
              schema:
                "$ref": "#/components/schemas/promotion_response"
    patch:
      summary: Update
      tags:
      - Promotions
      operationId: update_promotion
      description: Updates a specific promotion.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 7307c983-eae2-4d28-b292-1546900e79a4
                object: promotion
                archived: false
                archived_at:
                code: UPDATEDCODE
                expired: false
                max_redemptions:
                metadata: {}
                redeem_by:
                times_redeemed: 0
                affiliation:
                coupon: 3dfc78d6-e42d-48bd-981e-ca4a60a17616
                customer:
                discarded_at:
                created_at: 1758210352
                updated_at: 1758210352
              schema:
                "$ref": "#/components/schemas/promotion_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                promotion:
                  allOf:
                  - "$ref": "#/components/schemas/promotion_body"
              example:
                promotion:
                  code: UPDATEDCODE
    delete:
      summary: Delete
      tags:
      - Promotions
      operationId: delete_promotion
      description: Deletes a specific promotion.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: c4b03c24-5209-4a7a-a0cf-4be3fb1243c3
                object: promotion
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/public/activations":
    post:
      summary: Create (Public)
      tags:
      - Activations
      operationId: create(public)_activation
      description: Creates a new activation. If an activation already exists with
        the same `fingerprint` then it will be updated and returned.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 9cb0d61a-d47c-4b85-bb8a-a94fea6c0e6f
                object: activation
                counted: true
                name: My Site
                fingerprint: mysite.com
                license: bb26d0c9-aa6b-4905-9158-9e5f24f3515d
                created_at: 1758210353
                updated_at: 1758210353
              schema:
                "$ref": "#/components/schemas/activation_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                activation:
                  allOf:
                  - "$ref": "#/components/schemas/activation_body"
              example:
                activation:
                  name: My Site
                  fingerprint: mysite.com
                  license_id: bb26d0c9-aa6b-4905-9158-9e5f24f3515d
  "/v1/public/activations/{id}":
    get:
      summary: Retrieve (Public)
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Activations
      operationId: retrieve(public)_activation
      description: Retrieves details of a specific activation.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 8408d4dc-051d-43c0-b52c-50b939468174
                object: activation
                counted: true
                name:
                fingerprint: example.com
                license: 11f9555d-42ea-44a1-a44d-baf9a7c65868
                created_at: 1758210353
                updated_at: 1758210353
              schema:
                "$ref": "#/components/schemas/activation_response"
    patch:
      summary: Update (Public)
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Activations
      operationId: update(public)_activation
      description: Updates a specific activation.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: c4833074-4adb-4751-bfff-9d10aabe69ce
                object: activation
                counted: true
                name: New Activation Name
                fingerprint: example.com
                license: 86d38b95-8bbb-4dbf-a71f-e05ce6b313c9
                created_at: 1758210354
                updated_at: 1758210354
              schema:
                "$ref": "#/components/schemas/activation_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                activation:
                  allOf:
                  - "$ref": "#/components/schemas/activation_body"
              example:
                activation:
                  name: New Activation Name
    delete:
      summary: Delete (Public)
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Activations
      operationId: delete(public)_activation
      description: Deletes a specific activation.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 5e210add-ddea-494e-86b5-cd70665314e4
                object: activation
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/public/checkouts/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve (Public)
      parameters:
      - name: refresh_status
        in: query
        description: If true, the server will check the associated payment processor
          to see if a status change has occured. (This should be used when retrieving
          a checkout or payment intent immediately after it has been paid through
          the processor. In this scenario, it's possible that you'll request the checkout
          before the server has received the webhook from the processor. Setting this
          pararmeter to `true` prevents this scenario.)
        required: false
        schema:
          type: boolean
      tags:
      - Checkouts
      operationId: retrieve(public)_checkout
      description: Retrieves details of a specific checkout.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 7e71a37c-f308-47a3-b3cf-70a5260732e3
                object: checkout
                abandoned_checkout_enabled: true
                amount_due: 2900
                applied_balance_amount: 0
                available_countries: []
                billing_matches_shipping: true
                credited_balance_amount: 0
                currency: usd
                discount_amount: 0
                email: customer@example.com
                external_url:
                first_name:
                free_shipping_choice_shortage_amount:
                full_amount: 2900
                group_key:
                inherited_email: customer@example.com
                inherited_name:
                inherited_phone:
                ip_address:
                last_name:
                live_mode: true
                manual_payment: false
                metadata: {}
                name:
                net_paid_amount: 0
                paid_amount: 0
                g_weight: 0.0
                paid_at:
                payment_method_required: true
                portal_url: http://app.example.com/portal_redirect/checkouts/7e71a37c-f308-47a3-b3cf-70a5260732e3
                phone:
                proration_amount: 0
                refunded_amount: 0
                remaining_amount_due: 2900
                reusable_payment_method_required: false
                selected_shipping_choice_required: false
                shipping_address_accuracy_requirement: none
                shipping_amount: 0
                shipping_enabled: false
                shipping_tax_amount: 0
                shipping_tax_rate: 0.0
                status: draft
                subtotal_amount: 2900
                tax_amount: 0
                tax_behavior: exclusive
                tax_breakdown: []
                tax_enabled: false
                tax_label:
                tax_status: disabled
                total_amount: 2900
                total_savings_amount: 0
                trial_amount: 0
                upsells_expire_at:
                created_at: 1758210355
                updated_at: 1758210355
              schema:
                "$ref": "#/components/schemas/public/checkout_response"
  "/v1/public/clicks":
    post:
      summary: Create (Public)
      tags:
      - Clicks
      operationId: create(public)_click
      description: Creates a new click.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: ba8a05a5-d485-4ba6-8024-c7180686ae89
                object: click
                domain: example.com
                expires_at: 1760802355
                referrer:
                url: http://example.com
                created_at: 1758210355
                updated_at: 1758210355
              schema:
                "$ref": "#/components/schemas/public/click_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                click:
                  allOf:
                  - "$ref": "#/components/schemas/public/click_body"
              example:
                click:
                  affiliation_code: ACA21EB6
                  url: http://example.com
  "/v1/public/licenses/{key}":
    get:
      summary: Retrieve (Public)
      parameters:
      - name: key
        in: path
        required: true
        schema:
          type: string
      tags:
      - Licenses
      operationId: retrieve(public)_license
      description: Retrieves a license by it's key.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 43913bbd-55b0-46c6-9ca8-5b9749f36d6e
                object: license
                activations_count: 0
                activation_limit:
                key: af00a809-946f-4470-986f-79e7f0371647
                revokes_at:
                status: inactive
                price: 6e95b3b2-0b16-4398-9e47-b34b431f915f
                product: a070caf8-6465-4acc-8a55-4ca0d734a8cf
                variant:
                current_release:
                created_at: 1758210356
                updated_at: 1758210356
              schema:
                "$ref": "#/components/schemas/public/license_response"
  "/v1/public/licenses/{key}/expose_current_release":
    get:
      summary: Expose Current Release (Public)
      parameters:
      - name: expose_for
        in: query
        description: Sets how long a private media URL should be valid for, in seconds.
          The max value allowed is `86400` or 24 hours. When exposing a media through
          a purchase or license the default value is `900` or 15 minutes.
        required: false
        schema:
          type: integer
      - name: activation_id
        in: query
        description: The ID of an activation associated with this license. This is
          required to expose the current release if the license has an activation
          limit.
        required: false
        schema:
          type: string
      - name: key
        in: path
        required: true
        schema:
          type: string
      tags:
      - Licenses
      operationId: expose_current_release(public)_license
      description: Exposes the current release media for the license.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 19750a37-f472-4ec2-ad1c-b56e89dec2d6
                object: media
                alt:
                byte_size: 12254
                content_type: image/png
                extension: png
                filename: test.png
                height:
                public_access: false
                release_json:
                title:
                url: http://app.example.com/file_redirect/eyJfcmFpbHMiOnsiZGF0YSI6IjNlMGNmOTc2LWY4NjYtNDYzOS05ODRmLWQzMjg2ZjI3ODQ1OSIsImV4cCI6IjIwMjUtMDktMThUMTY6MDA6NTcuMDMyWiIsInB1ciI6ImJsb2JfaWQifX0=--b233089ec8d861e6b25e44534948f7f8084295b4/test.png?disposition=attachment
                width:
                url_expires_at: 1758211257
                created_at: 1758210356
                updated_at: 1758210356
              schema:
                "$ref": "#/components/schemas/media_response"
  "/v1/purchases":
    get:
      summary: List
      tags:
      - Purchases
      operationId: list_purchase
      description: Returns a list of purchases.
      parameters:
      - name: checkout_ids[]
        in: query
        description: Only return objects that belong to the given checkouts.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: created_at
        in: query
        description: Only return records that were created during the given date interval.
        required: false
        schema:
          type: object
          properties:
            gt:
              type: integer
              description: Minimum value to filter by (exclusive). Measured in seconds
                since the Unix epoch.
            gte:
              type: integer
              description: Minimum value to filter by (inclusive). Measured in seconds
                since the Unix epoch.
            lt:
              type: integer
              description: Maximum value to filter by (exclusive). Measured in seconds
                since the Unix epoch.
            lte:
              type: integer
              description: Maximum value to filter by (inclusive). Measured in seconds
                since the Unix epoch.
          style: deepObject
          explode: true
      - name: customer_ids[]
        in: query
        description: Only return objects that belong to the given customers.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: downloadable
        in: query
        description: Only return objects that have associated downloads.
        required: false
        schema:
          type: boolean
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: license_ids[]
        in: query
        description: Only return objects that belong to the given licenses.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: live_mode
        in: query
        description: Only return objects that are live mode or test mode.
        required: false
        schema:
          type: boolean
      - name: order_ids[]
        in: query
        description: Only return objects that belong to the given orders.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: product_ids[]
        in: query
        description: Only return objects that belong to the given products.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: revoked
        in: query
        description: Only return objects that are revoked or not revoked.
        required: false
        schema:
          type: boolean
      - name: subscription_ids[]
        in: query
        description: Only return objects that belong to the given subscriptions.
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 2
                  limit: 20
                  page: 1
                  url: "/v1/purchases"
                data:
                - id: 0e6f86bf-a59c-4dcb-8080-41369f8c192b
                  object: purchase
                  live_mode: true
                  quantity: 1
                  revoked: false
                  revoked_at:
                  revoke_at:
                  customer: 7fd6cf74-4533-4784-9d52-2f5f1ad41507
                  initial_order: 22ae6d4c-4579-4ca5-96c2-7e577f7919b8
                  license:
                  price: 5e5dd11d-5a4b-43c4-add9-724bace12e3e
                  product: c1681e59-6242-4a6d-995c-91ef40e3530f
                  subscription:
                  variant:
                  review:
                  created_at: 1758210358
                  updated_at: 1758210358
                - id: 9cf2ebdf-2742-4816-a61a-5cda25239404
                  object: purchase
                  live_mode: true
                  quantity: 1
                  revoked: false
                  revoked_at:
                  revoke_at:
                  customer: 7fd6cf74-4533-4784-9d52-2f5f1ad41507
                  initial_order:
                  license:
                  price: 5e5dd11d-5a4b-43c4-add9-724bace12e3e
                  product: c1681e59-6242-4a6d-995c-91ef40e3530f
                  subscription:
                  variant:
                  review:
                  created_at: 1758210357
                  updated_at: 1758210357
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Purchases
      operationId: create_purchase
      description: Creates a new purchase.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 7852680f-c227-4a7b-85f2-927420dc86a3
                object: purchase
                live_mode: true
                quantity: 1
                revoked: false
                revoked_at:
                revoke_at: 1758296759
                customer: d1aa5c13-8631-4441-af59-862f90b5ab51
                initial_order:
                license:
                price: 8910fb89-bd6d-4402-a7cb-89e26c1591ae
                product: ad1b788e-63c0-4f68-8cc5-b7ee9e9907dc
                subscription:
                variant:
                review:
                created_at: 1758210359
                updated_at: 1758210359
              schema:
                "$ref": "#/components/schemas/purchase_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                purchase:
                  allOf:
                  - "$ref": "#/components/schemas/purchase_body"
              example:
                purchase:
                  customer_id: d1aa5c13-8631-4441-af59-862f90b5ab51
                  price_id: 8910fb89-bd6d-4402-a7cb-89e26c1591ae
                  revoke_at: 2025-09-19 15:45:59 UTC
  "/v1/purchases/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Purchases
      operationId: retrieve_purchase
      description: Retrieves details of a specific purchase.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: c09a838d-b435-480e-aaa2-77b8983bcd37
                object: purchase
                live_mode: true
                quantity: 1
                revoked: false
                revoked_at:
                revoke_at:
                customer: 4874ad99-e32f-4e59-81e0-a281c7b8dd6e
                initial_order: b2444bcd-92d8-4cab-854d-31ae41d97c58
                license:
                price: 66f8f000-c1fc-45f1-a6f6-a89f250f9054
                product: 2d730125-31ce-4d34-8110-25c6be91a806
                subscription:
                variant:
                review:
                created_at: 1758210358
                updated_at: 1758210358
              schema:
                "$ref": "#/components/schemas/purchase_response"
    patch:
      summary: Update
      tags:
      - Purchases
      operationId: update_purchase
      description: Updates a specific purchase.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: '0880461f-ff48-40c7-b16e-c0788c44f8ea'
                object: purchase
                live_mode: true
                quantity: 1
                revoked: false
                revoked_at:
                revoke_at: 1758296761
                customer: 32c823d3-63e5-4298-9c64-4e546bc5df22
                initial_order: 1ffcc062-52dd-4d64-9745-44cbb366fcd5
                license:
                price: 5c7ac41d-f06e-4557-86cc-4b62348d96cb
                product: fa4f5f4d-2ae5-49dd-8fba-b4efadfd3e9f
                subscription:
                variant:
                review:
                created_at: 1758210361
                updated_at: 1758210361
              schema:
                "$ref": "#/components/schemas/purchase_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                purchase:
                  allOf:
                  - "$ref": "#/components/schemas/purchase_update_body"
              example:
                purchase:
                  revoke_at: 2025-09-19 15:46:01 UTC
  "/v1/purchases/{id}/invoke":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    patch:
      summary: Invoke
      tags:
      - Purchases
      operationId: invoke_purchase
      description: Invokes a specific purchase.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 9c7e97a1-3c21-4753-8b22-a66f642a52cd
                object: purchase
                live_mode: true
                quantity: 1
                revoked: false
                revoked_at:
                revoke_at:
                customer: 2f69d5c1-6189-4897-a7b7-4b11fb02c23f
                initial_order: dae961a1-3dd6-48a7-a03e-d560ef0bf2cd
                license:
                price: 8391dc73-64b2-4eed-a146-90e51f1c4f57
                product: ebfd2a17-90f3-4a5a-8729-df6b2588785e
                subscription:
                variant:
                review:
                created_at: 1758210359
                updated_at: 1758210359
              schema:
                "$ref": "#/components/schemas/purchase_response"
  "/v1/purchases/{id}/revoke":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    patch:
      summary: Revoke
      tags:
      - Purchases
      operationId: revoke_purchase
      description: Revokes a specific purchase.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 9866de5b-63d4-4022-a54d-14d1de5e324f
                object: purchase
                live_mode: true
                quantity: 1
                revoked: true
                revoked_at: 1758210360
                revoke_at:
                customer: efa4bd49-5f4b-4703-935c-5f0928b5e024
                initial_order: 42e0045b-76dd-4e68-a398-7af90de9ad9a
                license:
                price: bf713541-c127-47d4-8cf0-8b8646d5371d
                product: bb91f1d5-179b-4ff1-a1e6-52ca70e0a746
                subscription:
                variant:
                review:
                created_at: 1758210360
                updated_at: 1758210360
              schema:
                "$ref": "#/components/schemas/purchase_response"
  "/v1/referral_items":
    get:
      summary: List
      tags:
      - Referral Items
      operationId: list_referral_item
      description: Returns a list of your referral items.
      parameters:
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: referral_ids[]
        in: query
        description: Only return objects that belong to the given referrals.
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/referral_items"
                data:
                - id: 832ca6dd-b51e-4a7a-9633-1e6b76470f36
                  object: referral_item
                  commission_amount: 580
                  line_item: ec6f088c-001d-4b93-9918-2069dea6e908
                  referral: ba7a4193-3d71-4cf8-8ebf-40bde045353b
                  created_at: 1758210361
                  updated_at: 1758210361
              schema:
                "$ref": "#/components/schemas/list_response"
  "/v1/referral_items/{id}":
    get:
      summary: Retrieve
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Referral Items
      operationId: retrieve_referral_item
      description: Retrieves details of a specific referral item.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 1f4ed167-cbcc-42ee-b6b6-c6d623efb7dc
                object: referral_item
                commission_amount: 580
                line_item: 35671dcb-b45f-4705-81d6-87d55b9a2063
                referral: a145a9b7-f915-4526-8e3b-61b8a620aa15
                created_at: 1758210362
                updated_at: 1758210362
              schema:
                "$ref": "#/components/schemas/referral_item_response"
  "/v1/referrals":
    get:
      summary: List
      tags:
      - Referrals
      operationId: list_referral
      description: Returns a list of your referrals.
      parameters:
      - name: affiliation_ids[]
        in: query
        description: Only return objects that belong to the given affiliations.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: checkout_ids[]
        in: query
        description: Only return objects that belong to the given checkouts.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: live_mode
        in: query
        description: Only return objects that are live mode or test mode.
        required: false
        schema:
          type: boolean
      - name: manual
        in: query
        description: Only return referrals that were manually created or not.
        required: false
        schema:
          type: boolean
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: payout_ids[]
        in: query
        description: Only return objects that belong to the given payouts.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: status[]
        in: query
        description: Only return objects with the given status.
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/referrals"
                data:
                - id: 79f5496f-a075-4bc7-9aa1-ce3aa71460c3
                  object: referral
                  commission_amount: 9900
                  currency: usd
                  description:
                  live_mode: true
                  manual: true
                  refund_reduction_amount: 0
                  status: reviewing
                  affiliation: f0124dc8-302a-4a6e-8946-39c06d385a8e
                  attributed_click:
                  checkout:
                  payout:
                  created_at: 1758210362
                  updated_at: 1758210362
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Referrals
      operationId: create_referral
      description: Creates a new referral.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 9c8dcb04-599a-44e4-a6f8-8bcffe72fa18
                object: referral
                commission_amount: 9900
                currency: usd
                description:
                live_mode: true
                manual: true
                refund_reduction_amount: 0
                status: reviewing
                affiliation: 51fecdd5-7115-44d1-a8ac-7eeeebe7b9b1
                attributed_click:
                checkout:
                payout:
                created_at: 1758210362
                updated_at: 1758210362
              schema:
                "$ref": "#/components/schemas/referral_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                referral:
                  allOf:
                  - "$ref": "#/components/schemas/referral_body"
              example:
                referral:
                  affiliation: 51fecdd5-7115-44d1-a8ac-7eeeebe7b9b1
                  commission_amount: 9900
  "/v1/referrals/{id}":
    get:
      summary: Retrieve
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Referrals
      operationId: retrieve_referral
      description: Retrieves details of a specific referral.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 19cb3969-ea35-4206-b377-c3f3ac81d8a2
                object: referral
                commission_amount: 9900
                currency: usd
                description:
                live_mode: true
                manual: true
                refund_reduction_amount: 0
                status: reviewing
                affiliation: 0d3ab8bd-9a14-4cf7-b08d-0548e9b7a747
                attributed_click:
                checkout:
                payout:
                created_at: 1758210362
                updated_at: 1758210362
              schema:
                "$ref": "#/components/schemas/referral_response"
    patch:
      summary: Update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Referrals
      operationId: update_referral
      description: Updates a specific referral.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: f7a1e3d0-ace3-40f9-92e3-ed7df5215e8c
                object: referral
                commission_amount: 4500
                currency: usd
                description:
                live_mode: true
                manual: true
                refund_reduction_amount: 0
                status: reviewing
                affiliation: 190d7665-99a2-48df-bd06-84a610e6dca0
                attributed_click:
                checkout:
                payout:
                created_at: 1758210362
                updated_at: 1758210362
              schema:
                "$ref": "#/components/schemas/referral_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                referral:
                  allOf:
                  - "$ref": "#/components/schemas/referral_body"
              example:
                referral:
                  commission_amount: 4500
    delete:
      summary: Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Referrals
      operationId: delete_referral
      description: Deletes a specific referral.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: f1f49f27-7f8f-457a-abfe-6372cc5194d6
                object: referral
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/referrals/{id}/approve":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    patch:
      summary: Approve
      tags:
      - Referrals
      operationId: approve_referral
      description: Approves a specific referral.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: '09dc2df0-0076-4f3d-ac46-143efd11cefb'
                object: referral
                commission_amount: 9900
                currency: usd
                description:
                live_mode: true
                manual: true
                refund_reduction_amount: 0
                status: approved
                affiliation: b4bcddaa-3ff6-433d-a4ee-bdee837c998f
                attributed_click:
                checkout:
                payout:
                created_at: 1758210362
                updated_at: 1758210362
              schema:
                "$ref": "#/components/schemas/referral_response"
  "/v1/referrals/{id}/deny":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    patch:
      summary: Deny
      tags:
      - Referrals
      operationId: deny_referral
      description: Denies a specific referral.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: e8bc12e9-7e14-4936-882a-a5b0a3e55bc9
                object: referral
                commission_amount: 9900
                currency: usd
                description:
                live_mode: true
                manual: true
                refund_reduction_amount: 0
                status: denied
                affiliation: 4f750941-2069-45ee-b73c-3cdd6e0cb897
                attributed_click:
                checkout:
                payout:
                created_at: 1758210362
                updated_at: 1758210362
              schema:
                "$ref": "#/components/schemas/referral_response"
  "/v1/referrals/{id}/make_reviewing":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    patch:
      summary: Make Reviewing
      tags:
      - Referrals
      operationId: make_reviewing_referral
      description: Makes a specific referral reveiwing.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 278c3e05-a9dd-436b-9cc0-0d70ec4e2b30
                object: referral
                commission_amount: 9900
                currency: usd
                description:
                live_mode: true
                manual: true
                refund_reduction_amount: 0
                status: reviewing
                affiliation: 84380a78-4841-4e88-abdb-7164ddfc98c1
                attributed_click:
                checkout:
                payout:
                created_at: 1758210362
                updated_at: 1758210362
              schema:
                "$ref": "#/components/schemas/referral_response"
  "/v1/refund_items":
    get:
      summary: List
      tags:
      - Refund Items
      operationId: list_refund_item
      description: Returns a list of your refund items.
      parameters:
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: refund_ids[]
        in: query
        description: Only return objects that belong to the given refunds.
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/refund_items"
                data:
                - id: '09488d77-6044-4d5e-89ef-63489f9e6eff'
                  object: refund_item
                  quantity: 1
                  restock: false
                  revoke_purchase: false
                  line_item: a10c038b-8001-41cf-ad79-fe594102f6ce
                  refund: bf8e0ff8-6541-4938-94c2-3a625422c209
                  created_at: 1758210363
                  updated_at: 1758210363
              schema:
                "$ref": "#/components/schemas/list_response"
  "/v1/refund_items/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Refund Items
      operationId: retrieve_refund_item
      description: Retrieves details of a specific refund item.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 4e6c4e40-12cb-4c97-bbed-a446ff72079e
                object: refund_item
                quantity: 1
                restock: false
                revoke_purchase: false
                line_item: 39a70f69-469b-4a70-bce1-62f3322c3dd3
                refund: f401dbda-83bf-423f-a2ca-b6c74059af76
                created_at: 1758210364
                updated_at: 1758210364
              schema:
                "$ref": "#/components/schemas/refund_item_response"
  "/v1/refunds":
    get:
      summary: List
      tags:
      - Refunds
      operationId: list_refund
      description: Returns a list of your refunds.
      parameters:
      - name: charge_ids[]
        in: query
        description: Only return objects with the given charge IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: customer_ids[]
        in: query
        description: Only return objects that belong to the given customers.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: live_mode
        in: query
        description: Only return objects that are live mode or test mode.
        required: false
        schema:
          type: boolean
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: return_request_ids[]
        in: query
        description: Only return objects that belong to the given return requests.
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/refunds"
                data:
                - id: e28be0e9-f505-4c4f-a261-d79585ce84e9
                  object: refund
                  amount: 1450
                  currency: usd
                  external_refund_id: uvl3cmrcayd4usz
                  failure_reason:
                  live_mode: true
                  metadata: {}
                  reason: requested_by_customer
                  status: pending
                  charge: b4c4b92e-bc88-4482-8892-c5108648d49a
                  customer: 05e74553-55b5-4543-b412-894d3797f161
                  return_request:
                  created_at: 1758210365
                  updated_at: 1758210365
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Refunds
      operationId: create_refund
      description: Creates a new refund.
      parameters:
      - name: update_referral_commission
        in: query
        description: When set to true, the associated referral commission amount will
          be reduced proportionally based on the ratio of the refund amount to the
          checkout's total amount due.
        required: false
        schema:
          type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: aed54f3c-ef99-4420-8c19-f7a3f75485af
                object: refund
                amount: 500
                currency: usd
                external_refund_id: re_PNyB72WHf4YZHk0
                failure_reason:
                live_mode: true
                metadata: {}
                reason: requested_by_customer
                status: succeeded
                charge: 5405b2d7-75d4-48bf-b5bd-8fc765ca064e
                customer: f8d1f0c5-5d32-468a-bbe1-e12db49d9744
                return_request:
                created_at: 1758210366
                updated_at: 1758210366
              schema:
                "$ref": "#/components/schemas/refund_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                refund:
                  allOf:
                  - "$ref": "#/components/schemas/refund_body"
              example:
                refund:
                  amount: 500
                  reason: requested_by_customer
                  charge_id: 5405b2d7-75d4-48bf-b5bd-8fc765ca064e
  "/v1/refunds/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Refunds
      operationId: retrieve_refund
      description: Retrieves details of a specific refund.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 0b3801ff-25ca-42c6-8268-3fd23eeca02b
                object: refund
                amount: 1450
                currency: usd
                external_refund_id: dpstijzw3uu81km
                failure_reason:
                live_mode: true
                metadata: {}
                reason: requested_by_customer
                status: pending
                charge: 37faa6f9-0ed8-4b76-986d-d6837b5335cf
                customer: 6ce3a5f1-cfef-4d70-9ddb-5ee02a8722d1
                return_request:
                created_at: 1758210367
                updated_at: 1758210367
              schema:
                "$ref": "#/components/schemas/refund_response"
  "/v1/return_items":
    get:
      summary: List
      tags:
      - Return Items
      operationId: list_return_item
      description: Returns a list of your return items.
      parameters:
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: return_request_ids[]
        in: query
        description: Only return objects that belong to the given return requests.
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/return_items"
                data:
                - id: 344f084b-c09c-480e-ae8d-51c3ad914b39
                  object: return_item
                  note:
                  return_reason: wrong_item
                  return_reason_description: Received the wrong item
                  quantity: 1
                  return_request: 1d27702a-6099-437f-a207-7d6306e6973f
                  line_item: 3ef627c8-d34f-45d1-a985-afe9d89d9c36
                  created_at: 1758210367
                  updated_at: 1758210367
              schema:
                "$ref": "#/components/schemas/list_response"
  "/v1/return_items/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Return Items
      operationId: retrieve_return_item
      description: Retrieves details of a specific return item.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: e9cb2991-3a47-428a-98c7-9bb9e1d4652e
                object: return_item
                note:
                return_reason: wrong_item
                return_reason_description: Received the wrong item
                quantity: 1
                return_request: 5123937e-5fdd-4d9d-926f-05b92e871a76
                line_item: 8a05af72-e021-4a78-8d8b-c09ed2154028
                created_at: 1758210368
                updated_at: 1758210368
              schema:
                "$ref": "#/components/schemas/return_item_response"
  "/v1/return_requests":
    get:
      summary: List
      tags:
      - Return Requests
      operationId: list_return_request
      description: Returns a list of your return requests.
      parameters:
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: order_ids[]
        in: query
        description: Only return objects that belong to the given orders.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: status[]
        in: query
        description: Only return objects with the given status.
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/return_requests"
                data:
                - id: 77871b77-0560-4f1a-a2e5-d430d224c959
                  object: return_request
                  number: 0000-R
                  status: open
                  order: 15f6675a-49c8-4f97-81de-8c1ed5267de0
                  created_at: 1758210368
                  updated_at: 1758210368
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Return Requests
      operationId: create_return_request
      description: Creates a new return request.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 2bb45806-0c16-4543-ac4c-d0158dd990b8
                object: return_request
                number: 0000-R1
                status: open
                order: 8920c4a1-81c4-4286-ba20-4cc3574a5365
                created_at: 1758210369
                updated_at: 1758210369
              schema:
                "$ref": "#/components/schemas/return_request_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                return_request:
                  allOf:
                  - "$ref": "#/components/schemas/return_request_body"
              example:
                return_request:
                  order: 8920c4a1-81c4-4286-ba20-4cc3574a5365
                  return_items:
                  - line_item: e3506d82-a94e-4ad2-a3da-dd59306e3cbd
                    quantity: 1
                    return_reason_id: wrong_item
  "/v1/return_requests/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Return Requests
      operationId: retrieve_return_request
      description: Retrieves details of a specific return request.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 795a7ec7-02f8-4243-b375-6d7a52950627
                object: return_request
                number: 0000-R
                status: open
                order: 9da67566-13ad-4e01-a076-158a7934c2ce
                created_at: 1758210369
                updated_at: 1758210369
              schema:
                "$ref": "#/components/schemas/return_request_response"
    patch:
      summary: Update
      tags:
      - Return Requests
      operationId: update_return_request
      description: Updates a specific return request.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 10a63474-79ac-44d1-bbfd-24f6bb1b3b66
                object: return_request
                number: 0000-R
                status: open
                order: fd73feca-1a68-4d6d-b301-3e38e22e1418
                created_at: 1758210370
                updated_at: 1758210370
              schema:
                "$ref": "#/components/schemas/return_request_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                return_request:
                  allOf:
                  - "$ref": "#/components/schemas/return_request_body"
              example:
                return_request:
                  metadata:
                    test: test
    delete:
      summary: Delete
      tags:
      - Return Requests
      operationId: delete_return_request
      description: Deletes a specific return request.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: a491c222-05ca-4459-9687-537415834758
                object: return_request
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/return_requests/{id}/open":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    patch:
      summary: Open
      tags:
      - Return Requests
      operationId: open_return_request
      description: Updates status of a specific return request to `open`.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 792dbe77-a731-47f9-a1c3-75be3fa68593
                object: return_request
                number: 0000-R
                status: open
                order: 94179e5b-e188-46f9-aef2-a6934defa938
                created_at: 1758210370
                updated_at: 1758210370
              schema:
                "$ref": "#/components/schemas/return_request_response"
  "/v1/return_requests/{id}/complete":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    patch:
      summary: Complete
      tags:
      - Return Requests
      operationId: complete_return_request
      description: Updates status of a specific return request to `complete`.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 63c9669e-2844-481b-b184-1bb44004f742
                object: return_request
                number: 0000-R
                status: completed
                order: 19ccb630-796d-43fb-903c-ffcbab7f4b79
                created_at: 1758210371
                updated_at: 1758210371
              schema:
                "$ref": "#/components/schemas/return_request_response"
  "/v1/return_reasons":
    get:
      summary: List Return Reasons
      tags:
      - Return Requests
      operationId: list_return_reasons_return_request
      description: Returns a list of possible return reasons.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                data:
                - id: color
                  description: Color
                - id: defective
                  description: Damaged or defective
                - id: not_as_described
                  description: Item not as described
                - id: size_too_large
                  description: Size was too large
                - id: size_too_small
                  description: Size was too small
                - id: style
                  description: Style
                - id: unknown
                  description: Unknown
                - id: unwanted
                  description: Customer changed their mind
                - id: wrong_item
                  description: Received the wrong item
                - id: other
                  description: Other
              schema:
                "$ref": "#/components/schemas/list_response"
  "/v1/review_medias":
    get:
      summary: List
      tags:
      - Review Medias
      operationId: list_review_media
      description: Returns a list of your review medias.
      parameters:
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: review_ids[]
        in: query
        description: Only return objects that belong to the given reviews.
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/review_medias"
                data:
                - id: 4dd7c815-5ed0-47be-9053-614178c34762
                  object: review_media
                  alt:
                  title:
                  url:
                  media: 5c3d0f90-0265-4b9b-af81-d28a164d778e
                  review: f6673271-c14e-42f3-8f83-2199157b0d32
                  created_at: 1758210371
                  updated_at: 1758210371
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Review Medias
      operationId: create_review_media
      description: Create a new review media.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: d17339b0-7d0d-4339-9519-3874f36ca420
                object: review_media
                alt:
                title:
                url:
                media: 8b251b0f-c36d-48f3-80cb-2feb68ddbb89
                review: '09df640c-2882-4d05-a451-072ac5d01479'
                created_at: 1758210371
                updated_at: 1758210371
              schema:
                "$ref": "#/components/schemas/review_media_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                review_media:
                  allOf:
                  - "$ref": "#/components/schemas/review_media_body"
              example:
                review_media:
                  review_id: '09df640c-2882-4d05-a451-072ac5d01479'
                  media_id: 8b251b0f-c36d-48f3-80cb-2feb68ddbb89
  "/v1/review_medias/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Review Medias
      operationId: retrieve_review_media
      description: Retrieves details of a specific review media.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: a4c6e382-a4e8-499e-ba7d-4f554d8f6f09
                object: review_media
                alt:
                title:
                url:
                media: f261e68e-3823-4e09-b84f-0bc08fa3d1ab
                review: 3e26fbd9-5d74-4a22-86ce-10b14bfbd322
                created_at: 1758210372
                updated_at: 1758210372
              schema:
                "$ref": "#/components/schemas/review_media_response"
    delete:
      summary: Delete
      tags:
      - Review Medias
      operationId: delete_review_media
      description: Deletes a specific review media.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 052bf6f6-0e56-4292-b11f-4cc3c9bdbbee
                object: review_media
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/review_protocol":
    get:
      summary: Retrieve
      tags:
      - Review Protocols
      operationId: retrieve_review_protocol
      description: Retrieves details of the current account's review protocol.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 1e2dfd0c-8ed0-466e-9260-8c26193c3016
                object: review_protocol
                reviews_enabled: false
                solicit_reviews: false
                solicit_reviews_after_days: 7
                created_at: 1758210372
                updated_at: 1758210372
              schema:
                "$ref": "#/components/schemas/review_protocol_response"
    patch:
      summary: Update
      tags:
      - Review Protocols
      operationId: update_review_protocol
      description: Updates the current account's review protocol.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 558c0509-b696-4d2e-86f2-a607a352d389
                object: review_protocol
                reviews_enabled: true
                solicit_reviews: true
                solicit_reviews_after_days: 7
                created_at: 1758210372
                updated_at: 1758210372
              schema:
                "$ref": "#/components/schemas/review_protocol_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                review_protocol:
                  allOf:
                  - "$ref": "#/components/schemas/review_protocol_body"
              example:
                review_protocol:
                  reviews_enabled: true
                  solicit_reviews: true
  "/v1/reviews":
    get:
      summary: List
      tags:
      - Reviews
      operationId: list_review
      description: Returns a list of your reviews.
      parameters:
      - name: customer_ids[]
        in: query
        description: Only return objects that belong to the given customers.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: product_ids[]
        in: query
        description: Only return objects that belong to the given products.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: query
        in: query
        description: The query to be used for full text search of this collection.
        required: false
        schema:
          type: string
      - name: status[]
        in: query
        description: Only return objects with the given status.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: The sorting column and order to be used for this collection.
          Available sorting columns for this endpoint are `created_at`, `stars`, and
          `updated_at`.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 0
                  limit: 20
                  page: 1
                  url: "/v1/reviews"
                data: []
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Reviews
      operationId: create_review
      description: Creates a new review.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 2faa5c05-137c-43cd-991d-4ac1d13c9728
                object: review
                body: Easy to use
                status: in_review
                title: Useful Product
                stars: 4.5
                verified: false
                customer: 70f71bfa-82d5-4944-a9ff-8c8c51cbec0f
                product: 3d4a8dde-2064-4179-b45d-806b21291871
                purchase:
                created_at: 1758210372
                updated_at: 1758210372
              schema:
                "$ref": "#/components/schemas/review_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                review:
                  allOf:
                  - "$ref": "#/components/schemas/review_body"
              example:
                review:
                  title: Useful Product
                  body: Easy to use
                  stars: 4.5
                  product: 3d4a8dde-2064-4179-b45d-806b21291871
                  customer: 70f71bfa-82d5-4944-a9ff-8c8c51cbec0f
  "/v1/reviews/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Reviews
      operationId: retrieve_review
      description: Retrieves details of a specific review.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: e6fdd5dc-fccd-4725-b143-219295a8c2d7
                object: review
                body: Really enjoyed using this.
                status: in_review
                title: Great Product
                stars: 4.5
                verified: false
                customer: 28de998f-55d1-48e3-b650-84f1a72207d0
                product: 03426fdd-c1da-495c-a90b-67423d409b5d
                purchase:
                created_at: 1758210372
                updated_at: 1758210372
              schema:
                "$ref": "#/components/schemas/review_response"
    patch:
      summary: Update
      tags:
      - Reviews
      operationId: update_review
      description: Updates a specific review.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: dc4dabe3-f249-4157-838a-8dc7df55d0a8
                object: review
                body: Really enjoyed using this.
                status: in_review
                title: Updated title
                stars: 4.5
                verified: false
                customer: e7687276-b634-48bc-9d18-ec02290f3bf2
                product: 7fe92fbf-9d80-4164-9361-841870898316
                purchase:
                created_at: 1758210372
                updated_at: 1758210372
              schema:
                "$ref": "#/components/schemas/review_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                review:
                  allOf:
                  - "$ref": "#/components/schemas/review_body"
              example:
                review:
                  title: Updated title
    delete:
      summary: Delete
      tags:
      - Reviews
      operationId: delete_review
      description: Deletes a specific review.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 29a10da9-ee7c-4bc6-8e55-33bfd7a3c5a8
                object: review
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/reviews/{id}/publish":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    patch:
      summary: Publish
      tags:
      - Reviews
      operationId: publish_review
      description: Publishes a specific review.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 63439640-f851-4bb3-aa64-98f6d04694a8
                object: review
                body: Really enjoyed using this.
                status: published
                title: Great Product
                stars: 4.5
                verified: false
                customer: 7863451d-372f-402f-a689-0002fe6b07bd
                product: 133add4f-683f-4754-98a6-64ac29feba64
                purchase:
                created_at: 1758210372
                updated_at: 1758210372
              schema:
                "$ref": "#/components/schemas/review_response"
  "/v1/reviews/{id}/unpublish":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    patch:
      summary: Unpublish
      tags:
      - Reviews
      operationId: unpublish_review
      description: Unpublishes a specific review.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: af05c8ea-1d4f-4971-a6e2-b314afa6f0a3
                object: review
                body: Really enjoyed using this.
                status: unpublished
                title: Great Product
                stars: 4.5
                verified: false
                customer: ad5fc660-4cea-4c33-8ec6-0b3c4ba97ec8
                product: b308889c-687b-4de3-a5d4-0807603f87de
                purchase:
                created_at: 1758210372
                updated_at: 1758210372
              schema:
                "$ref": "#/components/schemas/review_response"
  "/v1/rule_strings/construct":
    post:
      summary: Construct rule string
      tags:
      - Rule Strings
      operationId: constructrulestring_rule_string
      description: Constructs a rule string from structured data.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: rule_string
                rule_string: "(checkout.subtotal_amount is '100' AND checkout.metadata['key']
                  is 'value') OR customer.email is 'test@test.com'"
                schema_id: auto_fees__line_item
                groups:
                - leaves:
                  - attribute_name: checkout.subtotal_amount
                    operator_label: is
                    metadata_key:
                    comparison_value: '100'
                  - attribute_name: checkout.metadata
                    operator_label: is
                    metadata_key: key
                    comparison_value: value
                - leaves:
                  - attribute_name: customer.email
                    operator_label: is
                    metadata_key:
                    comparison_value: test@test.com
              schema:
                "$ref": "#/components/schemas/rule_string_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rule_string:
                  allOf:
                  - "$ref": "#/components/schemas/rule_string_construct_body"
              example:
                rule_string:
                  schema_id: auto_fees__line_item
                  groups:
                  - leaves:
                    - attribute_name: checkout.subtotal_amount
                      operator_label: is
                      comparison_value: '100'
                    - attribute_name: checkout.metadata
                      metadata_key: key
                      operator_label: is
                      comparison_value: value
                  - leaves:
                    - attribute_name: customer.email
                      operator_label: is
                      comparison_value: test@test.com
  "/v1/rule_strings/deconstruct":
    post:
      summary: Deconstruct rule string
      tags:
      - Rule Strings
      operationId: deconstructrulestring_rule_string
      description: Deconstructs a rule string into structured data.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: rule_string
                rule_string: "(checkout.subtotal_amount is '100' AND checkout.metadata['key']
                  is 'value') OR quantity is '2'"
                schema_id: auto_fees__line_item
                groups:
                - leaves:
                  - attribute_name: checkout.subtotal_amount
                    operator_label: is
                    metadata_key:
                    comparison_value: '100'
                  - attribute_name: checkout.metadata
                    operator_label: is
                    metadata_key: key
                    comparison_value: value
                - leaves:
                  - attribute_name: quantity
                    operator_label: is
                    metadata_key:
                    comparison_value: '2'
              schema:
                "$ref": "#/components/schemas/rule_string_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rule_string:
                  allOf:
                  - "$ref": "#/components/schemas/rule_string_deconstruct_body"
              example:
                rule_string:
                  schema_id: auto_fees__line_item
                  rule_string: checkout.subtotal_amount is '100' AND checkout.metadata['key']
                    is 'value' OR quantity is '2'
  "/v1/rule_strings/schema/{schema_id}":
    parameters:
    - name: schema_id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve schema definition
      tags:
      - Rule Strings
      operationId: retrieveschemadefinition_rule_string
      description: Retrieves the schema definition for a rule schema.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: rule_schema
                schema_id: auto_fees__line_item
                attributes:
                - key: quantity
                  type: numeric
                  operators:
                  - label: is more than
                  - label: is at least
                  - label: is less than
                  - label: is at most
                  - label: is
                  - label: is not
                  acceptable_values: []
                - key: subtotal_amount
                  type: numeric
                  operators:
                  - label: is more than
                  - label: is at least
                  - label: is less than
                  - label: is at most
                  - label: is
                  - label: is not
                  acceptable_values: []
                - key: note
                  type: string
                  operators:
                  - label: is
                  - label: is not
                  acceptable_values: []
                - key: checkout.metadata
                  type: metadata
                  operators:
                  - label: is
                  - label: is not
                  acceptable_values: []
                - key: checkout.order_type
                  type: enum
                  operators:
                  - label: is
                  - label: is not
                  acceptable_values:
                  - checkout
                  - subscription
                - key: checkout.subtotal_amount
                  type: numeric
                  operators:
                  - label: is more than
                  - label: is at least
                  - label: is less than
                  - label: is at most
                  - label: is
                  - label: is not
                  acceptable_values: []
                - key: customer.created_at
                  type: date
                  operators:
                  - label: is after
                  - label: is on or after
                  - label: is before
                  - label: is on or before
                  - label: is
                  - label: is not
                  acceptable_values: []
                - key: customer.email
                  type: string
                  operators:
                  - label: is
                  - label: is not
                  acceptable_values: []
                - key: customer.first_name
                  type: string
                  operators:
                  - label: is
                  - label: is not
                  acceptable_values: []
                - key: customer.last_name
                  type: string
                  operators:
                  - label: is
                  - label: is not
                  acceptable_values: []
                - key: customer.orders_count
                  type: numeric
                  operators:
                  - label: is more than
                  - label: is at least
                  - label: is less than
                  - label: is at most
                  - label: is
                  - label: is not
                  acceptable_values: []
                - key: price.created_at
                  type: date
                  operators:
                  - label: is after
                  - label: is on or after
                  - label: is before
                  - label: is on or before
                  - label: is
                  - label: is not
                  acceptable_values: []
                - key: price.metadata
                  type: metadata
                  operators:
                  - label: is
                  - label: is not
                  acceptable_values: []
                - key: price.name
                  type: string
                  operators:
                  - label: is
                  - label: is not
                  acceptable_values: []
                - key: price.recurring_count
                  type: numeric
                  operators:
                  - label: is more than
                  - label: is at least
                  - label: is less than
                  - label: is at most
                  - label: is
                  - label: is not
                  acceptable_values: []
                - key: price.recurring_interval
                  type: enum
                  operators:
                  - label: is
                  - label: is not
                  acceptable_values:
                  - day
                  - week
                  - month
                  - year
                - key: price.recurring_period_count
                  type: numeric
                  operators:
                  - label: is more than
                  - label: is at least
                  - label: is less than
                  - label: is at most
                  - label: is
                  - label: is not
                  acceptable_values: []
                - key: price.type
                  type: enum
                  operators:
                  - label: is
                  - label: is not
                  acceptable_values:
                  - one_time
                  - finite_recurring
                  - infinite_recurring
                - key: product.created_at
                  type: date
                  operators:
                  - label: is after
                  - label: is on or after
                  - label: is before
                  - label: is on or before
                  - label: is
                  - label: is not
                  acceptable_values: []
                - key: product.metadata
                  type: metadata
                  operators:
                  - label: is
                  - label: is not
                  acceptable_values: []
                - key: product.name
                  type: string
                  operators:
                  - label: is
                  - label: is not
                  acceptable_values: []
                - key: product.sku
                  type: string
                  operators:
                  - label: is
                  - label: is not
                  acceptable_values: []
                - key: product.slug
                  type: string
                  operators:
                  - label: is
                  - label: is not
                  acceptable_values: []
                - key: product_collection.metadata
                  type: metadata
                  operators:
                  - label: is
                  - label: is not
                  acceptable_values: []
                - key: product_collection.name
                  type: string
                  operators:
                  - label: is
                  - label: is not
                  acceptable_values: []
                - key: product_collection.slug
                  type: string
                  operators:
                  - label: is
                  - label: is not
                  acceptable_values: []
                - key: product_group.metadata
                  type: metadata
                  operators:
                  - label: is
                  - label: is not
                  acceptable_values: []
                - key: product_group.name
                  type: string
                  operators:
                  - label: is
                  - label: is not
                  acceptable_values: []
              schema:
                "$ref": "#/components/schemas/rule_string_schema_response"
  "/v1/shipping_methods":
    get:
      summary: List
      tags:
      - Shipping Methods
      operationId: list_shipping_method
      description: Returns a list of your shipping methods.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/shipping_methods"
                data:
                - id: eaa333c8-d39c-4a5c-ae7c-052c14d0251b
                  object: shipping_method
                  description: Deliver within 1-2 days
                  name: Express
                  created_at: 1758210373
                  updated_at: 1758210373
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Shipping Methods
      operationId: create_shipping_method
      description: Creates a new shipping method.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 540fadd4-6f15-41c5-81e7-2dfdd57638cf
                object: shipping_method
                description:
                name: Standard
                created_at: 1758210373
                updated_at: 1758210373
              schema:
                "$ref": "#/components/schemas/shipping_method_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shipping_method:
                  allOf:
                  - "$ref": "#/components/schemas/shipping_method_body"
              example:
                shipping_method:
                  name: Standard
  "/v1/shipping_methods/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Shipping Methods
      operationId: retrieve_shipping_method
      description: Retrieves details of a specific shipping method.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 02346524-12f3-4201-b9f1-5b4d9fc7a149
                object: shipping_method
                description: Deliver within 1-2 days
                name: Express
                created_at: 1758210373
                updated_at: 1758210373
              schema:
                "$ref": "#/components/schemas/shipping_method_response"
    patch:
      summary: Update
      tags:
      - Shipping Methods
      operationId: update_shipping_method
      description: Updates a specific shipping method.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: '0888c637-5b6b-4eb8-96e8-2cff779873e1'
                object: shipping_method
                description: Deliver within 1-2 days
                name: Fast
                created_at: 1758210373
                updated_at: 1758210373
              schema:
                "$ref": "#/components/schemas/shipping_method_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shipping_method:
                  allOf:
                  - "$ref": "#/components/schemas/shipping_method_body"
              example:
                shipping_method:
                  name: Fast
  "/v1/shipping_profiles":
    get:
      summary: List
      tags:
      - Shipping Profiles
      operationId: list_shipping_profile
      description: Returns a list of your shipping profiles.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/shipping_profiles"
                data:
                - id: 5b779820-1fee-4e77-9b9d-177b0a7f4730
                  object: shipping_profile
                  default: false
                  name: General
                  fallback_shipping_zone:
                  created_at: 1758210373
                  updated_at: 1758210373
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Shipping Profiles
      operationId: create_shipping_profile
      description: Creates a new shipping profile.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: f2912da5-268f-4049-861f-838113e61830
                object: shipping_profile
                default: false
                name: EU
                fallback_shipping_zone:
                created_at: 1758210373
                updated_at: 1758210373
              schema:
                "$ref": "#/components/schemas/shipping_profile_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shipping_profile:
                  allOf:
                  - "$ref": "#/components/schemas/shipping_profile_body"
              example:
                shipping_profile:
                  name: EU
  "/v1/shipping_profiles/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Shipping Profiles
      operationId: retrieve_shipping_profile
      description: Retrieves details of a specific shipping profile.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 5ebff6f5-1094-42fe-b910-756f91edbbf2
                object: shipping_profile
                default: false
                name: General
                fallback_shipping_zone:
                created_at: 1758210373
                updated_at: 1758210373
              schema:
                "$ref": "#/components/schemas/shipping_profile_response"
    patch:
      summary: Update
      tags:
      - Shipping Profiles
      operationId: update_shipping_profile
      description: Updates a specific shipping profile.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 9e270acd-86ca-492d-aa2f-0f347f75785d
                object: shipping_profile
                default: false
                name: India
                fallback_shipping_zone:
                created_at: 1758210373
                updated_at: 1758210373
              schema:
                "$ref": "#/components/schemas/shipping_profile_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shipping_profile:
                  allOf:
                  - "$ref": "#/components/schemas/shipping_profile_body"
              example:
                shipping_profile:
                  name: India
    delete:
      summary: Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Shipping Profiles
      operationId: delete_shipping_profile
      description: Deletes a specific shipping profile.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: e120835d-c2f2-4592-9a80-2e68b691be18
                object: shipping_profile
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/shipping_protocol":
    get:
      summary: Retrieve
      tags:
      - Shipping Protocols
      operationId: retrieve_shipping_protocol
      description: Retrieves details of the current account's shipping protocol.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 65b2d320-2032-4eda-9acc-c83d1db18c52
                object: shipping_protocol
                shipping_enabled: false
                created_at: 1758210373
                updated_at: 1758210373
              schema:
                "$ref": "#/components/schemas/shipping_protocol_response"
    patch:
      summary: Update
      tags:
      - Shipping Protocols
      operationId: update_shipping_protocol
      description: Updates the current account's shipping protocol.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: fcfe24b8-018f-4220-b265-60190ca2d7b6
                object: shipping_protocol
                shipping_enabled: true
                created_at: 1758210373
                updated_at: 1758210373
              schema:
                "$ref": "#/components/schemas/shipping_protocol_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shipping_protocol:
                  allOf:
                  - "$ref": "#/components/schemas/shipping_protocol_body"
              example:
                shipping_protocol:
                  shipping_enabled: true
  "/v1/shipping_rates":
    get:
      summary: List
      tags:
      - Shipping Rates
      operationId: list_shipping_rate
      description: Returns a list of your shipping rates.
      parameters:
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: shipping_zone_ids[]
        in: query
        description: Only return objects that belong to the given shipping zone.
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/shipping_rates"
                data:
                - id: 413b8c20-e56b-4b95-9aee-e77c80c2d504
                  object: shipping_rate
                  amount: 750
                  currency: usd
                  max_amount:
                  min_amount: 0
                  max_weight:
                  min_weight: 0.0
                  rate_type: flat
                  weight_unit: lb
                  shipping_method: 312df722-1d9b-4546-83df-9dd991877976
                  shipping_zone: 319b1fb3-1c4c-4bbc-a39f-a5e2d5d977ad
                  created_at: 1758210373
                  updated_at: 1758210373
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Shipping Rates
      operationId: create_shipping_rate
      description: Creates a new shipping rate.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: cf2337bc-372b-41d2-88f7-aadabf9b60fe
                object: shipping_rate
                amount: 650
                currency: usd
                max_amount: 5000
                min_amount: 0
                max_weight:
                min_weight: 0.0
                rate_type: amount
                weight_unit: lb
                shipping_method: c8008708-8810-457e-b794-c6f5b2610fbc
                shipping_zone: 1dc9ab79-3eb1-4544-a982-f0a2e7f8e671
                created_at: 1758210373
                updated_at: 1758210373
              schema:
                "$ref": "#/components/schemas/shipping_rate_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shipping_rate:
                  allOf:
                  - "$ref": "#/components/schemas/shipping_rate_body"
              example:
                shipping_rate:
                  amount: 650
                  rate_type: amount
                  shipping_zone_id: 1dc9ab79-3eb1-4544-a982-f0a2e7f8e671
                  shipping_method_id: c8008708-8810-457e-b794-c6f5b2610fbc
                  min_amount: 0
                  max_amount: 5000
  "/v1/shipping_rates/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Shipping Rates
      operationId: retrieve_shipping_rate
      description: Retrieves details of a specific shipping rate.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 1c1aa3a3-0532-417b-8782-e609f19ddcf0
                object: shipping_rate
                amount: 750
                currency: usd
                max_amount:
                min_amount: 0
                max_weight:
                min_weight: 0.0
                rate_type: flat
                weight_unit: lb
                shipping_method: 3fd58fe9-ff0a-49b1-be72-561b99a0c9e6
                shipping_zone: e7cb270c-cd03-4496-bb5c-ace995b99da0
                created_at: 1758210373
                updated_at: 1758210373
              schema:
                "$ref": "#/components/schemas/shipping_rate_response"
    patch:
      summary: Update
      tags:
      - Shipping Rates
      operationId: update_shipping_rate
      description: Updates a specific shipping rate.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 05ba8022-ce3f-4b57-83ca-aea1b871977a
                object: shipping_rate
                amount: 950
                currency: usd
                max_amount:
                min_amount: 0
                max_weight:
                min_weight: 0.0
                rate_type: flat
                weight_unit: lb
                shipping_method: 65dc1979-8dc1-444d-bd6d-d228ad9c5d52
                shipping_zone: b5de1363-0c32-4734-bce5-fcd808626f53
                created_at: 1758210374
                updated_at: 1758210374
              schema:
                "$ref": "#/components/schemas/shipping_rate_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shipping_rate:
                  allOf:
                  - "$ref": "#/components/schemas/shipping_rate_body"
              example:
                shipping_rate:
                  amount: 950
    delete:
      summary: Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Shipping Rates
      operationId: delete_shipping_rate
      description: Deletes a specific shipping rate.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: c6191529-19c1-486f-91b8-b9c7034e39c0
                object: shipping_rate
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/shipping_zones":
    get:
      summary: List
      tags:
      - Shipping Zones
      operationId: list_shipping_zone
      description: Returns a list of your shipping zones.
      parameters:
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: shipping_profile_ids[]
        in: query
        description: Only return objects that belong to the given shipping profile.
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/shipping_zones"
                data:
                - id: 75133fac-7cf8-4e6f-8a57-3fa2e5d4849a
                  object: shipping_zone
                  name: USA
                  territories:
                  - country: US
                    states:
                    - NY
                    - CA
                  shipping_profile: df96e905-09c4-439a-a10c-7532a9d96d3f
                  created_at: 1758210374
                  updated_at: 1758210374
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Shipping Zones
      operationId: create_shipping_zone
      description: Creates a new shipping zone.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: da174e44-e734-40b6-ad12-f4086d928407
                object: shipping_zone
                name: Canada
                territories:
                - country: US
                  states:
                  - AK
                shipping_profile: 8ea18067-4cc5-4034-a10b-46ed5b74dc70
                created_at: 1758210374
                updated_at: 1758210374
              schema:
                "$ref": "#/components/schemas/shipping_zone_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shipping_zone:
                  allOf:
                  - "$ref": "#/components/schemas/shipping_zone_body"
              example:
                shipping_zone:
                  name: Canada
                  shipping_profile_id: 8ea18067-4cc5-4034-a10b-46ed5b74dc70
                  territories:
                  - country: US
                    states:
                    - AK
  "/v1/shipping_zones/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Shipping Zones
      operationId: retrieve_shipping_zone
      description: Retrieves details of a specific shipping zone.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 5476b182-c93c-49b8-9887-ba820a2bcd2d
                object: shipping_zone
                name: USA
                territories:
                - country: US
                  states:
                  - NY
                  - CA
                shipping_profile: fc1fc0d0-2129-47bb-8c2e-8faa16e6b58c
                created_at: 1758210374
                updated_at: 1758210374
              schema:
                "$ref": "#/components/schemas/shipping_zone_response"
    patch:
      summary: Update
      tags:
      - Shipping Zones
      operationId: update_shipping_zone
      description: Updates a specific shipping zone.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: f65f9b7e-1db4-4326-b5b4-cb040a1aac71
                object: shipping_zone
                name: USA
                territories: []
                shipping_profile: f996dee1-6d85-4372-911a-b920fc7ee14c
                created_at: 1758210374
                updated_at: 1758210374
              schema:
                "$ref": "#/components/schemas/shipping_zone_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shipping_zone:
                  allOf:
                  - "$ref": "#/components/schemas/shipping_zone_body"
              example:
                shipping_zone:
                  name: USA
    delete:
      summary: Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Shipping Zones
      operationId: delete_shipping_zone
      description: Deletes a specific shipping zone.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: c576c213-bb2b-4aee-b77c-532f755873b4
                object: shipping_zone
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/stats/orders":
    get:
      summary: Orders
      tags:
      - Statistics
      operationId: orders_statistic
      description: Returns order statistics.
      parameters:
      - name: currency[]
        in: query
        description: Only return objects that have the given currencies.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: end_at
        in: query
        description: The end of the date range to query.
        required: true
        schema:
          type: string
      - name: interval
        in: query
        description: The interval to group statistics on â€“ one of `hour`, `day`, `week`,
          `month`, or `year`.
        required: true
        schema:
          type: string
      - name: live_mode
        in: query
        description: Only return objects that are live mode or test mode.
        required: false
        schema:
          type: boolean
      - name: start_at
        in: query
        description: The start of the date range to query.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: stats
                query:
                  currency: usd
                  end_at: 1758239999
                  interval: day
                  live_mode: true
                  start_at: 1757548800
                data:
                - interval_at: 1757548800
                  amount: 0
                  average_amount: 0
                  count: 0
                - interval_at: 1757635200
                  amount: 0
                  average_amount: 0
                  count: 0
                - interval_at: 1757721600
                  amount: 0
                  average_amount: 0
                  count: 0
                - interval_at: 1757808000
                  amount: 0
                  average_amount: 0
                  count: 0
                - interval_at: 1757894400
                  amount: 0
                  average_amount: 0
                  count: 0
                - interval_at: 1757980800
                  amount: 0
                  average_amount: 0
                  count: 0
                - interval_at: 1758067200
                  amount: 0
                  average_amount: 0
                  count: 0
                - interval_at: 1758153600
                  amount: 8700
                  average_amount: 2900
                  count: 3
              schema:
                "$ref": "#/components/schemas/stats_response"
  "/v1/subscription_protocol":
    get:
      summary: Retrieve
      tags:
      - Subscription Protocols
      operationId: retrieve_subscription_protocol
      description: Retrieves details of the current account's subscription protocol.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: eaa642ac-f91d-4c5a-ac8d-898b8bf23250
                object: subscription_protocol
                bypass_duplicate_trials: false
                cancel_behavior: pending
                cancel_window_enabled: false
                cancel_window_days: 14
                default_payment_method_detach_enabled: false
                default_payment_method_fallback_enabled: true
                downgrade_behavior: pending
                payment_retry_window_weeks: 1
                preservation_enabled: false
                preservation_locales:
                  reasons_title: We're sad to see you go
                  reasons_description: Before you cancel, please let us know the reason
                    you're leaving.
                  skip_link: Never mind, I don't want to cancel.
                  preserve_title: Take {{ amount }} off your next payment?
                  preserve_description: We'd be happy to offer you  {{ amount }} off
                    your next payment if you'd stay with us.
                  preserve_button: Yes, I'll take it.
                  cancel_link: No thanks, I'd still like to cancel.
                remind_at_period_percent_remaining: 10
                remind_after_days:
                require_upfront_payment_method: true
                revoke_purchases_on_past_due: false
                upgrade_behavior: immediate
                preservation_coupon: cb66219c-f52e-453b-a33a-21751d5eb1ba
                created_at: 1758210375
                updated_at: 1758210375
              schema:
                "$ref": "#/components/schemas/subscription_protocol_response"
    patch:
      summary: Update
      tags:
      - Subscription Protocols
      operationId: update_subscription_protocol
      description: Updates the current account's subscription protocol.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: e00e06ac-ffc7-472f-bbb9-480d81760431
                object: subscription_protocol
                bypass_duplicate_trials: false
                cancel_behavior: pending
                cancel_window_enabled: false
                cancel_window_days: 14
                default_payment_method_detach_enabled: false
                default_payment_method_fallback_enabled: true
                downgrade_behavior: immediate
                payment_retry_window_weeks: 1
                preservation_enabled: false
                preservation_locales:
                  reasons_title: We're sad to see you go
                  reasons_description: Before you cancel, please let us know the reason
                    you're leaving.
                  skip_link: Never mind, I don't want to cancel.
                  preserve_title: Take {{ amount }} off your next payment?
                  preserve_description: We'd be happy to offer you  {{ amount }} off
                    your next payment if you'd stay with us.
                  preserve_button: Yes, I'll take it.
                  cancel_link: No thanks, I'd still like to cancel.
                remind_at_period_percent_remaining: 10
                remind_after_days:
                require_upfront_payment_method: true
                revoke_purchases_on_past_due: false
                upgrade_behavior: immediate
                preservation_coupon: bac61f5a-7eef-498e-b987-2a289dce01a1
                created_at: 1758210375
                updated_at: 1758210375
              schema:
                "$ref": "#/components/schemas/subscription_protocol_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subscription_protocol:
                  allOf:
                  - "$ref": "#/components/schemas/subscription_protocol_body"
              example:
                subscription_protocol:
                  downgrade_behavior: immediate
  "/v1/subscriptions":
    get:
      summary: List
      tags:
      - Subscriptions
      operationId: list_subscription
      description: Returns a list of your subscriptions.
      parameters:
      - name: checkout_ids[]
        in: query
        description: Only return objects that belong to the given checkouts.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: customer_ids[]
        in: query
        description: Only return objects that belong to the given customers.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: finite
        in: query
        description: Only return subscriptions that are finite or not.
        required: false
        schema:
          type: boolean
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: live_mode
        in: query
        description: Only return objects that are live mode or test mode.
        required: false
        schema:
          type: boolean
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: price_ids[]
        in: query
        description: Only return objects that belong to the given prices.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: product_ids[]
        in: query
        description: Only return objects that belong to the given products.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: purchase_ids[]
        in: query
        description: Only return objects that belong to the given purchases.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: query
        in: query
        description: The query to be used for full text search of this collection.
        required: false
        schema:
          type: string
      - name: status[]
        in: query
        description: Only return objects with the given status.
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/subscriptions"
                data:
                - id: 6d26df1e-3b0f-44af-927b-7a5de1cc1c5d
                  object: subscription
                  ad_hoc_amount:
                  affiliation_expires_at:
                  cancel_at_period_end: false
                  currency: usd
                  current_period_end_at: 1760802375
                  current_period_start_at: 1758210375
                  ended_at:
                  finite: false
                  last_renewal_reminder_sent_at:
                  live_mode: true
                  manual_payment: false
                  metadata: {}
                  pending_update: {}
                  price_readonly: false
                  portal_url: http://app.example.com/portal_redirect/subscriptions/6d26df1e-3b0f-44af-927b-7a5de1cc1c5d
                  quantity: 1
                  remaining_period_count:
                  restart_on_completed: false
                  restore_at:
                  subtotal_amount: 2900
                  status: active
                  tax_enabled: false
                  trial_end_at:
                  trial_start_at:
                  variant_options:
                  affiliation:
                  current_cancellation_act:
                  current_period: bdbc07a7-a50d-4b20-9c8c-cdf8d0efa63d
                  customer: 757f7140-eb67-4181-b66c-28cb10d3acd1
                  discount:
                  manual_payment_method:
                  payment_method: 304d7c5a-fddc-498d-9f6c-8e247e9228b7
                  price: fe63249e-c97d-4592-860b-a8fffac603a4
                  purchase: 592681f5-fe06-47bf-9778-2a8cb29ed4cb
                  shipping_method:
                  variant:
                  created_at: 1758210375
                  updated_at: 1758210375
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Subscriptions
      operationId: create_subscription
      description: Creates a new subscription.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: b785682b-21bf-4659-9e3e-e295a9e5e2d2
                object: subscription
                ad_hoc_amount:
                affiliation_expires_at:
                cancel_at_period_end: false
                currency: usd
                current_period_end_at: 1760802376
                current_period_start_at: 1758210376
                ended_at:
                finite: false
                last_renewal_reminder_sent_at:
                live_mode: true
                manual_payment: false
                metadata: {}
                pending_update: {}
                price_readonly: false
                portal_url: http://app.example.com/portal_redirect/subscriptions/b785682b-21bf-4659-9e3e-e295a9e5e2d2
                quantity: 1
                remaining_period_count:
                restart_on_completed: false
                restore_at:
                subtotal_amount: 2900
                status: incomplete
                tax_enabled: false
                trial_end_at:
                trial_start_at:
                variant_options:
                affiliation:
                current_cancellation_act:
                current_period: ddb4365b-5e7a-4db7-a9db-a7dd97df9083
                customer: 92403f8c-6222-40bd-bce6-d941abbea5fd
                discount:
                manual_payment_method:
                payment_method: ffaa5ee4-57ad-4200-8af1-0bf9198ab0e2
                price: f94aa559-d15b-45ed-b2f3-91b129e2c298
                purchase: 5dd49763-94e2-458d-b3bd-81635bc5b4bb
                shipping_method:
                variant:
                created_at: 1758210376
                updated_at: 1758210376
              schema:
                "$ref": "#/components/schemas/subscription_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subscription:
                  allOf:
                  - "$ref": "#/components/schemas/subscription_body"
              example:
                subscription:
                  customer: 92403f8c-6222-40bd-bce6-d941abbea5fd
                  price: f94aa559-d15b-45ed-b2f3-91b129e2c298
                  payment_method: ffaa5ee4-57ad-4200-8af1-0bf9198ab0e2
  "/v1/subscriptions/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Subscriptions
      operationId: retrieve_subscription
      description: Retrieves details of a specific subscription.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 2637bca5-2487-4c2c-bd9e-b8cf5a9abc05
                object: subscription
                ad_hoc_amount:
                affiliation_expires_at:
                cancel_at_period_end: false
                currency: usd
                current_period_end_at: 1760802376
                current_period_start_at: 1758210376
                ended_at:
                finite: false
                last_renewal_reminder_sent_at:
                live_mode: true
                manual_payment: false
                metadata: {}
                pending_update: {}
                price_readonly: false
                portal_url: http://app.example.com/portal_redirect/subscriptions/2637bca5-2487-4c2c-bd9e-b8cf5a9abc05
                quantity: 1
                remaining_period_count:
                restart_on_completed: false
                restore_at:
                subtotal_amount: 2900
                status: active
                tax_enabled: false
                trial_end_at:
                trial_start_at:
                variant_options:
                affiliation:
                current_cancellation_act:
                current_period: '09fba4c1-9534-4378-bc45-bf2cc419942e'
                customer: 3e8d65bf-e155-49eb-b8a2-8d1d76c2cc6e
                discount:
                manual_payment_method:
                payment_method: ee66b1b9-6e51-4cf8-9d3d-0fa7da909a02
                price: cdcad123-df1b-4eb2-b8f8-0acf98639c1b
                purchase: 7f4bffad-fdd8-48d2-89c9-5d2980f4cb45
                shipping_method:
                variant:
                created_at: 1758210376
                updated_at: 1758210376
              schema:
                "$ref": "#/components/schemas/subscription_response"
    patch:
      summary: Update
      tags:
      - Subscriptions
      operationId: update_subscription
      description: Updates a specific subscription.
      parameters:
      - name: refresh_price_version
        in: query
        description: When set to true the price that is associated with the subscription
          will be refreshed to reference the most recent version.
        required: false
        schema:
          type: boolean
      - name: skip_product_group_validation
        in: query
        description: When set to `true` you can update a subscription's price regardless
          of the product group it belongs to.
        required: false
        schema:
          type: boolean
      - name: skip_proration
        in: query
        description: When set to `true` the next period generated during an immediate
          update will not be prorated.
        required: false
        schema:
          type: boolean
      - name: update_behavior
        in: query
        description: The strategy to use when updating this subscription â€“ one of
          `immediate` or `pending`. If no value is provided, the corresponding subscription
          protocol `downgrade_behavior` or `upgrade_behavior` will be be used.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: c4d3a8fb-453a-4d09-91f1-002d7b7fc55a
                object: subscription
                ad_hoc_amount:
                affiliation_expires_at:
                cancel_at_period_end: false
                currency: usd
                current_period_end_at: 1760802376
                current_period_start_at: 1758210376
                ended_at:
                finite: false
                last_renewal_reminder_sent_at:
                live_mode: true
                manual_payment: false
                metadata: {}
                pending_update: {}
                price_readonly: false
                portal_url: http://app.example.com/portal_redirect/subscriptions/c4d3a8fb-453a-4d09-91f1-002d7b7fc55a
                quantity: 2
                remaining_period_count:
                restart_on_completed: false
                restore_at:
                subtotal_amount: 5800
                status: active
                tax_enabled: false
                trial_end_at:
                trial_start_at:
                variant_options:
                affiliation:
                current_cancellation_act:
                current_period: 8f57e6a4-fa33-4242-bd0a-51bdb069c907
                customer: f394f4e7-fd43-4e39-b5e5-ccfed05c0ea5
                discount:
                manual_payment_method:
                payment_method: 9e5fe018-041a-4536-ab82-5235859ef906
                price: 17e6e9e7-5c22-4274-9cb8-aea88529b418
                purchase: e220868e-1e11-42fb-85c9-3ab8d29f0726
                shipping_method:
                variant:
                created_at: 1758210376
                updated_at: 1758210376
              schema:
                "$ref": "#/components/schemas/subscription_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subscription:
                  allOf:
                  - "$ref": "#/components/schemas/subscription_body"
              example:
                subscription:
                  quantity: 2
  "/v1/subscriptions/{id}/cancel":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    patch:
      summary: Cancel/Pause
      tags:
      - Subscriptions
      operationId: cancel/pause_subscription
      description: Cancels a specific subscription. If a `restore_at` value is provided,
        the subscription will be effectively "paused" until that date when it will
        automatically renew.
      parameters:
      - name: cancel_behavior
        in: query
        description: The strategy to use when canceling this subscription â€“ one of
          `immediate` or `pending`. If no value is provided, the subscription protocol
          `cancel_behavior` will be be used.
        required: false
        schema:
          type: string
      - name: cancellation_act[cancellation_reason_id]
        in: query
        description: The cancellation reason that should be set on the cancellation
          act when the subscription is canceled or preserved.
        required: false
        schema:
          type: string
      - name: cancellation_act[comment]
        in: query
        description: The comment that should be set on the cancellation act when the
          subscription is canceled or preserved.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 9cfd59fe-9aeb-482a-a87e-4f9234421a93
                object: subscription
                ad_hoc_amount:
                affiliation_expires_at:
                cancel_at_period_end: true
                currency: usd
                current_period_end_at: 1760802377
                current_period_start_at: 1758210377
                ended_at:
                finite: false
                last_renewal_reminder_sent_at:
                live_mode: true
                manual_payment: false
                metadata: {}
                pending_update: {}
                price_readonly: false
                portal_url: http://app.example.com/portal_redirect/subscriptions/9cfd59fe-9aeb-482a-a87e-4f9234421a93
                quantity: 1
                remaining_period_count:
                restart_on_completed: false
                restore_at: 1763480777
                subtotal_amount: 2900
                status: active
                tax_enabled: false
                trial_end_at:
                trial_start_at:
                variant_options:
                affiliation:
                current_cancellation_act: 37f6b5f9-d966-4284-a7c2-1f1925a0fe3a
                current_period: 8f607d1a-b2ef-4592-aa03-6de38ed14b71
                customer: 219ab38f-44ca-45f4-8ad9-4069b78d149b
                discount:
                manual_payment_method:
                payment_method: 6b7d4b2f-9981-4fee-9611-4cb14a24b189
                price: e7cb6f39-a9db-4cb5-9fec-2b56a6b42525
                purchase: 1282665a-8387-4e33-8508-07e8bace48c2
                shipping_method:
                variant:
                created_at: 1758210377
                updated_at: 1758210377
              schema:
                "$ref": "#/components/schemas/subscription_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subscription:
                  allOf:
                  - "$ref": "#/components/schemas/subscription_cancel_body"
              example:
                subscription:
                  restore_at: 2025-11-18 15:46:17 UTC
  "/v1/subscriptions/{id}/complete":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    patch:
      summary: Complete
      tags:
      - Subscriptions
      operationId: complete_subscription
      description: Completes a specific subscription.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 24f929ba-daa4-4936-a050-84c730de39dd
                object: subscription
                ad_hoc_amount:
                affiliation_expires_at:
                cancel_at_period_end: false
                currency: usd
                current_period_end_at: 1760802377
                current_period_start_at: 1758210377
                ended_at: 1758210377
                finite: true
                last_renewal_reminder_sent_at:
                live_mode: true
                manual_payment: false
                metadata: {}
                pending_update: {}
                price_readonly: true
                portal_url: http://app.example.com/portal_redirect/subscriptions/24f929ba-daa4-4936-a050-84c730de39dd
                quantity: 1
                remaining_period_count: 5
                restart_on_completed: false
                restore_at:
                subtotal_amount: 2900
                status: completed
                tax_enabled: false
                trial_end_at:
                trial_start_at:
                variant_options:
                affiliation:
                current_cancellation_act:
                current_period: 70d09f48-cdfc-4f3c-8517-f98e93aab9c8
                customer: f4d81ad8-a41c-4b45-889e-e07d1ac0f9ac
                discount:
                manual_payment_method:
                payment_method: ad9a619a-d89f-4e14-93e6-a85afe169421
                price: 126f8d24-c02e-4473-bc5e-c5c8b0fb55b9
                purchase: 6b853fed-b9b3-4c39-ba09-d795d0a9b66e
                shipping_method:
                variant:
                created_at: 1758210377
                updated_at: 1758210377
              schema:
                "$ref": "#/components/schemas/subscription_response"
  "/v1/subscriptions/{id}/pay_off":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    patch:
      summary: Pay Off
      tags:
      - Subscriptions
      operationId: pay_off_subscription
      description: Pays off all remaining periods for a specific subscription.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: f1124299-fb54-4058-beb6-11920a758e0b
                object: subscription
                ad_hoc_amount:
                affiliation_expires_at:
                cancel_at_period_end: false
                currency: usd
                current_period_end_at: 1758210377
                current_period_start_at: 1758210377
                ended_at:
                finite: true
                last_renewal_reminder_sent_at:
                live_mode: true
                manual_payment: false
                metadata: {}
                pending_update: {}
                price_readonly: true
                portal_url: http://app.example.com/portal_redirect/subscriptions/f1124299-fb54-4058-beb6-11920a758e0b
                quantity: 1
                remaining_period_count: 5
                restart_on_completed: false
                restore_at:
                subtotal_amount: 2900
                status: active
                tax_enabled: false
                trial_end_at:
                trial_start_at:
                variant_options:
                affiliation:
                current_cancellation_act:
                current_period: 8ec04cf6-8c1a-497c-a785-f516d831e7d9
                customer: e60aef7f-c37e-4634-bed3-b2136d21e663
                discount:
                manual_payment_method:
                payment_method: 9e0560e6-7fd1-47f9-8a16-6cfa07796cce
                price: 3b81101f-1303-40a1-9647-2935d87d8c8d
                purchase: bc7e0ba0-5ecc-436b-b00d-632826fa3976
                shipping_method:
                variant:
                created_at: 1758210377
                updated_at: 1758210377
              schema:
                "$ref": "#/components/schemas/subscription_response"
  "/v1/subscriptions/{id}/preserve":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    patch:
      summary: Preserve
      tags:
      - Subscriptions
      operationId: preserve_subscription
      description: Preserves a specific subscription.
      parameters:
      - name: cancellation_act[cancellation_reason_id]
        in: query
        description: The cancellation reason that should be set on the cancellation
          act when the subscription is canceled or preserved.
        required: false
        schema:
          type: string
      - name: cancellation_act[comment]
        in: query
        description: The comment that should be set on the cancellation act when the
          subscription is canceled or preserved.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: da5cc5f1-abbb-4897-8af9-2b63f8909751
                object: subscription
                ad_hoc_amount:
                affiliation_expires_at:
                cancel_at_period_end: false
                currency: usd
                current_period_end_at: 1760802378
                current_period_start_at: 1758210378
                ended_at:
                finite: false
                last_renewal_reminder_sent_at:
                live_mode: true
                manual_payment: false
                metadata: {}
                pending_update: {}
                price_readonly: false
                portal_url: http://app.example.com/portal_redirect/subscriptions/da5cc5f1-abbb-4897-8af9-2b63f8909751
                quantity: 1
                remaining_period_count:
                restart_on_completed: false
                restore_at:
                subtotal_amount: 2900
                status: active
                tax_enabled: false
                trial_end_at:
                trial_start_at:
                variant_options:
                affiliation:
                current_cancellation_act: 6848d70d-9c21-4c0e-8a15-2d08d3df6fb9
                current_period: d2ae0a8a-4803-4665-818e-7ec0f8a08bb1
                customer: 8156d2b1-db38-42d2-b313-97a72f538d41
                discount:
                manual_payment_method:
                payment_method: 3610a9bc-5b4a-4c94-9ecc-f8b1e49c77ce
                price: e5a2d70b-1159-4b7a-bf4a-e31d7c3a1575
                purchase: 1d74c87e-4271-4278-b631-a838c369d152
                shipping_method:
                variant:
                created_at: 1758210378
                updated_at: 1758210378
              schema:
                "$ref": "#/components/schemas/subscription_response"
  "/v1/subscriptions/{id}/restore":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    patch:
      summary: Restore
      tags:
      - Subscriptions
      operationId: restore_subscription
      description: Restores a specific subscription.
      parameters:
      - name: refresh_price_version
        in: query
        description: When set to true the price that is associated with the subscription
          will be refreshed to reference the most recent version.
        required: false
        schema:
          type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 0a32a812-5b70-4369-8ef8-61c45a10a7b5
                object: subscription
                ad_hoc_amount:
                affiliation_expires_at:
                cancel_at_period_end: false
                currency: usd
                current_period_end_at: 1760802378
                current_period_start_at: 1758210378
                ended_at:
                finite: false
                last_renewal_reminder_sent_at:
                live_mode: true
                manual_payment: false
                metadata: {}
                pending_update: {}
                price_readonly: false
                portal_url: http://app.example.com/portal_redirect/subscriptions/0a32a812-5b70-4369-8ef8-61c45a10a7b5
                quantity: 1
                remaining_period_count:
                restart_on_completed: false
                restore_at: 1758210378
                subtotal_amount: 2900
                status: active
                tax_enabled: false
                trial_end_at:
                trial_start_at:
                variant_options:
                affiliation:
                current_cancellation_act:
                current_period: d65087fe-f327-4658-a8a6-c95d4f309d89
                customer: 0557f60a-a58d-449e-96c4-e2f65a0d9e6d
                discount:
                manual_payment_method:
                payment_method: 95317d08-aa9d-4a4e-8397-d17bb3be3bd8
                price: 41e856b7-a6e7-4a7a-9adb-a553ed27ea7b
                purchase: 2b02c4a9-ed4a-43ed-9363-a8f731592181
                shipping_method:
                variant:
                created_at: 1758210378
                updated_at: 1758210378
              schema:
                "$ref": "#/components/schemas/subscription_response"
  "/v1/subscriptions/{id}/upcoming_period":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    patch:
      summary: Upcoming Period
      tags:
      - Subscriptions
      operationId: upcoming_period_subscription
      description: Generates a preview of the upcoming period.
      parameters:
      - name: pay_off
        in: query
        description: When set to `true` the upcoming period will simulate paying off
          the subscription.
        required: false
        schema:
          type: boolean
      - name: refresh_price_version
        in: query
        description: When set to true the price that is associated with the subscription
          will be refreshed to reference the most recent version.
        required: false
        schema:
          type: boolean
      - name: skip_product_group_validation
        in: query
        description: When set to `true` you can update a subscription's price regardless
          of the product group it belongs to.
        required: false
        schema:
          type: boolean
      - name: skip_proration
        in: query
        description: When set to `true` the next period generated during an immediate
          update will not be prorated.
        required: false
        schema:
          type: boolean
      - name: update_behavior
        in: query
        description: The strategy to use when updating this subscription â€“ one of
          `immediate` or `pending`. If no value is provided, the corresponding subscription
          protocol `downgrade_behavior` or `upgrade_behavior` will be be used.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 6bc0fc7a-8325-4ceb-af53-0af9ed7a4d6e
                object: period
                ad_hoc_amount:
                end_at: 1760802378
                next_payment_retry_at:
                payment_retry_count: 0
                payoff: false
                quantity: 2
                renewal: false
                renewal_reminder_sent_at:
                restoral: false
                skip_proration: false
                start_at: 1758210378
                status: draft
                checkout: 313910dd-e3dc-406c-8952-7d620c377762
                price: efb73db0-c419-4d65-87c3-ce7e8fb7c9ba
                subscription: 506ca6cf-1a30-4d9b-8fb5-cc890c7f34cb
                variant:
                created_at: 1758210378
                updated_at: 1758210378
              schema:
                "$ref": "#/components/schemas/period_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subscription:
                  allOf:
                  - "$ref": "#/components/schemas/subscription_body"
              example:
                subscription:
                  quantity: 2
  "/v1/swaps":
    get:
      summary: List
      tags:
      - Swaps
      operationId: list_swap
      description: Returns a list of your swaps.
      parameters:
      - name: archived
        in: query
        description: Only return objects that are archived or not archived.
        required: false
        schema:
          type: boolean
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: price_ids[]
        in: query
        description: Only return objects that belong to the given prices.
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/swaps"
                data:
                - id: dbda2c0f-cd65-41af-a5e3-6348a955be87
                  object: swap
                  archived: false
                  archived_at:
                  description: Swap this price for another
                  metadata: {}
                  price: 3b7a734e-5bd5-4a4a-92f8-f2197073b582
                  swap_price: bbe29b18-d167-4977-a0c7-f3b1bb29ae76
                  discarded_at:
                  created_at: 1758210378
                  updated_at: 1758210378
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Swaps
      operationId: create_swap
      description: Creates a new swap.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 963e18ad-502e-4e2e-84f7-c409c2d0e27a
                object: swap
                archived: false
                archived_at:
                description: Swap and save 20%!
                metadata: {}
                price: a3c71de7-c6f0-4dd2-a3f5-5b9cae6227e4
                swap_price: e4cf3dec-2b04-4a30-bc3e-eb5eb9d481af
                discarded_at:
                created_at: 1758210379
                updated_at: 1758210379
              schema:
                "$ref": "#/components/schemas/swap_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                swap:
                  allOf:
                  - "$ref": "#/components/schemas/swap_body"
              example:
                swap:
                  description: Swap and save 20%!
                  price: a3c71de7-c6f0-4dd2-a3f5-5b9cae6227e4
                  swap_price: e4cf3dec-2b04-4a30-bc3e-eb5eb9d481af
  "/v1/swaps/{id}":
    get:
      summary: Retrieve
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Swaps
      operationId: retrieve_swap
      description: Retrieves details of a specific swap.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 28e307d9-fab2-4ccf-a0bd-e7d6117e9cc9
                object: swap
                archived: false
                archived_at:
                description: Swap this price for another
                metadata: {}
                price: 20927b6d-5686-4898-a6b0-bf069680d69d
                swap_price: e40957e2-b4a9-49b0-831a-8f54fca68de7
                discarded_at:
                created_at: 1758210379
                updated_at: 1758210379
              schema:
                "$ref": "#/components/schemas/swap_response"
    patch:
      summary: Update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Swaps
      operationId: update_swap
      description: Updates a specific swap.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 61c130b8-e6d5-4085-b5b5-bc673d741da0
                object: swap
                archived: false
                archived_at:
                description: Swap and save 40%!
                metadata: {}
                price: a4390b65-40d9-45a5-8055-0dc796d4431d
                swap_price: 1055ad30-52fb-4ffe-9dd6-45b2c3255dd7
                discarded_at:
                created_at: 1758210379
                updated_at: 1758210379
              schema:
                "$ref": "#/components/schemas/swap_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                swap:
                  allOf:
                  - "$ref": "#/components/schemas/swap_body"
              example:
                swap:
                  description: Swap and save 40%!
    delete:
      summary: Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Swaps
      operationId: delete_swap
      description: Deletes a specific swap.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: af2808fb-9882-4278-8f0d-e88a5b35ff8e
                object: swap
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/tax_overrides":
    get:
      summary: List
      tags:
      - Tax Overrides
      operationId: list_tax_override
      description: Returns a list of your tax overrides.
      parameters:
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: shipping
        in: query
        description: Only return objects that are for shipping or not.
        required: false
        schema:
          type: boolean
      - name: tax_region[]
        in: query
        description: Only return objects in the given tax region.
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/tax_overrides"
                data:
                - id: d16d0e33-9ca0-49b2-b47e-99bc2c997d35
                  object: tax_override
                  shipping: false
                  rate: 7.5
                  product_collection: bedb46a1-a33f-464d-918f-16ddd7c41abe
                  tax_zone: eafa6c91-0dfa-4a0a-9c52-6140a4135f95
                  created_at: 1758210379
                  updated_at: 1758210379
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Tax Overrides
      operationId: create_tax_override
      description: Creates a new tax override.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: f408df1d-8a0e-4cec-9224-ebe1a10ebc68
                object: tax_override
                shipping: false
                rate: 10.0
                product_collection: 6500c50c-2239-41ff-a515-0818ede7a4a9
                tax_zone: 6127a1ba-10f7-4050-84e2-cf2e1986d3c6
                created_at: 1758210379
                updated_at: 1758210379
              schema:
                "$ref": "#/components/schemas/tax_override_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tax_override:
                  allOf:
                  - "$ref": "#/components/schemas/tax_override_body"
              example:
                tax_override:
                  tax_zone: 6127a1ba-10f7-4050-84e2-cf2e1986d3c6
                  product_collection: 6500c50c-2239-41ff-a515-0818ede7a4a9
                  rate: 10
  "/v1/tax_overrides/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Tax Overrides
      operationId: retrieve_tax_override
      description: Retrieves details of a specific tax override.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 5793956a-7208-47bc-9761-af4b7b0334b2
                object: tax_override
                shipping: false
                rate: 7.5
                product_collection: 7ca4381e-a016-40af-b115-60bc5411b0cb
                tax_zone: b34b0159-ca9f-4947-86c3-340a5839918e
                created_at: 1758210379
                updated_at: 1758210379
              schema:
                "$ref": "#/components/schemas/tax_override_response"
    patch:
      summary: Update
      tags:
      - Tax Overrides
      operationId: update_tax_override
      description: Updates a specific tax override.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 4ce3bb70-f5dd-4188-81b8-372ae8045c22
                object: tax_override
                shipping: false
                rate: 5.0
                product_collection: 461a3555-0294-4da4-ae7e-b7f3920f0ab1
                tax_zone: a0a757bd-8de2-4968-b6d0-562e1ebd14f6
                created_at: 1758210379
                updated_at: 1758210379
              schema:
                "$ref": "#/components/schemas/tax_override_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tax_override:
                  allOf:
                  - "$ref": "#/components/schemas/tax_override_body"
              example:
                tax_override:
                  rate: 5
    delete:
      summary: Delete
      tags:
      - Tax Overrides
      operationId: delete_tax_override
      description: Deletes a specific tax override.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: efd3c7ad-3cf6-4ad3-a3d1-b6ea5699994c
                object: tax_override
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/tax_protocol":
    get:
      summary: Retrieve
      tags:
      - Tax Protocols
      operationId: retrieve_tax_protocol
      description: Retrieves details of the current account's tax protocol.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: a0a1a650-eff7-41bd-a7bb-253f54bb300f
                object: tax_protocol
                ca_tax_enabled: false
                eu_micro_exemption_enabled: false
                eu_tax_enabled: false
                eu_vat_required: false
                eu_vat_unverified_behavior: error
                eu_vat_local_reverse_charge: false
                tax_behavior: exclusive
                tax_enabled: false
                default_tax_enabled: false
                default_rate:
                address: 665d31c0-9f27-40af-ac8d-ddff338a5f2c
                ca_tax_identifier:
                eu_tax_identifier:
                created_at: 1758210379
                updated_at: 1758210379
              schema:
                "$ref": "#/components/schemas/tax_protocol_response"
    patch:
      summary: Update
      tags:
      - Tax Protocols
      operationId: update_tax_protocol
      description: Updates the current account's tax protocol.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: fb95287d-c8ae-4760-9b67-d563f79de8ea
                object: tax_protocol
                ca_tax_enabled: false
                eu_micro_exemption_enabled: false
                eu_tax_enabled: false
                eu_vat_required: false
                eu_vat_unverified_behavior: error
                eu_vat_local_reverse_charge: false
                tax_behavior: exclusive
                tax_enabled: true
                default_tax_enabled: false
                default_rate:
                address: a8a166c2-a1a0-4dad-a08c-8471f5920329
                ca_tax_identifier:
                eu_tax_identifier:
                created_at: 1758210379
                updated_at: 1758210379
              schema:
                "$ref": "#/components/schemas/tax_protocol_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tax_protocol:
                  allOf:
                  - "$ref": "#/components/schemas/tax_protocol_body"
              example:
                tax_protocol:
                  tax_enabled: true
  "/v1/tax_registrations":
    get:
      summary: List
      tags:
      - Tax Registrations
      operationId: list_tax_registration
      description: Returns a list of your tax registrations.
      parameters:
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: tax_region[]
        in: query
        description: Only return objects in the given tax region.
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/tax_registrations"
                data:
                - id: e2e040e9-16b5-4b9b-b825-11a3b75a2c75
                  object: tax_registration
                  label:
                  manual_rate: 5.5
                  tax_identifier:
                  tax_zone: 3acac678-c7a3-4955-954b-fe78908b0d8e
                  created_at: 1758210379
                  updated_at: 1758210379
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Tax Registrations
      operationId: create_tax_registration
      description: Creates a new tax registration.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: aa7c6653-a842-4b10-8227-66bfffa9b4b6
                object: tax_registration
                label:
                manual_rate: 10.0
                tax_identifier:
                tax_zone: 68993d95-d6dd-44a3-a2e9-0515233962bb
                created_at: 1758210380
                updated_at: 1758210380
              schema:
                "$ref": "#/components/schemas/tax_registration_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tax_registration:
                  allOf:
                  - "$ref": "#/components/schemas/tax_registration_body"
              example:
                tax_registration:
                  tax_zone: 68993d95-d6dd-44a3-a2e9-0515233962bb
                  manual_rate: 10
  "/v1/tax_registrations/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Tax Registrations
      operationId: retrieve_tax_registration
      description: Retrieves details of a specific tax registration.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 6927e036-ece1-4eb9-971c-0f0e5700f0d2
                object: tax_registration
                label:
                manual_rate: 5.5
                tax_identifier:
                tax_zone: 715d72cc-05d1-4183-ad50-91b51089b9bc
                created_at: 1758210380
                updated_at: 1758210380
              schema:
                "$ref": "#/components/schemas/tax_registration_response"
    patch:
      summary: Update
      tags:
      - Tax Registrations
      operationId: update_tax_registration
      description: Updates a specific tax registration.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 0362a3e3-1b06-44b5-880c-d6815f74ebdb
                object: tax_registration
                label:
                manual_rate: 5.5
                tax_identifier: 29afebb1-d89f-415f-8b6b-37cc9adca879
                tax_zone: 3bad1044-c1ef-4f53-8928-c2efbbe6fcb3
                created_at: 1758210380
                updated_at: 1758210380
              schema:
                "$ref": "#/components/schemas/tax_registration_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tax_registration:
                  allOf:
                  - "$ref": "#/components/schemas/tax_registration_body"
              example:
                tax_registration:
                  tax_identifier:
                    number_type: au_abn
                    number: '51824753556'
    delete:
      summary: Delete
      tags:
      - Tax Registrations
      operationId: delete_tax_registration
      description: Deletes a specific tax registration.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 99a9f423-af4c-498f-a966-1226f94eb0d4
                object: tax_registration
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/tax_zones":
    get:
      summary: List
      tags:
      - Tax Zones
      operationId: list_tax_zone
      description: Returns a list of all available tax zones.
      parameters:
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: tax_region[]
        in: query
        description: Only return objects in the given tax region.
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 0
                  limit: 20
                  page: 1
                  url: "/v1/tax_zones"
                data: []
              schema:
                "$ref": "#/components/schemas/list_response"
  "/v1/trackings":
    get:
      summary: List
      tags:
      - Trackings
      operationId: list_tracking
      description: Returns a list of your trackings.
      parameters:
      - name: fulfillment_ids[]
        in: query
        description: Only return objects that belong to the given fulfillments.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/trackings"
                data:
                - id: 023e9355-f953-4fe5-a7e3-13c97f751321
                  object: tracking
                  courier_name: UPS
                  number: 1Z879E930346834440
                  url: https://wwwapps.ups.com/WebTracking/track?track=yes&trackNums=1Z879E930346834440
                  fulfillment: 1440789d-b1a9-47c6-822a-7b7a7f15e0df
                  created_at: 1758210380
                  updated_at: 1758210380
              schema:
                "$ref": "#/components/schemas/list_response"
  "/v1/trackings/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Trackings
      operationId: retrieve_tracking
      description: Retrieves details of a specific tracking.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 7254269e-78ce-46e6-82aa-ce102fb01b56
                object: tracking
                courier_name: UPS
                number: 1Z879E930346834440
                url: https://wwwapps.ups.com/WebTracking/track?track=yes&trackNums=1Z879E930346834440
                fulfillment: 5c278ac0-723f-4783-aa5d-518dfdba8d82
                created_at: 1758210381
                updated_at: 1758210381
              schema:
                "$ref": "#/components/schemas/tracking_response"
  "/v1/upsell_funnels":
    get:
      summary: List
      tags:
      - Upsell Funnels
      operationId: list_upsell_funnel
      description: Returns a list of your upsell funnels.
      parameters:
      - name: archived
        in: query
        description: Only return objects that are archived or not archived.
        required: false
        schema:
          type: boolean
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/upsell_funnels"
                data:
                - id: 2010aed4-dafa-4e64-a678-69f6f0d53602
                  object: upsell_funnel
                  archived: false
                  archived_at:
                  enabled: false
                  filter_match_type:
                  filter_price_ids: []
                  filter_product_ids: []
                  metadata: {}
                  name: Super Upsell Funnel
                  priority: 5
                  discarded_at:
                  created_at: 1758210381
                  updated_at: 1758210381
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Upsell Funnels
      operationId: create_upsell_funnel
      description: Creates a new upsell funnel.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: d121db92-b329-4725-b423-4f90e5b2c096
                object: upsell_funnel
                archived: false
                archived_at:
                enabled: false
                filter_match_type:
                filter_price_ids: []
                filter_product_ids: []
                metadata: {}
                name: Awesome Upsell
                priority: 5
                discarded_at:
                created_at: 1758210381
                updated_at: 1758210381
              schema:
                "$ref": "#/components/schemas/upsell_funnel_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                upsell_funnel:
                  allOf:
                  - "$ref": "#/components/schemas/upsell_funnel_body"
              example:
                upsell_funnel:
                  name: Awesome Upsell
  "/v1/upsell_funnels/{id}":
    get:
      summary: Retrieve
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Upsell Funnels
      operationId: retrieve_upsell_funnel
      description: Retrieves details of a specific upsell funnel.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 31f4bd83-c94d-49e2-80a2-1d79332fd501
                object: upsell_funnel
                archived: false
                archived_at:
                enabled: false
                filter_match_type:
                filter_price_ids: []
                filter_product_ids: []
                metadata: {}
                name: Super Upsell Funnel
                priority: 5
                discarded_at:
                created_at: 1758210381
                updated_at: 1758210381
              schema:
                "$ref": "#/components/schemas/upsell_funnel_response"
    patch:
      summary: Update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Upsell Funnels
      operationId: update_upsell_funnel
      description: Updates a specific upsell funnel.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 3d8c8d38-82f3-4d89-8c25-1c76c49e9cdc
                object: upsell_funnel
                archived: false
                archived_at:
                enabled: false
                filter_match_type:
                filter_price_ids: []
                filter_product_ids: []
                metadata: {}
                name: Super Upsell Funnel
                priority: 2
                discarded_at:
                created_at: 1758210381
                updated_at: 1758210381
              schema:
                "$ref": "#/components/schemas/upsell_funnel_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                upsell_funnel:
                  allOf:
                  - "$ref": "#/components/schemas/upsell_funnel_body"
              example:
                upsell_funnel:
                  priority: 2
    delete:
      summary: Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Upsell Funnels
      operationId: delete_upsell_funnel
      description: Deletes a specific upsell funnel.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 4957582b-92f6-4525-b597-67b26bc8c6b2
                object: upsell_funnel
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/upsell_funnels/{id}/duplicate":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    post:
      summary: Duplicate
      tags:
      - Upsell Funnels
      operationId: duplicate_upsell_funnel
      description: Duplicates a specific upsell funnel.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 4d56142a-69ef-48af-94bf-454956d0c6b2
                object: upsell_funnel
                archived: false
                archived_at:
                enabled: false
                filter_match_type:
                filter_price_ids: []
                filter_product_ids: []
                metadata: {}
                name: Super Upsell Funnel (Duplicate)
                priority: 5
                discarded_at:
                created_at: 1758210381
                updated_at: 1758210381
              schema:
                "$ref": "#/components/schemas/upsell_funnel_response"
  "/v1/upsells":
    get:
      summary: List
      tags:
      - Upsells
      operationId: list_upsell
      description: Returns a list of your upsells.
      parameters:
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: product_ids[]
        in: query
        description: Only return objects that belong to the given products.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: upsell_funnel_ids[]
        in: query
        description: Only return objects that belong to the given upsell funnels.
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/upsells"
                data:
                - id: 6cd02795-c801-496e-b0f2-1b4654558778
                  object: upsell
                  amount_off: 500
                  duplicate_purchase_behavior: allow
                  fee_description: Upsell Offer
                  metadata: {}
                  percent_off:
                  replacement_behavior: none
                  step: initial
                  price: c97cdfd8-0a16-409a-90f5-3b9c2e829ca5
                  upsell_funnel: d0c77cbd-c273-4908-ab1f-7eb89b762bea
                  discarded_at:
                  created_at: 1758210381
                  updated_at: 1758210381
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Upsells
      operationId: create_upsell
      description: Creates a new upsell.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 621c77d8-3dab-43c1-9617-5ff592efc839
                object: upsell
                amount_off: 500
                duplicate_purchase_behavior: allow
                fee_description: Awesome Upsell
                metadata: {}
                percent_off:
                replacement_behavior: none
                step: declined
                price: 7f413505-74c4-4050-822f-a25af2682d79
                upsell_funnel: 89649c25-09f8-4fe3-b5ed-3de082241ce4
                discarded_at:
                created_at: 1758210381
                updated_at: 1758210381
              schema:
                "$ref": "#/components/schemas/upsell_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                upsell:
                  allOf:
                  - "$ref": "#/components/schemas/upsell_body"
              example:
                upsell:
                  fee_description: Awesome Upsell
                  step: declined
                  amount_off: 500
                  price: 7f413505-74c4-4050-822f-a25af2682d79
                  upsell_funnel: 89649c25-09f8-4fe3-b5ed-3de082241ce4
  "/v1/upsells/{id}":
    get:
      summary: Retrieve
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Upsells
      operationId: retrieve_upsell
      description: Retrieves details of a specific upsell.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 9200e06c-2b15-4dfb-817f-1115a84ecb53
                object: upsell
                amount_off: 500
                duplicate_purchase_behavior: allow
                fee_description: Upsell Offer
                metadata: {}
                percent_off:
                replacement_behavior: none
                step: initial
                price: a4bab61f-d7e6-4da6-b31a-75bd5b24641f
                upsell_funnel: b036646c-22f3-4071-ad86-d59ce2545d27
                discarded_at:
                created_at: 1758210381
                updated_at: 1758210381
              schema:
                "$ref": "#/components/schemas/upsell_response"
    patch:
      summary: Update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Upsells
      operationId: update_upsell
      description: Updates a specific upsell.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: fd49ecf9-012c-43f5-b00f-3a69ea9eebe6
                object: upsell
                amount_off: 750
                duplicate_purchase_behavior: allow
                fee_description: Upsell Offer
                metadata: {}
                percent_off:
                replacement_behavior: none
                step: initial
                price: 7ae98618-c136-4791-ab26-338bf24760ac
                upsell_funnel: 0033ad2b-d523-4b9b-82f3-49733b27cc84
                discarded_at:
                created_at: 1758210381
                updated_at: 1758210381
              schema:
                "$ref": "#/components/schemas/upsell_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                upsell:
                  allOf:
                  - "$ref": "#/components/schemas/upsell_body"
              example:
                upsell:
                  amount_off: 750
    delete:
      summary: Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      tags:
      - Upsells
      operationId: delete_upsell
      description: Deletes a specific upsell.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: df5f8875-eefe-461c-b90e-187ae8d8a05e
                object: upsell
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/variant_options":
    get:
      summary: List
      tags:
      - Variant Options
      operationId: list_variant_option
      description: Returns a list of your variant options.
      parameters:
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: product_ids[]
        in: query
        description: Only return objects that belong to the given products.
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/variant_options"
                data:
                - id: 5d183fc8-e6e4-41b8-bde8-8c731ab955e8
                  object: variant_option
                  display_type: radio
                  metadata: {}
                  name: Color
                  position: 0
                  values: []
                  product: f23fd264-089f-46b8-bc2b-c2e1fd2f3ee2
                  created_at: 1758210382
                  updated_at: 1758210382
              schema:
                "$ref": "#/components/schemas/list_response"
  "/v1/variant_options/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Variant Options
      operationId: retrieve_variant_option
      description: Retrieves details of a specific variant option.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: '08e6044e-5160-47c9-8f2d-baf27dc3da4f'
                object: variant_option
                display_type: radio
                metadata: {}
                name: Color
                position: 0
                values: []
                product: 85bcaa97-4fd8-43da-ae70-f351f2f564bb
                created_at: 1758210382
                updated_at: 1758210382
              schema:
                "$ref": "#/components/schemas/variant_option_response"
  "/v1/variants":
    get:
      summary: List
      tags:
      - Variants
      operationId: list_variant
      description: Returns a list of your variants.
      parameters:
      - name: ids[]
        in: query
        description: Only return objects with the given IDs.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      - name: product_ids[]
        in: query
        description: Only return objects that belong to the given products.
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/variants"
                data:
                - id: 1839dd91-2d92-4ce2-8c33-d4ee6b720d9f
                  object: variant
                  amount:
                  available_stock: 0
                  currency: usd
                  current_version: true
                  held_stock: 0
                  metadata: {}
                  option_1: Blue
                  option_2:
                  option_3:
                  option_names:
                  - Color
                  position: 0
                  sku:
                  stock: 0
                  image:
                  product: a3ff0c4d-9406-4b9c-8f58-ff652cdc6554
                  created_at: 1758210382
                  updated_at: 1758210382
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Variants
      operationId: create_variant
      description: Creates a new variant.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 96bab151-c803-47c5-b64b-26b19b8afb68
                object: variant
                amount:
                available_stock: 0
                currency: usd
                current_version: true
                held_stock: 0
                metadata: {}
                option_1: Red
                option_2:
                option_3:
                option_names:
                - Color
                position: 1
                sku:
                stock: 0
                image:
                product: 8990e5f6-3fc2-4631-a673-dbb5fad0c936
                created_at: 1758210382
                updated_at: 1758210382
              schema:
                "$ref": "#/components/schemas/variant_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                variant:
                  allOf:
                  - "$ref": "#/components/schemas/variant_body"
              example:
                variant:
                  product: 8990e5f6-3fc2-4631-a673-dbb5fad0c936
                  option_1: Red
  "/v1/variants/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Variants
      operationId: retrieve_variant
      description: Retrieves details of a specific variant.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: bc8375a7-ab35-4cba-827b-530843e2ec1d
                object: variant
                amount:
                available_stock: 0
                currency: usd
                current_version: true
                held_stock: 0
                metadata: {}
                option_1: Blue
                option_2:
                option_3:
                option_names:
                - Color
                position: 0
                sku:
                stock: 0
                image:
                product: 1d970d79-6977-49df-a2b3-a8998fa94b75
                created_at: 1758210382
                updated_at: 1758210382
              schema:
                "$ref": "#/components/schemas/variant_response"
    patch:
      summary: Update
      tags:
      - Variants
      operationId: update_variant
      description: Updates a specific variant.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 1c72178d-c599-4e04-9073-7a9c9384643b
                object: variant
                amount:
                available_stock: 0
                currency: usd
                current_version: true
                held_stock: 0
                metadata: {}
                option_1: Blue
                option_2:
                option_3:
                option_names:
                - Color
                position: 0
                sku: abc-123-xyz
                stock: 0
                image:
                product: '048e8d6d-890d-4fef-a21a-b69e8e5a5ee8'
                created_at: 1758210382
                updated_at: 1758210382
              schema:
                "$ref": "#/components/schemas/variant_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                variant:
                  allOf:
                  - "$ref": "#/components/schemas/variant_body"
              example:
                variant:
                  sku: abc-123-xyz
    delete:
      summary: Delete
      tags:
      - Variants
      operationId: delete_variant
      description: Deletes a specific variant.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 25dfad01-8ecf-41cd-984a-1d7946af5139
                object: variant
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/verification_codes":
    post:
      summary: Create
      tags:
      - Verification Codes
      operationId: create_verification_code
      description: Creates a new verification code.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 7012a29f-557b-419f-917c-84b212e26c15
                object: verification_code
                email: test@example.com
                verified: false
                verified_at:
                created_at: 1758210382
                updated_at: 1758210382
              schema:
                "$ref": "#/components/schemas/verification_code_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                verification_code:
                  allOf:
                  - "$ref": "#/components/schemas/verification_code_body"
              example:
                verification_code:
                  email: test@example.com
  "/v1/verification_codes/verify":
    post:
      summary: Verify
      tags:
      - Verification Codes
      operationId: verify_verification_code
      description: Verifies a verification code.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 1732530b-873e-41ac-9bae-9351ef1fa851
                object: verification_code
                email: test-1@example.com
                verified: true
                verified_at: 1758210382
                created_at: 1758210382
                updated_at: 1758210382
              schema:
                "$ref": "#/components/schemas/verification_code_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                verification_code:
                  allOf:
                  - "$ref": "#/components/schemas/verification_code_verify_body"
              example:
                verification_code:
                  code: 446126
                  email: test-1@example.com
  "/v1/webhook_endpoints":
    get:
      summary: List
      tags:
      - Webhook Endpoints
      operationId: list_webhook_endpoint
      description: Returns a list of your webhook endpoints.
      parameters:
      - name: limit
        in: query
        description: A limit on the number of items to be returned, between 1 and
          100.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page of items you want returned.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                object: list
                pagination:
                  count: 1
                  limit: 20
                  page: 1
                  url: "/v1/webhook_endpoints"
                data:
                - id: a969252e-33af-42e4-8679-364df8b3c57b
                  object: webhook_endpoint
                  automation_service:
                  description:
                  enabled: true
                  erroring_grace_period_ends_at:
                  erroring_grace_period_started_at:
                  webhook_events: []
                  signing_secret: 3mj1iaY64SHDUDjPNyTe762b
                  url: http://russel.test/deetta
                  created_at: 1758210382
                  updated_at: 1758210382
              schema:
                "$ref": "#/components/schemas/list_response"
    post:
      summary: Create
      tags:
      - Webhook Endpoints
      operationId: create_webhook_endpoint
      description: Creates a new webhook endpoint. If a webhook endpoint already exists
        with the same `url` then it will be updated and returned.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: e2b0a9ff-b86f-4c4b-91b7-f874c214ed5d
                object: webhook_endpoint
                automation_service:
                description:
                enabled: true
                erroring_grace_period_ends_at:
                erroring_grace_period_started_at:
                webhook_events: []
                signing_secret: h2cmGWCn5cNk43NL1gFEp7SE
                url: http://example.com
                created_at: 1758210383
                updated_at: 1758210383
              schema:
                "$ref": "#/components/schemas/webhook_endpoint_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                webhook_endpoint:
                  allOf:
                  - "$ref": "#/components/schemas/webhook_endpoint_body"
              example:
                webhook_endpoint:
                  url: http://example.com
  "/v1/webhook_endpoints/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieve
      tags:
      - Webhook Endpoints
      operationId: retrieve_webhook_endpoint
      description: Retrieves details of a specific webhook endpoint.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 305b78a8-5e97-4585-aa31-888c45de465c
                object: webhook_endpoint
                automation_service:
                description:
                enabled: true
                erroring_grace_period_ends_at:
                erroring_grace_period_started_at:
                webhook_events: []
                signing_secret: bUQMhxYTaCVATikEgE3Aayka
                url: http://okuneva.test/luba
                created_at: 1758210383
                updated_at: 1758210383
              schema:
                "$ref": "#/components/schemas/webhook_endpoint_response"
    patch:
      summary: Update
      tags:
      - Webhook Endpoints
      operationId: update_webhook_endpoint
      description: Updates a specific webhook endpoint.
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 74a0519a-af80-4df0-a0fe-e32618cadd08
                object: webhook_endpoint
                automation_service:
                description:
                enabled: false
                erroring_grace_period_ends_at:
                erroring_grace_period_started_at:
                webhook_events: []
                signing_secret: LNbJDNcKP9redoA8prtKWV9v
                url: http://kuhn-cormier.test/karrie
                created_at: 1758210383
                updated_at: 1758210383
              schema:
                "$ref": "#/components/schemas/webhook_endpoint_response"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                webhook_endpoint:
                  allOf:
                  - "$ref": "#/components/schemas/webhook_endpoint_body"
              example:
                webhook_endpoint:
                  enabled: false
    delete:
      summary: Delete
      tags:
      - Webhook Endpoints
      operationId: delete_webhook_endpoint
      description: Deletes a specific webhook endpoint.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 1b442605-3317-4afa-a882-a50bfa31edc5
                object: webhook_endpoint
                deleted: true
              schema:
                "$ref": "#/components/schemas/model_destroy_response"
  "/v1/webhook_endpoints/{id}/test":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    post:
      summary: Test
      tags:
      - Webhook Endpoints
      operationId: test_webhook_endpoint
      description: Sends a test webhook for the specific webhook endpoint.
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                id: 93b52978-0e5d-47d2-bde0-c55c12d51e9c
                object: webhook_endpoint
                automation_service:
                description:
                enabled: true
                erroring_grace_period_ends_at:
                erroring_grace_period_started_at:
                webhook_events: []
                signing_secret: 5UmcgQAKvJTGmfdSPHmjw9s3
                url: http://daugherty.example/kimberley_hilll
                created_at: 1758210383
                updated_at: 1758210383
              schema:
                "$ref": "#/components/schemas/webhook_endpoint_response"
