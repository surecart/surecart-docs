{
  "openapi": "3.1.0",
  "servers": [
    {
      "url": "https://{defaultHost}",
      "variables": {
        "defaultHost": {
          "default": "api.surecart.com"
        }
      }
    }
  ],
  "security": [
    {
      "bearer_auth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "bearer_auth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "abandoned_checkout_body": {
        "properties": {
          "notifications_enabled": {
            "type": "boolean",
            "description": "Whether or not notifications should be sent to the customer for this abandoned checkout."
          }
        }
      },
      "abandoned_checkout_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/abandoned_checkout_body"
          },
          {
            "properties": {
              "notification_status": {
                "type": "string",
                "description": "The current notification status for this abandonded checkout, which can be one of `not_scheduled`, `scheduled`, or `sent`."
              },
              "portal_url": {
                "type": "string",
                "nullable": true,
                "description": "A URL that will redirect to this abandoned checkout's correct portal page (hosted or external)."
              },
              "checkout": {
                "type": "string",
                "description": "The associated checkout."
              },
              "customer": {
                "type": "string",
                "description": "The associated customer."
              },
              "promotion": {
                "type": "string",
                "nullable": true,
                "description": "The associated promotion that has been auto-generated for this abandoned checkout."
              },
              "recovered_at": {
                "type": "integer",
                "nullable": true,
                "description": "If the abandoned checkout has been recovered, the time it was recovered at."
              },
              "recovered_checkout": {
                "type": "string",
                "nullable": true,
                "description": "The associated recovered checkout."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "abandoned_checkout_protocol_body": {
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "If set to `true` abandonded checkout reminder emails will be sent to customers."
          },
          "first_promotion_notification": {
            "type": "integer",
            "nullable": true,
            "description": "The first notification that should have an auto-generated promotion code â€“ can be one of `1`, `2`, `3` or `null`. For example, if set to `2` the promotion code will be generated when the second notification is sent. If `null` a promotion code will never be generated."
          },
          "grace_period_days": {
            "type": "integer",
            "description": "The number of days to wait after a customer's purchase before allowing an abandoned checkout to be created. This helps to prevent abandoned checkouts being created for customers very soon after they have made a purchase."
          },
          "ignore_purchased_products": {
            "type": "boolean",
            "description": "Whether or not to ignore checkouts where the customer has already purchased all of the products in the checkout."
          },
          "notification_delays": {
            "type": "array",
            "description": "The timing schedule for abandoned checkout notifications. It is an array of integers representing the delay in seconds for all notifications. For example, a value of `[3600, 86400, 432000]` indicates that notifications will be sent 1 hour, 24 hours, and 5 days after a checkout is abandoned. The number of notifications (items in array) must be between 1 and 3."
          },
          "promotion_expires_after_days": {
            "type": "integer",
            "nullable": true,
            "description": "The number of days that the auto-generated promotion code should be valid for. If set to 'null' it is valid forever."
          },
          "test_mode_enabled": {
            "type": "boolean",
            "description": "Whether or not abandoned checkouts should be created for test mode checkouts."
          }
        }
      },
      "abandoned_checkout_protocol_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/abandoned_checkout_protocol_body"
          },
          {
            "properties": {
              "coupon": {
                "type": "string",
                "description": "The associated coupon that is used when creating promotions for abandoned checkouts."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "account_base": {
        "properties": {
          "currency": {
            "type": "string",
            "description": "The default currency for this account. This will be used as the default value for `Price`, `Checkout`, and other objects that have the `currency` attribute."
          },
          "name": {
            "type": "string",
            "description": "The full name, business name, or other short descriptor for this account."
          },
          "locale": {
            "type": "string",
            "description": "The language that will be used for all customer notifications, invoices, etc. Current available locales are `en`, `bg`, `de`, `es`, `fr`, `it`, `ja`, `nl`, `pl`, `pt`, `pt_br`."
          },
          "time_zone": {
            "type": "string",
            "description": "The time zone of the account. Values must be a valid IANA time zone database identifier."
          },
          "url": {
            "type": "string",
            "nullable": true,
            "description": "The URL of this account's store. This will be used as the base for all redirects back to your store."
          }
        }
      },
      "account_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/account_base"
          },
          {
            "properties": {
              "address": {
                "description": "The associated address.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/address_body"
                  }
                ]
              }
            }
          }
        ]
      },
      "account_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/account_base"
          },
          {
            "properties": {
              "abandoned_checkout_protocol": {
                "type": "string",
                "description": "The associated abandoned checkout protocol."
              },
              "address": {
                "type": "string",
                "description": "The associated legal business address."
              },
              "affililiation_protocol": {
                "type": "string",
                "description": "The associated affiliation protocol."
              },
              "brand": {
                "type": "string",
                "description": "The associated brand."
              },
              "cache_keys": {
                "type": "object",
                "description": "A collection of cache keys for various resource collections on this account. These values can be used to invalidate your local cache for each resource collection."
              },
              "claimed": {
                "type": "boolean",
                "description": "Whether or not this account has been claimed yet."
              },
              "claim_url": {
                "type": "string",
                "nullable": true,
                "description": "If not claimed, the URL where this account can be claimed."
              },
              "claim_window_ends_at": {
                "type": "integer",
                "nullable": true,
                "description": "If not claimed, the time at which the claim window for this account ends. Measured in seconds since the Unix epoch."
              },
              "currency_locked": {
                "type": "boolean",
                "description": "Whether or not the currency is locked for this account. The currency is locked once the first live order is created."
              },
              "customer_notification_protocol": {
                "type": "string",
                "description": "The associated customer notification protocol."
              },
              "customer_portal_protocol": {
                "type": "string",
                "description": "The associated customer portal protocol."
              },
              "entitlements": {
                "type": "object",
                "description": "The specific features that this account is entitled to."
              },
              "medias_total_byte_size": {
                "type": "integer",
                "description": "The total number of bytes from this account's medias."
              },
              "plan": {
                "type": "object",
                "description": "Details of the current plan this account is on."
              },
              "processors": {
                "type": "array",
                "description": "A list of connected processors."
              },
              "public_token": {
                "type": "string",
                "description": "The public API token for this account."
              },
              "review_protocol": {
                "type": "string",
                "description": "The associated review protocol"
              },
              "shipping_protocol": {
                "type": "string",
                "description": "The associated shipping protocol."
              },
              "subscription_protocol": {
                "type": "string",
                "description": "The associated subscription protocol."
              },
              "tax_protocol": {
                "type": "string",
                "description": "The associated tax protocol."
              },
              "seeded_at": {
                "type": "integer",
                "nullable": true,
                "description": "Time when the account was seeded."
              },
              "test_data_purged_at": {
                "type": "integer",
                "nullable": true,
                "description": "Time at which the test data was last purged."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "activation_base": {
        "properties": {
          "fingerprint": {
            "type": "string",
            "description": "The identifier for this activation. For example a URL, a machine fingerprint, etc."
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "The name of this activation."
          }
        }
      },
      "activation_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/activation_base"
          },
          {
            "properties": {
              "license": {
                "type": "string",
                "description": "The UUID of the license."
              }
            }
          }
        ]
      },
      "activation_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/activation_base"
          },
          {
            "properties": {
              "counted": {
                "type": "boolean",
                "description": "Whether or not this activation counts towards the activation limit."
              },
              "license": {
                "type": "string",
                "nullable": true,
                "description": "The associated license."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "address_body": {
        "properties": {
          "city": {
            "type": "string",
            "description": "City, district, suburb, town, or village."
          },
          "country": {
            "type": "string",
            "description": "Two-letter country code (ISO 3166-1 alpha-2)."
          },
          "line_1": {
            "type": "string",
            "description": "Address line 1 (e.g., street, PO Box, or company name)."
          },
          "line_2": {
            "type": "string",
            "nullable": true,
            "description": "Address line 2 (e.g., apartment, suite, unit, or building)."
          },
          "name": {
            "type": "string",
            "description": "The full name or business name for this address. (If empty, this will fallback to the customer's name.)"
          },
          "postal_code": {
            "type": "string",
            "description": "ZIP or postal code."
          },
          "state": {
            "type": "string",
            "description": "State, county, province, or region."
          }
        }
      },
      "address_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/address_body"
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "affiliation_body": {
        "allOf": [
          {
            "properties": {
              "bio": {
                "type": "string",
                "description": "A short blurb from this affiliate describing how they will promote this store."
              },
              "code": {
                "type": "string",
                "description": "The affiliate's unique code."
              },
              "commission_structure": {
                "description": "The commission structure to use when calculating referral commissions for this specific affiliation.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/commission_structure_base"
                  }
                ]
              },
              "email": {
                "type": "string",
                "description": "The affiliate's email address."
              },
              "first_name": {
                "type": "string",
                "description": "The affiliate's first name."
              },
              "last_name": {
                "type": "string",
                "nullable": true,
                "description": "The affiliate's last name."
              },
              "payout_email": {
                "type": "string",
                "nullable": true,
                "description": "The affiliate's payout email address."
              },
              "url": {
                "type": "string",
                "nullable": true,
                "description": "The primary website or social media account of the affiliate."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_metadata"
          }
        ]
      },
      "affiliation_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "properties": {
              "active": {
                "type": "boolean",
                "description": "Whether or not the affiliate is active."
              },
              "affiliation_products": {
                "type": "object",
                "nullable": true,
                "description": "A list of associated affiliation products."
              },
              "commission_structure": {
                "type": "string",
                "description": "The associated commission structure.",
                "nullable": true
              },
              "portal_url": {
                "type": "string",
                "nullable": true,
                "description": "A URL that will redirect to this affiliation's correct portal page (hosted or external)."
              },
              "referral_url": {
                "type": "string",
                "description": "The referral URL with the affiliate's code appended as a query parameter."
              },
              "total_commission_amount": {
                "type": "integer",
                "description": "The total commission amount earned by the affiliate."
              },
              "total_not_paid_commission_amount": {
                "type": "integer",
                "description": "The total commission amount earned by the affiliate that has not been paid out yet."
              },
              "clicks": {
                "type": "object",
                "nullable": true,
                "description": "A list of associated clicks."
              },
              "referrals": {
                "type": "object",
                "nullable": true,
                "description": "A list of associated referrals."
              },
              "payouts": {
                "type": "object",
                "nullable": true,
                "description": "A list of associated payouts."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_discarded_timestamp"
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "affiliation_product_body": {
        "allOf": [
          {
            "properties": {
              "affiliation": {
                "type": "string",
                "description": "The UUID of the affiliation."
              },
              "commission_structure": {
                "description": "The commission structure to use when calculating referral commissions for this product and affiliation.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/commission_structure_base"
                  }
                ]
              },
              "product": {
                "type": "string",
                "description": "The UUID of the product."
              }
            }
          }
        ]
      },
      "affiliation_product_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "properties": {
              "affiliation": {
                "type": "string",
                "description": "The associated affiliation."
              },
              "commission_structure": {
                "type": "string",
                "description": "The associated commission structure."
              },
              "product": {
                "type": "string",
                "description": "The associated product."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "affiliation_protocol_base": {
        "allOf": [
          {
            "properties": {
              "affiliation_request_bio_label": {
                "type": "string",
                "nullable": true,
                "description": "The question affiliates are asked when they sign up."
              },
              "affiliation_request_payout_email_enabled": {
                "type": "boolean",
                "description": "Whether or not to include the payout email field on the affiliation request form."
              },
              "auto_approve_affiliations": {
                "type": "boolean",
                "description": "Whether or not to automatically approve affiliation requests."
              },
              "auto_approve_referrals": {
                "type": "boolean",
                "description": "Whether or not to automatically approve referrals."
              },
              "description": {
                "type": "string",
                "nullable": true,
                "description": "A short description of how this store's affiliate program works. This will be displayed when affiliates request to join."
              },
              "enabled": {
                "type": "boolean",
                "description": "Whether or not this store is accepting new affiliation requests."
              },
              "external_portal_enabled": {
                "type": "boolean",
                "description": "Whether or not an external affiliate portal is being used. If true, affiliates will be redirected to the store's URL when they visit the hosted affiliate portal."
              },
              "external_portal_url": {
                "type": "string",
                "nullable": true,
                "description": "If `external_portal_enabled=true`, where is the external portal hosted? If empty, the store's URL is used."
              },
              "payout_description": {
                "type": "string",
                "nullable": true,
                "description": "A short description of how this store pays out commissions to affiliates."
              },
              "portal_back_url": {
                "type": "string",
                "nullable": true,
                "description": "The back URL that is shown to affiliates on the affiliate portal."
              },
              "portal_heading": {
                "type": "string",
                "nullable": true,
                "description": "The heading to display in the affiliate portal sidebar."
              },
              "portal_description": {
                "type": "string",
                "nullable": true,
                "description": "The short description to display in the affiliate portal sidebar."
              },
              "referral_url": {
                "type": "string",
                "nullable": true,
                "description": "The URL to use for affiliate referrals. This will be used to generate affiliate referral links."
              },
              "referrer_type": {
                "type": "string",
                "description": "The referrer strategy to use for referrals â€“ one of `first` or `last`."
              },
              "terms_url": {
                "type": "string",
                "nullable": true,
                "description": "The URL to the terms and conditions for this store's affiliate program."
              },
              "tracking_length_days": {
                "type": "integer",
                "description": "The number of days to track affiliate clicks for. This determines how long the click tracking cookie will last for."
              },
              "wordpress_plugin_tracking_enabled": {
                "type": "boolean",
                "description": "Whether or not the WordPress plugin should automatically add the tracking script."
              },
              "zero_commission_amount_referrals_enabled": {
                "type": "boolean",
                "description": "Whether or not to create a referral from a checkout when the resulting referral has a `commission_amount` of 0."
              }
            }
          }
        ]
      },
      "affiliation_protocol_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/affiliation_protocol_base"
          },
          {
            "properties": {
              "commission_structure": {
                "description": "The commission structure to use when calculating referral commissions.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/commission_structure_base"
                  }
                ]
              }
            }
          }
        ]
      },
      "affiliation_protocol_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/affiliation_protocol_base"
          },
          {
            "properties": {
              "commission_structure": {
                "type": "string",
                "description": "The associated commission structure."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "affiliation_request_body": {
        "allOf": [
          {
            "properties": {
              "bio": {
                "type": "string",
                "description": "A short blurb from this affiliate describing how they will promote this store."
              },
              "email": {
                "type": "string",
                "description": "The affiliate's email address."
              },
              "first_name": {
                "type": "string",
                "description": "The affiliate's first name."
              },
              "last_name": {
                "type": "string",
                "nullable": true,
                "description": "The affiliate's last name."
              },
              "payout_email": {
                "type": "string",
                "nullable": true,
                "description": "The affiliate's payout email address."
              },
              "url": {
                "type": "string",
                "nullable": true,
                "description": "The primary website or social media account of the affiliate."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_metadata"
          }
        ]
      },
      "affiliation_request_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/affiliation_request_body"
          },
          {
            "properties": {
              "portal_url": {
                "type": "string",
                "nullable": true,
                "description": "A URL that will redirect to this affiliation request's correct portal page (hosted or external)."
              },
              "status": {
                "type": "string",
                "description": "The current status of this affiliation request, which can be one of `approved`, `denied`, or `pending`."
              },
              "used": {
                "type": "boolean",
                "description": "Whether or not the request has been used to register an affiliate."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "rule_condition": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "condition"
            ],
            "description": "Indicates this object is a condition."
          },
          "attribute_name": {
            "type": "string",
            "description": "The attribute being checked (e.g., `subtotal_amount`)."
          },
          "operator_label": {
            "type": "string",
            "description": "The operator used for comparison (e.g., `is_more_than`)."
          },
          "comparison_value": {
            "type": "string",
            "description": "The value to compare against."
          }
        }
      },
      "rule_group": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "group"
            ],
            "description": "Indicates this object is a group."
          },
          "combinator": {
            "type": "string",
            "enum": [
              "and",
              "or"
            ],
            "description": "Whether all conditions/groups must match (`and`) or any (`or`)."
          },
          "conditions": {
            "type": "array",
            "description": "Nested conditions or groups.",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/rule_condition"
                },
                {
                  "$ref": "#/components/schemas/rule_group"
                }
              ]
            }
          }
        }
      },
      "auto_fee_base": {
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Whether the auto fee is enabled."
          },
          "amount_adjustment": {
            "type": "integer",
            "nullable": true,
            "description": "The amount in cents to be added or subtracted from subtotal of applicable checkout"
          },
          "discount": {
            "type": "boolean",
            "description": "Whether this auto fee is a discount (subtracted from total) or a fee (added to total)."
          },
          "end_at": {
            "type": "integer",
            "nullable": true,
            "description": "Time at which the auto fee becomes inactive. Measured in seconds since the Unix epoch."
          },
          "fee_target": {
            "type": "string",
            "enum": [
              "checkout",
              "line_item",
              "shipping"
            ],
            "description": "The entity to which this auto fee applies. (This can only be set when the auto fee is created.)"
          },
          "metadata": {
            "type": "object",
            "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format."
          },
          "name": {
            "type": "string",
            "description": "The name of the auto fee."
          },
          "percent_adjustment": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The percentage to be added or subtracted from subtotal of applicable checkout."
          },
          "rules": {
            "nullable": true,
            "description": "The rules that determine when this auto fee applies",
            "oneOf": [
              {
                "$ref": "#/components/schemas/rule_condition"
              },
              {
                "$ref": "#/components/schemas/rule_group"
              }
            ]
          },
          "start_at": {
            "type": "integer",
            "description": "Time at which the auto fee becomes active. Measured in seconds since the Unix epoch."
          }
        }
      },
      "auto_fee_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/auto_fee_base"
          }
        ]
      },
      "auto_fee_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/auto_fee_base"
          },
          {
            "properties": {
              "currency": {
                "type": "string",
                "description": "Three-letter ISO currency code, in lowercase."
              },
              "expired": {
                "type": "boolean",
                "description": "Whether the auto fee has expired."
              },
              "ongoing": {
                "type": "boolean",
                "description": "Whether the auto fee is currently active."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_discarded_timestamp"
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "balance_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "properties": {
              "amount": {
                "type": "integer",
                "description": "The total balance amount for this customer in this currency."
              },
              "currency": {
                "type": "string",
                "description": "Three-letter ISO currency code, in lowercase."
              },
              "balance_transactions": {
                "type": "object",
                "nullable": true,
                "description": "The associated balance transactions."
              },
              "customer": {
                "type": "string",
                "description": "The associated customer."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "balance_transaction_base": {
        "properties": {
          "amount": {
            "type": "integer",
            "description": "The amount of the transaction. A negative value is a credit for the customerâ€™s balance, and a positive value is a debit to the customerâ€™s balance."
          },
          "currency": {
            "type": "string",
            "description": "Three-letter ISO currency code, in lowercase."
          }
        }
      },
      "balance_transaction_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/balance_transaction_base"
          },
          {
            "properties": {
              "customer": {
                "type": "string",
                "description": "The UUID of the customer."
              }
            }
          }
        ]
      },
      "balance_transaction_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/balance_transaction_base"
          },
          {
            "properties": {
              "balance": {
                "type": "string",
                "description": "The associated balance."
              },
              "customer": {
                "type": "string",
                "description": "The associated customer."
              },
              "ending_balance_amount": {
                "type": "integer",
                "description": "The balance amount after the transaction was applied."
              },
              "checkout": {
                "type": "string",
                "nullable": true,
                "description": "The associated checkout."
              },
              "transaction_type": {
                "type": "string",
                "description": "One of either `adjustment`, `applied_to_checkout`, `checkout_below_currency_minimum`, or `checkout_credit`. Balance transactions created through the API are always `adjustment` transactions."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "brand_base": {
        "properties": {
          "color": {
            "type": "string",
            "nullable": true,
            "description": "The primary brand color. Used for buttons, links, loading states, etc."
          },
          "email": {
            "type": "string",
            "nullable": true,
            "description": "The email address that will be shown to customers for support, on statements, etc."
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "description": "The phone number that will be shown to customers for support, on statements, etc."
          },
          "website": {
            "type": "string",
            "nullable": true,
            "description": "The website that will be shown to customers for support, on statements, etc."
          }
        }
      },
      "brand_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/brand_base"
          },
          {
            "properties": {
              "logo": {
                "type": "string",
                "description": "The UUID of the media."
              },
              "address": {
                "description": "The associated address.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/address_body"
                  }
                ]
              }
            }
          }
        ]
      },
      "brand_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/brand_base"
          },
          {
            "properties": {
              "logo": {
                "type": "string",
                "nullable": true,
                "description": "The associated media."
              },
              "address": {
                "type": "string",
                "nullable": true,
                "description": "The associated address."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "bulk_action_body": {
        "allOf": [
          {
            "properties": {
              "action_type": {
                "type": "string",
                "description": "The type of action to be performed. Possible values include:\n- `delete_customers`\n- `delete_products`\n"
              },
              "record_ids": {
                "type": "array",
                "description": "The id of records to perform the bulk action on."
              }
            }
          }
        ]
      },
      "bulk_action_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/bulk_action_body"
          },
          {
            "properties": {
              "skipped_record_ids": {
                "type": "array",
                "description": "The array of ids that are skipped due to the action not being applicable to them."
              },
              "status": {
                "type": "string",
                "description": "The status of the bulk action. Possible values include:\n- `completed`: The bulk action has been executed, possibly with some errors.\n- `invalid`: The bulk action contains no record_ids that support the given action.\n- `pending`: The bulk action is pending and not yet processed.\n- `processing`: The bulk action is currently being processed.\n- `succeeded`: The bulk action has succeeded with no errors for all the supporting record_ids.\n"
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "bump_base": {
        "allOf": [
          {
            "properties": {
              "amount_off": {
                "type": "integer",
                "nullable": true,
                "description": "Amount (in the `currency` of the price) that will be taken off line items associated with this bump."
              },
              "archived": {
                "type": "boolean",
                "description": "Whether or not this bump is archived."
              },
              "auto_apply": {
                "type": "boolean",
                "description": "Whether or not this bump should be automatically applied to applicable checkouts. If `false`, this bump must be manually added to a `line_item`."
              },
              "filter_match_type": {
                "type": "string",
                "nullable": true,
                "description": "The matching strategy to use when filtering bumps â€“ can be `null` or one of `all`, `any`, `none`. If `null`, the bump will not be filtered and will be applicable to all line items."
              },
              "filter_price_ids": {
                "type": "array",
                "description": "The prices to filter this bump by."
              },
              "filter_product_ids": {
                "type": "array",
                "description": "The products to filter this bump by."
              },
              "name": {
                "type": "string",
                "nullable": true,
                "description": "A name for this bump that will be visible to customers."
              },
              "percent_off": {
                "type": "number",
                "nullable": true,
                "description": "Percent that will be taken off line items associated with this bump."
              },
              "priority": {
                "type": "integer",
                "description": "The priority of this bump in relation to other bumps. Must be in the range of `1` - `5` with `5` being the highest priority and `1` being the lowest."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_metadata"
          }
        ]
      },
      "bump_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/bump_base"
          },
          {
            "properties": {
              "price": {
                "type": "string",
                "description": "The UUID of the price."
              }
            }
          }
        ]
      },
      "bump_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/bump_base"
          },
          {
            "properties": {
              "archived_at": {
                "type": "integer",
                "nullable": true,
                "description": "Time at which the object was archived. Measured in seconds since the Unix epoch."
              },
              "price": {
                "type": "string",
                "description": "The associated price."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_discarded_timestamp"
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "cancellation_act_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "properties": {
              "comment": {
                "type": "string",
                "nullable": true,
                "description": "The comment left by the customer when they canceled the subscription."
              },
              "coupon_applied": {
                "type": "boolean",
                "description": "Whether or not the preservation coupon was applied to the subscription when it was preserved."
              },
              "performed_at": {
                "type": "integer",
                "description": "Time at which the cancellation act was performed. Measured in seconds since the Unix epoch."
              },
              "preserved": {
                "type": "boolean",
                "description": "Whether or not this subscription was preserved when the customer went to cancel it."
              },
              "cancellation_reason": {
                "type": "string",
                "description": "The associated subscription."
              },
              "subscription": {
                "type": "string",
                "description": "The associated subscription."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "cancellation_reason_body": {
        "properties": {
          "archived": {
            "type": "boolean",
            "description": "Whether or not this cancellation reason is archived."
          },
          "comment_enabled": {
            "type": "boolean",
            "description": "Whether or not this cancellation reason should prompt the user for a comment."
          },
          "comment_prompt": {
            "type": "string",
            "nullable": true,
            "description": "A breif customer-facing prompt for more detail that will be shown when this cancellation reason is selected."
          },
          "coupon_enabled": {
            "type": "boolean",
            "description": "Whether or not this cancellation reason should offer the `subscription_protocol.cancellation_prevention_coupon` to the customer to preserve the subscription."
          },
          "label": {
            "type": "string",
            "description": "The customer-facing label for this cancellation reason."
          },
          "position": {
            "type": "integer",
            "nullable": true,
            "description": "The ordering position of this cancellation reason when displayed to customers."
          }
        }
      },
      "cancellation_reason_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/cancellation_reason_body"
          },
          {
            "properties": {
              "archived_at": {
                "type": "integer",
                "nullable": true,
                "description": "Time at which the object was archived. Measured in seconds since the Unix epoch."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_discarded_timestamp"
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "card_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "properties": {
              "brand": {
                "type": "string",
                "description": "The brand of the card, which can be `amex`, `diners`, `discover`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`."
              },
              "exp_month": {
                "type": "integer",
                "description": "Two-digit number representing the cardâ€™s expiration month."
              },
              "exp_year": {
                "type": "integer",
                "description": "Four-digit number representing the cardâ€™s expiration year."
              },
              "last4": {
                "type": "string",
                "description": "The last four digits of the card."
              },
              "wallet_type": {
                "type": "string",
                "nullable": true,
                "description": "If this card is part of a card wallet, this will be set to the type of wallet. The current types are `amex_express_checkout`, `apple_pay`, `google_pay`, `masterpass`, `samsung_pay`, or `visa_checkout`."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "charge_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "properties": {
              "amount": {
                "type": "integer",
                "description": "The amount in cents that was charged, represented as a whole integer. For example `9900` is equivalent to `$99`."
              },
              "currency": {
                "type": "string",
                "description": "Three-letter ISO currency code, in lowercase."
              },
              "disputed_amount": {
                "type": "integer",
                "description": "The amount in cents that has been disputed."
              },
              "external_charge_id": {
                "type": "string",
                "description": "The external processor ID representing this charge."
              },
              "fully_refunded": {
                "type": "boolean",
                "description": "Whether or not this charge has been refunded completely."
              },
              "live_mode": {
                "type": "boolean",
                "description": "Set to `true` if this charge is in live mode, and set to `false` if it is in test mode."
              },
              "refunded_amount": {
                "type": "integer",
                "description": "Amount in cents refunded (can be less than the amount attribute on the charge if a partial refund was issued)."
              },
              "customer": {
                "type": "string",
                "nullable": true,
                "description": "The associated customer."
              },
              "checkout": {
                "type": "string",
                "nullable": true,
                "description": "The associated checkout."
              },
              "disputes": {
                "type": "object",
                "nullable": true,
                "description": "A list of associated disputes."
              },
              "payment_intent": {
                "type": "string",
                "description": "The associated payment intent."
              },
              "payment_method": {
                "type": "string",
                "nullable": true,
                "description": "The associated payment method."
              },
              "refunds": {
                "type": "object",
                "nullable": true,
                "description": "A list of associated refunds."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "checkout_base": {
        "allOf": [
          {
            "properties": {
              "abandoned_checkout_enabled": {
                "type": "boolean",
                "nullable": true,
                "description": "If set to `true` abandonded checkout reminder emails will be sent to the customer."
              },
              "billing_matches_shipping": {
                "type": "boolean",
                "description": "If set to `true` the shipping address will be used for the billing address."
              },
              "currency": {
                "type": "string",
                "description": "Three-letter ISO currency code, in lowercase. This value will match the `Account` currency."
              },
              "email": {
                "type": "string",
                "nullable": true,
                "description": "The email of the customer. If customers exists with this email, the most recently active/updated customer will be associated. If no customers exist with this email, a new customer will be created. If a `customer_id` is also passed then this will take precedence and the customer will not be looked up by email."
              },
              "external_url": {
                "type": "string",
                "nullable": true,
                "description": "If set, this URL will be used whenever redirecting to the external checkout portal. If not set, the default `external_url` from the `CheckoutPortalProtocol` will be used."
              },
              "first_name": {
                "type": "string",
                "nullable": true,
                "description": "The customerâ€™s first name."
              },
              "ip_address": {
                "type": "string",
                "nullable": true,
                "description": "The IP address of the customer for this checkout."
              },
              "group_key": {
                "type": "string",
                "nullable": true,
                "description": "A key used to retrieve groups of checkouts dynamically from a static string."
              },
              "last_name": {
                "type": "string",
                "nullable": true,
                "description": "The customerâ€™s last name."
              },
              "live_mode": {
                "type": "boolean",
                "description": "Set to `true` if this checkout is in live mode, and set to `false` if it is in test mode."
              },
              "name": {
                "type": "string",
                "nullable": true,
                "description": "The customerâ€™s full name or business name. If set, this will take precedence over the separate `first_name` and `last_name` attributes."
              },
              "tax_behavior": {
                "type": "string",
                "description": "The tax behavior for this checkout. One of `exclusive` or `inclusive`."
              },
              "tax_enabled": {
                "type": "boolean",
                "description": "Whether or not tax is enabled for this checkout. This will default to the account's `tax_protocol.tax_enabled` value when the checkout is created."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_metadata"
          }
        ]
      },
      "checkout_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/checkout_base"
          },
          {
            "properties": {
              "billing_address": {
                "description": "The billing address for this checkout.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/address_body"
                  }
                ]
              },
              "customer": {
                "type": "string",
                "description": "The UUID of the customer. (The customer can't be changed once the checkout has been paid.)"
              },
              "discount": {
                "description": "The parameters of the discount to be applied to this checkout.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/discount_body"
                  }
                ]
              },
              "line_items": {
                "type": "array",
                "description": "A list of this checkout's line items. (The line items can't be updated through the checkout once it has been paid.)",
                "items": {
                  "$ref": "#/components/schemas/line_item_body"
                }
              },
              "refresh_line_items": {
                "type": "boolean",
                "nullable": true,
                "description": "When set to true the prices and variants that are associated with each line item will be refreshed to reference the most recent version. (This should be used if you are receiving an error when trying to finalize a checkout that is referencing old price versions and/or variant versions.)"
              },
              "selected_shipping_choice": {
                "type": "string",
                "description": "The UUID of the shipping choice."
              },
              "shipping_address": {
                "description": "The shipping address for this checkout.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/address_body"
                  }
                ]
              },
              "tax_identifier": {
                "description": "The tax identifier to set for this checkout.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/tax_identifier_body"
                  }
                ]
              }
            }
          }
        ]
      },
      "checkout_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/checkout_base"
          },
          {
            "properties": {
              "amount_due": {
                "type": "integer",
                "description": "Total amount due after all adjustments (i.e. trials, credits, proration)."
              },
              "applied_balance_amount": {
                "type": "integer",
                "description": "The customer balance amount that was applied to this checkout."
              },
              "available_countries": {
                "type": "array",
                "description": "A list of countries available for this checkout, represented in the two-letter (ISO 3166-1 alpha-2) format."
              },
              "billing_address": {
                "type": "string",
                "nullable": true,
                "description": "The associated billing address."
              },
              "charges": {
                "type": "object",
                "nullable": true,
                "description": "A list of associated charges."
              },
              "checkout_fees_amount": {
                "type": "integer",
                "description": "The total amount of checkout fees applied to this checkout."
              },
              "credited_balance_amount": {
                "type": "integer",
                "description": "The amount the customer's balance was credited from this checkout."
              },
              "current_payment_intent": {
                "type": "string",
                "nullable": true,
                "description": "The current payment intent to be used to pay the checkout. (This will only be set once the checkout has been finalized.)"
              },
              "current_upsell": {
                "type": "string",
                "nullable": true,
                "description": "The upsell to be shown to the customer. (This will only be set once the checkout has been paid and an upsell funnel is set on the checkout.)"
              },
              "customer": {
                "type": "string",
                "nullable": true,
                "description": "The associated customer. (This will only be set once the checkout has been finalized.)"
              },
              "discount": {
                "type": "string",
                "nullable": true,
                "description": "The associated discount."
              },
              "discount_amount": {
                "type": "integer",
                "description": "Total discount amount of all line items."
              },
              "free_shipping_choice_shortage_amount": {
                "type": "integer",
                "nullable": true,
                "description": "The amount that needs to be added to the checkout to qualify for free shipping. If `null`, then a free shipping choice is not available or it has already qualified."
              },
              "full_amount": {
                "type": "integer",
                "description": "The full amount to be charged across all periods."
              },
              "g_weight": {
                "type": "number",
                "description": "Total weight of the entire checkout in grams."
              },
              "inherited_billing_address": {
                "type": "string",
                "nullable": true,
                "description": "The inherited billing address of the checkout or customer. This is controlled by the `inherit_customer_enabled` attribute on the account's order protocol."
              },
              "inherited_email": {
                "type": "string",
                "nullable": true,
                "description": "The inherited email of the checkout or customer. This is controlled by the `inherit_customer_enabled` attribute on the account's order protocol."
              },
              "inherited_name": {
                "type": "string",
                "nullable": true,
                "description": "The inherited name of the checkout or customer. This is controlled by the `inherit_customer_enabled` attribute on the account's order protocol."
              },
              "inherited_phone": {
                "type": "string",
                "nullable": true,
                "description": "The inherited phone of the checkout or customer. This is controlled by the `inherit_customer_enabled` attribute on the account's order protocol."
              },
              "inherited_shipping_address": {
                "type": "string",
                "nullable": true,
                "description": "The inherited shipping address of the checkout or customer. This is controlled by the `inherit_customer_enabled` attribute on the account's order protocol."
              },
              "inherited_tax_identifier": {
                "type": "string",
                "nullable": true,
                "description": "The inherited tax identifier of the checkout or customer. This is controlled by the `inherit_customer_enabled` attribute on the account's order protocol."
              },
              "invoice": {
                "type": "string",
                "nullable": true,
                "description": "The associated invoice."
              },
              "line_items": {
                "type": "object",
                "nullable": true,
                "description": "A list of associated line items."
              },
              "manual_charges": {
                "type": "object",
                "nullable": true,
                "description": "A list of associated manual charges."
              },
              "manual_payment": {
                "type": "boolean",
                "description": "Whether or not this checkout has been finalized with the `manual_payment=true` option."
              },
              "manual_payment_method": {
                "type": "string",
                "nullable": true,
                "description": "The associated manual payment method."
              },
              "remaining_amount_due": {
                "type": "integer",
                "description": "The remaining amount that is due for this checkout â€“ the `amount_due` - `paid_amount`."
              },
              "net_paid_amount": {
                "type": "integer",
                "description": "The net amount that has been paid for this checkout â€“ the `paid_amount` minus the `refunded_amount`."
              },
              "order": {
                "type": "string",
                "nullable": true,
                "description": "The associated order."
              },
              "paid_amount": {
                "type": "integer",
                "description": "The total amount that has been paid for this checkout â€“ the sum of charges and manual charges."
              },
              "paid_at": {
                "type": "integer",
                "nullable": true,
                "description": "Time at which the object was paid. Measured in seconds since the Unix epoch."
              },
              "payment_failures": {
                "type": "object",
                "nullable": true,
                "description": "A list of associated payment failures."
              },
              "payment_method_required": {
                "type": "boolean",
                "description": "Whether or not a payment method is required for this checkout. If false, the checkout will immediately transition to the `paid` state when finalized."
              },
              "phone_required": {
                "type": "boolean",
                "description": "Whether or not a phone number is required for this checkout. (This is determined by the account's active payment processors.)"
              },
              "portal_url": {
                "type": "string",
                "nullable": true,
                "description": "A URL that will redirect to this checkout's correct portal page (hosted or external)."
              },
              "processor_data": {
                "type": "object",
                "description": "All of the additional data necessary to capture payment with each processor."
              },
              "proration_amount": {
                "type": "integer",
                "description": "Total amount to be prorated from this checkout."
              },
              "purchases": {
                "type": "object",
                "nullable": true,
                "description": "The associated purchases."
              },
              "recommended_bumps": {
                "type": "object",
                "nullable": true,
                "description": "A list of recommended bumps for this checkout."
              },
              "referral": {
                "type": "string",
                "nullable": true,
                "description": "The associated referral."
              },
              "refunded_amount": {
                "type": "integer",
                "description": "The total amount that has been refunded for this checkout â€“ the sum of refunds."
              },
              "reusable_payment_method_required": {
                "type": "boolean",
                "description": "Whether or not a reusable payment method is required for this checkout."
              },
              "selected_shipping_choice_required": {
                "type": "boolean",
                "description": "Whether or not a shipping choice must be selected for this checkout."
              },
              "selected_shipping_choice": {
                "type": "string",
                "nullable": true,
                "description": "The selected shipping choice."
              },
              "shipping_address": {
                "type": "string",
                "nullable": true,
                "description": "The associated shipping address."
              },
              "shipping_address_accuracy_requirement": {
                "type": "string",
                "nullable": true,
                "description": "The required level of accuracy for the shipping address â€“ one of `full`, `tax`, or `none`."
              },
              "shipping_amount": {
                "type": "integer",
                "description": "Total shipping amount for the checkout."
              },
              "shipping_choices": {
                "type": "object",
                "nullable": true,
                "description": "A list of available shipping choices for this checkout."
              },
              "shipping_enabled": {
                "type": "boolean",
                "description": "Whether or not this checkout has products with `shipping_enabled=true`."
              },
              "shipping_fees_amount": {
                "type": "integer",
                "description": "The total amount of shipping fees applied to the shipping_amount."
              },
              "shipping_tax_amount": {
                "type": "number",
                "description": "Total tax from shipping."
              },
              "shipping_tax_rate": {
                "type": "number",
                "description": "The tax rate applied to shipping."
              },
              "status": {
                "type": "string",
                "description": "The current status of this checkout, which can be one of `canceled`, `draft`, `finalized`, `paid`, `payment_intent_canceled`, `payment_failed`, or `processing`."
              },
              "subtotal_amount": {
                "type": "integer",
                "description": "Total of all line items and their fees before discounts or taxes are applied."
              },
              "tax_amount": {
                "type": "integer",
                "description": "Total tax amount of all line items."
              },
              "tax_breakdown": {
                "type": "array",
                "description": "The tax rate breakdown for this checkout."
              },
              "tax_label": {
                "type": "string",
                "nullable": true,
                "description": "The type of tax that is applied to this checkout. For example, in the EU this value will be `VAT` and in the US this value will be `Tax`."
              },
              "tax_status": {
                "type": "string",
                "description": "The status of tax calculations for this checkout. One of `address_invalid`, `calculated`, `disabled`, `estimated`, `reverse_charged`, or `tax_zone_not_found`."
              },
              "tax_identifier": {
                "type": "string",
                "nullable": true,
                "description": "The associated tax identifier."
              },
              "total_amount": {
                "type": "integer",
                "description": "Total of all line items after discounts and taxes are applied."
              },
              "total_savings_amount": {
                "type": "integer",
                "description": "The total amount in cents that was saved on this checkout taking into account all negative fees, discounts, and all price `scratch_amount` values."
              },
              "trial_amount": {
                "type": "integer",
                "description": "The total amount in cents that is removed from this checkout due to trial periods."
              },
              "upsells_expire_at": {
                "type": "integer",
                "nullable": true,
                "description": "The time at which upsells will expire for this checkout. Measured in seconds since the Unix epoch."
              },
              "upsell_funnel": {
                "type": "string",
                "nullable": true,
                "description": "The associated upsell funnel."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "checkout_fee_base": {
        "properties": {
          "amount": {
            "type": "integer",
            "description": "The amount in cents to be added or subtracted, represented as an integer. For example `9900` is equivalent to `$99`."
          },
          "description": {
            "type": "string",
            "description": "A short description of the checkout fee."
          }
        }
      },
      "checkout_fee_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/checkout_fee_base"
          },
          {
            "properties": {
              "checkout": {
                "type": "string",
                "description": "The UUID of the checkout."
              }
            }
          }
        ]
      },
      "checkout_fee_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/checkout_fee_base"
          },
          {
            "properties": {
              "fee_type": {
                "type": "string",
                "description": "The type of checkout_fee â€“ one of `auto` or `manual`."
              },
              "checkout": {
                "type": "string",
                "description": "The associated checkout."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "checkout_portal_protocol_body": {
        "properties": {
          "back_url": {
            "type": "string",
            "nullable": true,
            "description": "The back URL that is shown to customers on the checkout portal. This can be overridden by a `back_url` on a `Checkout`."
          },
          "external_enabled": {
            "type": "boolean",
            "description": "Whether or not an external checkout portal is being used."
          },
          "external_url": {
            "type": "string",
            "nullable": true,
            "description": "If `external_enabled=true`, where is the external portal hosted? If empty, the store's URL is used."
          },
          "manual_checkout_finalize_enabled": {
            "type": "boolean",
            "description": "Whether or not finalizing a checkout with `manual_payment=true` is allowed."
          },
          "thank_you_heading": {
            "type": "string",
            "nullable": true,
            "description": "The heading that is shown to customers on the order thank you page."
          },
          "thank_you_description": {
            "type": "string",
            "nullable": true,
            "description": "The description that is shown to customers on the order thank you page."
          },
          "wordpress_plugin_enabled": {
            "type": "boolean",
            "description": "Whether or not the WordPress plugin is hosting the checkout portal."
          }
        }
      },
      "checkout_portal_protocol_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/checkout_portal_protocol_body"
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "click_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "properties": {
              "anonymous_id": {
                "type": "string",
                "description": "The anonymous ID used for identifying a customer across multiple clicks."
              },
              "converted": {
                "type": "boolean",
                "description": "Whether or not this click is associated with any referrals."
              },
              "domain": {
                "type": "string",
                "description": "The domain of the click."
              },
              "expires_at": {
                "type": "integer",
                "description": "Time at which the click expires. Measured in seconds since the Unix epoch."
              },
              "referrer": {
                "type": "string",
                "nullable": true,
                "description": "The referring URL that the customer came from."
              },
              "url": {
                "type": "string",
                "description": "The URL where the click was tracked."
              },
              "affiliation": {
                "type": "string",
                "description": "The associated affiliation."
              },
              "previous_click": {
                "type": "string",
                "nullable": true,
                "description": "The associated previous click."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "commission_structure_base": {
        "properties": {
          "amount_commission": {
            "type": "number",
            "nullable": true,
            "description": "The default amount (in the `currency` of the store) of commission to be paid."
          },
          "percent_commission": {
            "type": "number",
            "nullable": true,
            "description": "The percentage of the checkout total to be paid to affiliates."
          },
          "recurring_commissions_enabled": {
            "type": "boolean",
            "description": "Whether or not to pay affiliates recurring commissions on subscriptions."
          },
          "recurring_commission_days": {
            "type": "integer",
            "nullable": true,
            "description": "The number of days to pay recurring commissions for."
          },
          "repeat_customer_commissions_enabled": {
            "type": "boolean",
            "description": "Whether or not to pay commissions to affiliates for repeat customers."
          },
          "repeat_customer_commission_days": {
            "type": "integer",
            "nullable": true,
            "description": "The number of days to pay commissions for repeat customers."
          }
        }
      },
      "coupon_base": {
        "allOf": [
          {
            "properties": {
              "archived": {
                "type": "boolean",
                "description": "Whether or not this coupon is archived."
              },
              "amount_off": {
                "type": "integer",
                "nullable": true,
                "description": "Amount (in the `currency` specified) that will be taken off the subtotal of any checkout."
              },
              "duration": {
                "type": "string",
                "description": "One of `forever`, `once`, and `repeating`. Describes how long a discount with this coupon will be applied. (The `repeating` and `forever` values only apply to subscriptions.)",
                "default": "once"
              },
              "duration_in_months": {
                "type": "integer",
                "nullable": true,
                "description": "If `duration` is `repeating`, the number of months the coupon applies. Null if coupon `duration` is `forever` or `once`."
              },
              "max_redemptions": {
                "type": "integer",
                "nullable": true,
                "description": "Maximum number of times this coupon can be redeemed in total across all customers."
              },
              "max_redemptions_per_customer": {
                "type": "integer",
                "nullable": true,
                "description": "Maximum number of times this coupon can be redeemed per customer."
              },
              "max_subtotal_amount": {
                "type": "integer",
                "nullable": true,
                "description": "The maximum `subtotal_amount` that is allowed for the coupon to be applicable to a checkout or subscription."
              },
              "min_subtotal_amount": {
                "type": "integer",
                "nullable": true,
                "description": "The minimum `subtotal_amount` that is required for the coupon to be applicable to a checkout or subscription."
              },
              "name": {
                "type": "string",
                "description": "Name of the coupon displayed to customers."
              },
              "percent_off": {
                "type": "number",
                "nullable": true,
                "description": "Percent that will be taken off the subtotal of any checkout. For example, a coupon with percent_off of `50` will make a $100 checkout $50 instead."
              },
              "product_ids": {
                "type": "array",
                "description": "An array of product IDs that this coupon applies to."
              },
              "redeem_by": {
                "type": "integer",
                "nullable": true,
                "description": "Date after which the coupon can no longer be redeemed."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_metadata"
          }
        ]
      },
      "coupon_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/coupon_base"
          },
          {
            "properties": {
              "promotions": {
                "type": "array",
                "description": "A list of this product's promotions. (This can only be set when creating a new coupon.)",
                "items": {
                  "$ref": "#/components/schemas/promotion_body"
                }
              }
            }
          }
        ]
      },
      "coupon_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/coupon_base"
          },
          {
            "properties": {
              "archived_at": {
                "type": "integer",
                "nullable": true,
                "description": "Time at which the object was archived. Measured in seconds since the Unix epoch."
              },
              "currency": {
                "type": "string",
                "description": "Three-letter ISO currency code, in lowercase. This value will match the `Account` currency."
              },
              "discounts": {
                "type": "object",
                "nullable": true,
                "description": "A list of associated discounts (only redeemed discounts)."
              },
              "expired": {
                "type": "boolean",
                "description": "Taking into account the above properties, whether this coupon can still be applied to a checkout."
              },
              "promotions": {
                "type": "object",
                "nullable": true,
                "description": "A list of associated promotions."
              },
              "times_redeemed": {
                "type": "integer",
                "description": "Number of times this coupon has been applied to a checkout and/or subscription."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_discarded_timestamp"
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "customer_base": {
        "properties": {
          "affiliation_expires_at": {
            "type": "integer",
            "nullable": true,
            "description": "Time at which the affiliation will expire."
          },
          "billing_matches_shipping": {
            "type": "boolean",
            "description": "If set to `true` the shipping address will be used for the billing address."
          },
          "email": {
            "type": "string",
            "description": "The customerâ€™s email address."
          },
          "first_name": {
            "type": "string",
            "nullable": true,
            "description": "The customerâ€™s first name."
          },
          "live_mode": {
            "type": "boolean",
            "description": "Set to `true` if this customer is in live mode, and set to `false` if it is in test mode."
          },
          "last_name": {
            "type": "string",
            "nullable": true,
            "description": "The customerâ€™s last name."
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "The customerâ€™s full name or business name. If set, this will take precedence over the separate `first_name` and `last_name` attributes."
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "description": "The customerâ€™s phone number."
          },
          "tax_enabled": {
            "type": "boolean",
            "description": "Whether or not tax should be calculated for checkouts associated with this customer."
          },
          "unsubscribed": {
            "type": "boolean",
            "description": "Set to `true` if this customer has unsubscribed from from opt-in emails (i.e. abandoned cart emails)."
          }
        }
      },
      "customer_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/customer_base"
          },
          {
            "properties": {
              "affiliation": {
                "type": "string",
                "description": "The affiliation associated with this customer."
              },
              "billing_address": {
                "description": "The billing address for the customer.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/address_body"
                  }
                ]
              },
              "default_payment_method": {
                "type": "string",
                "description": "The UUID of the default payment method."
              },
              "shipping_address": {
                "description": "The shipping address for the customer.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/address_body"
                  }
                ]
              },
              "tax_identifier": {
                "description": "The tax identifier to set for this customer.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/tax_identifier_body"
                  }
                ]
              }
            }
          }
        ]
      },
      "customer_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/customer_base"
          },
          {
            "properties": {
              "first_name": {
                "type": "string",
                "nullable": true,
                "description": "The customerâ€™s first name."
              },
              "indexed": {
                "type": "boolean",
                "description": "Whether or not this customer is included in the `/customers` list endpoint. Only customers that have been manually created or have a purchase are indexed."
              },
              "last_name": {
                "type": "string",
                "nullable": true,
                "description": "The customerâ€™s last name."
              },
              "affiliation": {
                "type": "object",
                "nullable": true,
                "description": "The affiliation associated with this customer."
              },
              "balances": {
                "type": "object",
                "nullable": true,
                "description": "A list of this customer's balances."
              },
              "billing_address": {
                "type": "string",
                "nullable": true,
                "description": "The billing address for the customer."
              },
              "default_payment_method": {
                "type": "string",
                "nullable": true,
                "description": "The default payment method for the customer."
              },
              "licenses": {
                "type": "object",
                "nullable": true,
                "description": "A list of this customer's licenses."
              },
              "portal_url": {
                "type": "string",
                "nullable": true,
                "description": "A URL that will redirect to this customer's correct portal page (hosted or external)."
              },
              "purchases": {
                "type": "object",
                "nullable": true,
                "description": "A list of this customer's purchases."
              },
              "shipping_address": {
                "type": "string",
                "nullable": true,
                "description": "The shipping address for the customer."
              },
              "tax_identifier": {
                "type": "string",
                "nullable": true,
                "description": "The associated tax identifier."
              },
              "reviews": {
                "type": "object",
                "nullable": true,
                "description": "A list of this customer's reviews."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "customer_link_body": {
        "properties": {
          "customer": {
            "type": "string",
            "description": "The UUID of the customer."
          }
        }
      },
      "customer_link_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "properties": {
              "customer": {
                "type": "string",
                "description": "The associated customer."
              },
              "expired": {
                "type": "boolean",
                "description": "Whether or not this customer link is valid."
              },
              "first_used_at": {
                "type": "integer",
                "nullable": true,
                "description": "Date when the customer link was first used."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "customer_notification_protocol_body": {
        "properties": {
          "free_order_enabled": {
            "type": "boolean",
            "description": "Whether or not order confirmation and subscription renewal emails will be sent to customers when the order is free."
          },
          "notifications_enabled": {
            "type": "boolean",
            "description": "Whether or not any notifications should be sent to customers. If `false` no notifications will be sent to customers and all other settings will be ignored."
          },
          "order_enabled": {
            "type": "boolean",
            "description": "Whether or not order confirmation emails will be sent to customers."
          },
          "payment_failure_enabled": {
            "type": "boolean",
            "description": "Whether or not subscription dunning emails will be sent to customers."
          },
          "purchase_enabled": {
            "type": "boolean",
            "description": "Whether or not product access emails will be sent to customers."
          },
          "refund_enabled": {
            "type": "boolean",
            "description": "Whether or not refund emails will be sent to customers."
          },
          "subscription_cancellation_enabled": {
            "type": "boolean",
            "description": "Whether or not subscription cancellation emails will be sent to customers."
          },
          "subscription_reminder_enabled": {
            "type": "boolean",
            "description": "Whether or not subscription reminder emails will be sent to customers."
          },
          "subscription_renewal_enabled": {
            "type": "boolean",
            "description": "Whether or not subscription renewal emails will be sent to customers."
          },
          "from_name": {
            "type": "string",
            "nullable": true,
            "description": "The from name to use when sending emails to customers."
          },
          "reply_to_email": {
            "type": "string",
            "nullable": true,
            "description": "The reply-to email address to use when sending emails to customers."
          },
          "upsell_accepted_enabled": {
            "type": "boolean",
            "description": "Whether or not post purchase offer accepted emails will be sent to customers."
          }
        }
      },
      "customer_notification_protocol_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/customer_notification_protocol_body"
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "customer_portal_protocol_body": {
        "properties": {
          "back_url": {
            "type": "string",
            "nullable": true,
            "description": "The back URL that is shown to customers on the customer portal. This can be overridden by a `back_url` on a `CustomerPortalSession`."
          },
          "external_enabled": {
            "type": "boolean",
            "description": "Whether or not an external customer portal is being used."
          },
          "external_url": {
            "type": "string",
            "nullable": true,
            "description": "If `external_enabled=true`, where is the external portal hosted? If empty, the store's URL is used."
          },
          "login_enabled": {
            "type": "boolean",
            "description": "Whether or not customer's can login with their email and a verification code on the hosted customer portal. If disabled, the only way to authenticate a customer is with a `CustomerPortalSession`."
          },
          "privacy_url": {
            "type": "string",
            "nullable": true,
            "description": "The privacy policy link that is shown to customers on the customer portal."
          },
          "subscription_cancellations_enabled": {
            "type": "boolean",
            "description": "Whether or not customers can cancel subscriptions from the customer portal."
          },
          "subscription_updates_enabled": {
            "type": "boolean",
            "description": "Whether or not customers can make subscription changes from the customer portal."
          },
          "subscription_quantity_updates_enabled": {
            "type": "boolean",
            "description": "Whether or not customers can change subscription quantities from the customer portal."
          },
          "terms_url": {
            "type": "string",
            "nullable": true,
            "description": "The terms of service link that is shown to customers on the customer portal."
          },
          "wordpress_plugin_enabled": {
            "type": "boolean",
            "description": "Whether or not the WordPress plugin is hosting the customer portal."
          }
        }
      },
      "customer_portal_protocol_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/customer_portal_protocol_body"
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "discount_body": {
        "properties": {
          "coupon": {
            "type": "string",
            "description": "The UUID of the coupon."
          },
          "promotion_code": {
            "type": "string",
            "description": "The customer-facing code that will be used to lookup the promotion."
          }
        }
      },
      "discount_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "properties": {
              "discount_amount": {
                "type": "integer",
                "description": "The total discount amount applied to the associated checkout."
              },
              "primary": {
                "type": "boolean",
                "description": "Whether or not this discount is a primary or secondary discount. Primary discounts are the first discount in a series of discounts when the associated coupon can be used multiple times. Secondary discounts are the subsequent discounts in the series."
              },
              "redeemable_status": {
                "type": "string",
                "description": "The status indicating if this discount can be redeemed (finalized with) or not and why. Possible values are `invalid`, `gone`, `expired`, `less_than_min_subtotal_amount`, greater_than_max_subtotal_amount`, `not_applicable`, `not_applicable_to_customer`, or `redeemable`."
              },
              "used_up": {
                "type": "boolean",
                "description": "Whether or not this discount has been used up. If not used up, this discount will create secondary discounts on future checkouts."
              },
              "checkout": {
                "type": "string",
                "description": "The associated checkout."
              },
              "coupon": {
                "type": "string",
                "description": "The associated coupon."
              },
              "customer": {
                "type": "string",
                "nullable": true,
                "description": "The associated customer."
              },
              "primary_discount": {
                "type": "string",
                "nullable": true,
                "description": "The associated primary discount."
              },
              "promotion": {
                "type": "string",
                "nullable": true,
                "description": "The associated promotion."
              },
              "secondary_discounts": {
                "type": "object",
                "nullable": true,
                "description": "The associated secondary discounts."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "display_currency_body": {
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three-letter ISO currency code, in lowercase."
          }
        }
      },
      "display_currency_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/display_currency_body"
          },
          {
            "properties": {
              "current_exchange_rate": {
                "type": "number",
                "description": "The current exchange rate from the account's default currency to this display currency."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "dispute_base": {
        "allOf": [
          {
            "properties": {
              "amount": {
                "type": "integer",
                "description": "The amount in cents that is disputed, represented as a whole integer. For example `9900` is equivalent to `$99`."
              },
              "currency": {
                "type": "string",
                "description": "Three-letter ISO currency code, in lowercase."
              },
              "external_dispute_id": {
                "type": "string",
                "description": "The external processor ID representing this dispute."
              },
              "live_mode": {
                "type": "boolean",
                "description": "Set to `true` if this dispute is in live mode, and set to `false` if it is in test mode."
              },
              "processor_type": {
                "type": "string",
                "description": "The type of associated processor â€“ one of `mock`, `mollie`, `paypal`, `paystack`, or `stripe`."
              },
              "status": {
                "type": "string",
                "description": "The current status of this dispute, which can be one of `pending`, `won`, or `lost`."
              }
            }
          }
        ]
      },
      "dispute_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/dispute_base"
          },
          {
            "properties": {
              "charge": {
                "type": "string",
                "description": "The associated charge."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "download_base": {
        "properties": {
          "alt": {
            "type": "string",
            "nullable": true,
            "description": "The HTML alt attribute for the download."
          },
          "archived": {
            "type": "boolean",
            "description": "Whether or not this download is archived."
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "The name of this download which will be visible to customers. This is required if a `url` is used instead of attaching a `Media` record."
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "The HTML title attribute for the download."
          },
          "url": {
            "type": "string",
            "nullable": true,
            "description": "Instead of attaching a `Media` record a public URL can be set. If set, customers will be directed to this URL."
          }
        }
      },
      "download_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/download_base"
          },
          {
            "properties": {
              "media": {
                "type": "string",
                "description": "The UUID of the media."
              },
              "product": {
                "type": "string",
                "description": "The UUID of the product."
              }
            }
          }
        ]
      },
      "download_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/download_base"
          },
          {
            "properties": {
              "archived_at": {
                "type": "integer",
                "nullable": true,
                "description": "Time at which the object was archived. Measured in seconds since the Unix epoch."
              },
              "media": {
                "type": "string",
                "nullable": true,
                "description": "The associated media."
              },
              "product": {
                "type": "string",
                "description": "The associated product."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "event_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "properties": {
              "account": {
                "type": "string",
                "description": "The associated account."
              },
              "created_at": {
                "type": "integer",
                "description": "Time at which the object was created. Measured in seconds since the Unix epoch."
              },
              "type": {
                "type": "string",
                "description": "Description of the event (e.g., subscription.updated or charge.updated)."
              }
            }
          }
        ]
      },
      "export_body": {
        "allOf": [
          {
            "properties": {
              "type": {
                "type": "string",
                "description": "The type of export â€“ one of `charges`, `coupons`, `customers`, `orders`, `prices`, `promotions`, `refunds`, `subscriptions`."
              },
              "email": {
                "type": "string",
                "description": "The email where the export will be sent."
              }
            }
          }
        ]
      },
      "export_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/export_body"
          },
          {
            "properties": {
              "file_url": {
                "type": "string",
                "nullable": true,
                "description": "The URL for accessing the export file."
              },
              "status": {
                "type": "string",
                "description": "The status of the export â€“ one of `pending`, `processed`, or `sent`."
              },
              "record_count": {
                "type": "number",
                "description": "The number of records that were exported."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "fee_base": {
        "properties": {
          "amount": {
            "type": "integer",
            "description": "The amount in cents to be added or subtracted, represented as an integer. For example `9900` is equivalent to `$99`."
          },
          "description": {
            "type": "string",
            "description": "A short description of the fee."
          }
        }
      },
      "fee_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/fee_base"
          },
          {
            "properties": {
              "line_item": {
                "type": "string",
                "description": "The UUID of the line_item."
              }
            }
          }
        ]
      },
      "fee_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/fee_base"
          },
          {
            "properties": {
              "fee_type": {
                "type": "string",
                "description": "The type of fee â€“ one of `auto`, `bump`, `manual`, `setup`, `upsell`."
              },
              "line_item": {
                "type": "string",
                "description": "The associated line_item."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "fulfillment_base": {
        "allOf": [
          {
            "properties": {
              "notifications_enabled": {
                "type": "boolean",
                "description": "Whether or not notifications should be sent to customers when fulfillments are created and updated."
              },
              "shipment_status": {
                "type": "string",
                "description": "The current shipment status of this fulfillment â€“ one of `unshippable`, `unshipped`, `shipped`, or `delivered`."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_metadata"
          }
        ]
      },
      "fulfillment_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/fulfillment_base"
          },
          {
            "properties": {
              "order": {
                "type": "string",
                "description": "The UUID of the order."
              },
              "fulfillment_items": {
                "type": "array",
                "description": "A list of this fulfillement's items.",
                "items": {
                  "$ref": "#/components/schemas/fulfillment_item_body"
                }
              },
              "trackings": {
                "type": "array",
                "description": "A list of this fulfillement's trackings.",
                "items": {
                  "$ref": "#/components/schemas/tracking_body"
                }
              }
            }
          }
        ]
      },
      "fulfillment_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/fulfillment_base"
          },
          {
            "properties": {
              "g_weight": {
                "type": "number",
                "description": "Total weight of the entire fulfillment in grams."
              },
              "number": {
                "type": "string",
                "description": "The unique identifier for this fulfillment that is auto generated based on this account's order protocol."
              },
              "order": {
                "type": "string",
                "description": "The associated order."
              },
              "fulfillment_items": {
                "type": "object",
                "nullable": true,
                "description": "A list of associated fulfillment items."
              },
              "trackings": {
                "type": "object",
                "nullable": true,
                "description": "A list of associated trackings."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "fulfillment_item_base": {
        "allOf": [
          {
            "properties": {
              "quantity": {
                "type": "integer",
                "description": "The quantity of products being fulfilled. This must be less than or equal to the remaining unfulfilled quantity of the associated line item."
              }
            }
          }
        ]
      },
      "fulfillment_item_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/fulfillment_item_base"
          },
          {
            "properties": {
              "line_item": {
                "type": "string",
                "description": "The UUID of the line item."
              }
            }
          }
        ]
      },
      "fulfillment_item_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/fulfillment_item_base"
          },
          {
            "properties": {
              "g_weight": {
                "type": "number",
                "description": "Total weight of all items (quantity * unit_g_weight) in grams."
              },
              "unit_g_weight": {
                "type": "number",
                "description": "Total weight of the product in grams."
              },
              "fulfillment": {
                "type": "string",
                "description": "The associated fulfillment."
              },
              "line_item": {
                "type": "string",
                "description": "The associated line item."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "product_import_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/product_body"
          },
          {
            "properties": {
              "prices": {
                "type": "array",
                "description": "Array of prices to create for this product.",
                "items": {
                  "$ref": "#/components/schemas/price_base"
                }
              },
              "product_medias": {
                "type": "array",
                "description": "Array of product media to attach to this product.",
                "items": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "The URL of the media to attach."
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "import_products_body": {
        "properties": {
          "data": {
            "type": "array",
            "description": "Array of products to import.",
            "items": {
              "$ref": "#/components/schemas/product_import_body"
            }
          }
        }
      },
      "import_coupons_body": {
        "properties": {
          "data": {
            "type": "array",
            "description": "Array of coupons to import.",
            "items": {
              "$ref": "#/components/schemas/coupon_body"
            }
          }
        }
      },
      "import_product_collections_body": {
        "properties": {
          "data": {
            "type": "array",
            "description": "Array of product collections to import.",
            "items": {
              "$ref": "#/components/schemas/product_collection_body"
            }
          }
        }
      },
      "import_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "properties": {
              "import_type": {
                "type": "string",
                "description": "The type of record imported â€“ one of `customer`, `product`, `coupon`, `purchase`, or `subscription`."
              },
              "import_rows": {
                "type": "array",
                "description": "A list of associated import rows."
              },
              "rows_imported": {
                "type": "integer",
                "description": "The number of rows successfully imported."
              },
              "status": {
                "type": "string",
                "description": "The status of the import â€“ one of `completed`, `invalid`, `pending`, or `processing`."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "import_row_base": {
        "properties": {
          "failure_reason": {
            "type": "string",
            "nullable": true,
            "description": "The reason for the import failure, if applicable."
          },
          "import_data": {
            "type": "object",
            "description": "The data to be imported."
          },
          "import_row_type": {
            "type": "string",
            "description": "The type of record to import â€“ one of `coupon` or `product`"
          },
          "status": {
            "type": "string",
            "description": "The status of the import row â€“ one of `pending`, `succeeded`, or `failed`."
          }
        }
      },
      "import_row_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/import_row_base"
          },
          {
            "properties": {
              "import": {
                "type": "string",
                "description": "The UUID of associated import."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "invoice_body": {
        "allOf": [
          {
            "properties": {
              "automatic_collection": {
                "type": "boolean",
                "description": "Whether or not the invoice should be paid automatically using one of the customer's payment methods. The specific payment method will need to passed to the `/open` endpoint."
              },
              "due_date": {
                "type": "integer",
                "nullable": true,
                "description": "The date on which payment for this invoice is due. Measured in seconds since the Unix epoch."
              },
              "footer": {
                "type": "string",
                "nullable": true,
                "description": "Additional footer text to be displayed on the invoice."
              },
              "issue_date": {
                "type": "integer",
                "nullable": true,
                "description": "The date on which the invoice was issued. Measured in seconds since the Unix epoch."
              },
              "live_mode": {
                "type": "boolean",
                "description": "Whether or not the invoice is in live mode."
              },
              "memo": {
                "type": "string",
                "nullable": true,
                "description": "Additional memo text to be displayed on the invoice."
              },
              "notifications_enabled": {
                "type": "boolean",
                "description": "Whether or not notifications should be sent to customers when an invoice is opened and when it reaches its due date."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_metadata"
          }
        ]
      },
      "invoice_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/invoice_body"
          },
          {
            "properties": {
              "notification_sent_at": {
                "type": "integer",
                "nullable": true,
                "description": "The time at which the invoice notification was sent. Measured in seconds since the Unix epoch."
              },
              "order_number": {
                "type": "string",
                "nullable": true,
                "description": "The order number associated with this invoice."
              },
              "portal_url": {
                "type": "string",
                "nullable": true,
                "description": "A URL that will redirect to this invoice's correct portal page (hosted or external)."
              },
              "reminder_notification_sent_at": {
                "type": "integer",
                "nullable": true,
                "description": "The time at which the reminder notification was sent. Measured in seconds since the Unix epoch."
              },
              "status": {
                "type": "string",
                "description": "The current status of this invoice, which can be one of `draft`, `open`, `paid` or void."
              },
              "checkout": {
                "type": "string",
                "description": "The associated checkout."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "license_base": {
        "properties": {
          "activation_limit": {
            "type": "integer",
            "nullable": true,
            "description": "The max number of activations allowed. If set to `null` then unlimited activations are allowed."
          },
          "key": {
            "type": "string",
            "description": "The unique identifier for this license. The default generated value is a UUID, but this can be set to any unique value within the scope of this account."
          }
        }
      },
      "license_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/license_base"
          },
          {
            "properties": {
              "purchase": {
                "type": "string",
                "description": "The UUID of the purchase."
              }
            }
          }
        ]
      },
      "license_base_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/license_base"
          },
          {
            "properties": {
              "activations_count": {
                "type": "integer",
                "description": "The current number of activations."
              },
              "revokes_at": {
                "type": "integer",
                "nullable": true,
                "description": "Time at which the license will be revoked. Measured in seconds since the Unix epoch."
              },
              "status": {
                "type": "string",
                "description": "The status of this license which is one of `active`, `inactive`, or `revoked`. If the associated purchase is revoked then the license will be `revoked`. If the license has one or more activations then it will be `active`, otherwise it will be `inactive`."
              }
            }
          }
        ]
      },
      "license_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/license_base_response"
          },
          {
            "properties": {
              "customer": {
                "type": "string",
                "description": "The associated customer."
              },
              "purchase": {
                "type": "string",
                "description": "The associated purchase."
              },
              "activations": {
                "type": "object",
                "nullable": true,
                "description": "The associated activations."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "line_item_base": {
        "properties": {
          "ad_hoc_amount": {
            "type": "integer",
            "nullable": true,
            "description": "The amount to use for this line item when the associated price is `ad_hoc=true`."
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of products being purchased."
          },
          "note": {
            "type": "string",
            "nullable": true,
            "description": "A custom note for this line item. Useful for adding context or special instructions related to the product or purchase."
          }
        }
      },
      "line_item_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/line_item_base"
          },
          {
            "properties": {
              "bump": {
                "type": "string",
                "description": "The UUID of the bump."
              },
              "checkout": {
                "type": "string",
                "description": "The UUID of the checkout."
              },
              "price": {
                "type": "string",
                "description": "The UUID of the price."
              },
              "upsell": {
                "type": "string",
                "description": "The UUID of the upsell."
              },
              "variant": {
                "type": "string",
                "description": "The UUID of the variant."
              }
            }
          }
        ]
      },
      "line_item_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/line_item_base"
          },
          {
            "properties": {
              "bump": {
                "type": "string",
                "nullable": true,
                "description": "The associated bump."
              },
              "checkout": {
                "type": "string",
                "description": "The associated checkout."
              },
              "checkout_fees_amount": {
                "type": "integer",
                "description": "The total amount of checkout fees applied to this line item."
              },
              "discount_amount": {
                "type": "integer",
                "description": "Total discount amount applied to this line item."
              },
              "fees_amount": {
                "type": "integer",
                "description": "The total amount of fees applied to this line item."
              },
              "full_amount": {
                "type": "integer",
                "description": "The full amount to be charged across all periods."
              },
              "fulfilled_quantity": {
                "type": "integer",
                "description": "The quantity of products that have been fulfilled."
              },
              "g_weight": {
                "type": "number",
                "description": "Total weight of all items (quantity * unit_g_weight) in grams."
              },
              "locked": {
                "type": "boolean",
                "description": "Whether or not this line item is locked. If locked, it cannot be edited or deleted. Line items are locked when an invoice is opened."
              },
              "price": {
                "type": "string",
                "description": "The associated price."
              },
              "unit_g_weight": {
                "type": "number",
                "description": "Total weight of the product in grams."
              },
              "purchasable_status": {
                "type": "string",
                "description": "The status indicating if this line item can be purchased (finalized with) or not and why. Possible values are `price_gone`, `price_old_version`, `variant_mising`, `variant_gone`, `variant_old_version`, `out_of_stock`, `exceeds_purchase_limit`, or `purchasable`."
              },
              "scratch_amount": {
                "type": "integer",
                "description": "The amount in cents that should be shown as the original amount before any price reductions, also known as the pre-sale price."
              },
              "stock_held": {
                "type": "boolean",
                "description": "Whether or not stock is being held for this line item. (This only applies to the quantity that has not been fulfilled.)"
              },
              "subtotal_amount": {
                "type": "integer",
                "description": "Total before any discounts or taxes are applied."
              },
              "swap": {
                "type": "string",
                "nullable": true,
                "description": "The associated swap."
              },
              "tax_amount": {
                "type": "integer",
                "description": "Total tax amount."
              },
              "tax_rate": {
                "type": "number",
                "description": "The tax rate for this line item."
              },
              "total_amount": {
                "type": "integer",
                "description": "Total after discounts and taxes are applied."
              },
              "total_savings_amount": {
                "type": "integer",
                "description": "The total amount in cents that was saved on this line item taking into account all negative fees, discounts, and all price `scratch_amount` values."
              },
              "trial": {
                "type": "boolean",
                "description": "Set to `true` if this line item is for a price that has a trial."
              },
              "trial_amount": {
                "type": "integer",
                "description": "The total amount in cents that is removed from this line item due to a trial period."
              },
              "upsell": {
                "type": "string",
                "nullable": true,
                "description": "The associated upsell."
              },
              "variant": {
                "type": "string",
                "nullable": true,
                "description": "The associated variant."
              },
              "variant_options": {
                "type": "array",
                "nullable": true,
                "description": "An array of the associated variant's options."
              },
              "variant_option_names": {
                "type": "array",
                "nullable": true,
                "description": "An array of the associated product's variant option names."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "manual_charge_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "properties": {
              "amount": {
                "type": "integer",
                "description": "The amount in cents that was charged, represented as a whole integer. For example `9900` is equivalent to `$99`."
              },
              "currency": {
                "type": "string",
                "description": "Three-letter ISO currency code, in lowercase."
              },
              "checkout": {
                "type": "string",
                "nullable": true,
                "description": "The associated checkout."
              },
              "manual_payment_method": {
                "type": "string",
                "nullable": true,
                "description": "The associated manual payment method."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "manual_payment_method_body": {
        "properties": {
          "archived": {
            "type": "boolean",
            "description": "Whether or not this manual payment method is archived."
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "The description of this payment method that will be shown in the checkout."
          },
          "instructions": {
            "type": "string",
            "nullable": true,
            "description": "The instructions that you want your customers to follow to pay for an order. These instructions are shown on the confirmation page after a customer completes the checkout."
          },
          "name": {
            "type": "string",
            "description": "The name of this manual payment method."
          },
          "reuseable": {
            "type": "boolean",
            "decription": "Whether or not this manual payment method can be reused."
          }
        }
      },
      "manual_payment_method_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/manual_payment_method_body"
          },
          {
            "properties": {
              "archived_at": {
                "type": "integer",
                "nullable": true,
                "description": "Time at which the object was archived. Measured in seconds since the Unix epoch."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_discarded_timestamp"
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "media_body": {
        "properties": {
          "alt": {
            "type": "string",
            "nullable": true,
            "description": "The HTML alt attribute for the media."
          },
          "direct_upload_signed_id": {
            "type": "string",
            "description": "The signed_id from the direct upload."
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "The HTML title attribute for the media."
          }
        }
      },
      "media_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "properties": {
              "byte_size": {
                "type": "integer",
                "description": "The size of the media in bytes."
              },
              "content_type": {
                "type": "string",
                "description": "The content type (i.e. image/png, image/jpg, application/pdf)."
              },
              "extension": {
                "type": "string",
                "description": "The extension (i.e. png, jpg, pdf)."
              },
              "filename": {
                "type": "string",
                "description": "The full filename with extension."
              },
              "height": {
                "type": "string",
                "nullable": true,
                "description": "If the media is an image, this will be the height in pixels."
              },
              "public_access": {
                "type": "boolean",
                "description": "Whether or not this media is publicly accessible."
              },
              "release_json": {
                "type": "object",
                "nullable": true,
                "description": "The JSON that was extracted from the `release.json` file within the ZIP file."
              },
              "url": {
                "type": "string",
                "nullable": true,
                "description": "The URL for accessing this media. If the media is public, this will be a permanent URL. If the media is private, this will be a short-lived URL if the media has been exposed."
              },
              "url_expires_at": {
                "type": "integer",
                "nullable": true,
                "description": "The time at which the URL expires. This will only be present if the media is private and has been exposed."
              },
              "width": {
                "type": "string",
                "nullable": true,
                "description": "If the media is an image, this will be the width in pixels."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "note_body": {
        "allOf": [
          {
            "properties": {
              "notable_type": {
                "type": "string",
                "description": "The type of object that this note belongs to â€“ one of `customer`, `order`, or `subscription`."
              },
              "notable_id": {
                "type": "string",
                "description": "The ID of the object that this note belongs to."
              },
              "body": {
                "type": "string",
                "description": "The body of the note."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_metadata"
          }
        ]
      },
      "note_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/note_body"
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "order_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "properties": {
              "checkout": {
                "type": "string",
                "description": "The associated checkout."
              },
              "fulfillment_status": {
                "type": "string",
                "description": "The overall fulfillment status of this order based on all fulfillments â€“ one of `fulfilled`, `partially_fulfilled`, or `unfulfilled`."
              },
              "live_mode": {
                "type": "boolean",
                "description": "Set to `true` if this order is in live mode, and set to `false` if it is in test mode."
              },
              "number": {
                "type": "string",
                "description": "The unique identifier for this order that is auto generated based on this account's order protocol."
              },
              "order_type": {
                "type": "string",
                "description": "One of either `checkout` or `subscription`."
              },
              "portal_url": {
                "type": "string",
                "nullable": true,
                "description": "A URL that will redirect to this order's correct portal page (hosted or external)."
              },
              "return_status": {
                "type": "string",
                "description": "The overall return status of this order based on all return requests â€“ one of `not_returned`, `partially_returned`, `return_request_open`, or `returned`."
              },
              "shipment_status": {
                "type": "string",
                "description": "The overall shipment status of this order based on all fulfillments â€“ one of `unshippable`, `unshipped`, `shipped`, `partially_shipped`, or `delivered`."
              },
              "statement_url": {
                "type": "string",
                "nullable": true,
                "description": "The link to view and download the \"invoice\" or \"receipt\" statement of this order."
              },
              "status": {
                "type": "string",
                "description": "The current status of this order, which can be one of `draft`, `paid`, `payment_failed`, `processing`, or `void`."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "order_protocol_body": {
        "properties": {
          "inherit_customer_enabled": {
            "type": "boolean",
            "description": "Each order has a series of attributes `inherited_billing_address`, `inherited_shipping_address`, `inherited_tax_identifier`, `inherited_name`, `inherited_phone`, and `inherited_email`.\nIf this is enabled, the order will inherit these attributes from the customer when they are not present on the associated checkout.\nThis allows changes to a customers details to be reflected on past orders and statements."
          },
          "footer": {
            "type": "string",
            "nullable": true,
            "description": "The default footer that is shown on all order statements (i.e. invoices and receipts)."
          },
          "memo": {
            "type": "string",
            "nullable": true,
            "description": "The default memo that is shown on all order statements (i.e. invoices and receipts)."
          },
          "next_sequential_number": {
            "type": "integer",
            "description": "Specified to change the next sequential number to be used. If changed, must be larger than the highest current sequential number."
          },
          "number_prefix": {
            "type": "string",
            "nullable": true,
            "description": "The prefix that is added to all order numbers. Must be between 3-12 characters and only include letters."
          },
          "number_type": {
            "type": "string",
            "description": "The type of number to use for orders â€“ one of `sequential` or `token`."
          },
          "require_reusable_payment_methods": {
            "type": "boolean",
            "decription": "Whether or not to force all payment methods to be reusable even if a checkout does not contain a subscription."
          },
          "upsells_expire_after_minutes": {
            "type": "integer",
            "description": "The number of minutes after an order is paid that upsells will be available for."
          }
        }
      },
      "order_protocol_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/order_protocol_body"
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "payment_intent_base": {
        "properties": {
          "amount": {
            "type": "integer",
            "description": "The amount intended to be collected by this payment intent."
          },
          "payment_method_type": {
            "type": "string",
            "description": "The payment method type to use for this payment intent. This is only applicable for `mollie` processors."
          },
          "return_url": {
            "type": "string",
            "description": "The URL the customer will be redirected to after the payment process. This is only applicable for `mollie` processors."
          }
        }
      },
      "payment_intent_full_base": {
        "allOf": [
          {
            "$ref": "#/components/schemas/payment_intent_base"
          },
          {
            "properties": {
              "live_mode": {
                "type": "boolean",
                "description": "Set to `true` if this checkout is in live mode, and set to `false` if it is in test mode."
              },
              "processor_type": {
                "type": "string",
                "description": "The processor being used for this checkout. The only allowed processors right now are `stripe` and `paypal`."
              }
            }
          }
        ]
      },
      "payment_intent_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/payment_intent_full_base"
          },
          {
            "properties": {
              "customer": {
                "type": "string",
                "description": "The UUID of the customer."
              }
            }
          }
        ]
      },
      "payment_intent_update_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/payment_intent_base"
          },
          {
            "properties": {
              "customer": {
                "type": "string",
                "description": "The UUID of the customer."
              }
            }
          }
        ]
      },
      "payment_intent_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/payment_intent_full_base"
          },
          {
            "properties": {
              "currency": {
                "type": "string",
                "description": "Three-letter ISO currency code, in lowercase. This value will match the `Account` currency."
              },
              "customer": {
                "type": "string",
                "nullable": true,
                "description": "The associated customer."
              },
              "external_intent_id": {
                "type": "string",
                "description": "The external ID necessary to capture payment through this processor. For example, if processing through Stripe, the `external_intent_id` will be set to the `Stripe::PaymentIntent` ID."
              },
              "off_session": {
                "type": "boolean",
                "description": "Set to true to indicate that the customer is not in the checkout flow during the payment attempt. When `off_session=true` payment collection will be attempted immediately."
              },
              "payment_method": {
                "type": "string",
                "nullable": true,
                "description": "The associated payment method."
              },
              "platform_fee": {
                "type": "string",
                "nullable": true,
                "description": "The associated platform fee."
              },
              "processor_data": {
                "type": "object",
                "description": "All of the additional data necessary to capture payment with this processor."
              },
              "reusable": {
                "type": "boolean",
                "description": "Whether or not the payment method that is generated from this payment intent should be reusable or not."
              },
              "service_fee": {
                "type": "string",
                "nullable": true,
                "description": "The associated service fee (agency commission)."
              },
              "status": {
                "type": "string",
                "description": "The status of this payment intent, one of `pending`, `canceled`, `failed`, `processing`, `requires_action`, `requires_capture`, or `succeeded`."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "payment_method_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "properties": {
              "external_payment_method_id": {
                "type": "string",
                "description": "The external processor ID representing this payment method."
              },
              "live_mode": {
                "type": "boolean",
                "description": "Set to `true` if this charge is in live mode, and set to `false` if it is in test mode."
              },
              "processor_type": {
                "type": "string",
                "description": "The specific type of processor. The only allowed processors right now are `stripe` and `paypal`."
              },
              "reusable": {
                "type": "boolean",
                "description": "Whether or not this payment method can be reused. Only reusable payment methods can be attached to subscriptions and set as a customer's default."
              },
              "supported_currencies": {
                "type": "array",
                "nullable": true,
                "description": "A list of currencies that this payment method supports. If `null`, this payment method supports all currencies."
              },
              "type": {
                "type": "string",
                "description": "The type of payment method. One of `bank_account, `card`, `payment_instrument`, or `paypal_account`."
              },
              "bank_account": {
                "type": "string",
                "nullable": true,
                "description": "The associated bank account."
              },
              "card": {
                "type": "string",
                "nullable": true,
                "description": "The associated card."
              },
              "customer": {
                "type": "string",
                "nullable": true,
                "description": "The associated customer."
              },
              "payment_instrument": {
                "type": "string",
                "nullable": true,
                "description": "The associated payment instrument."
              },
              "paypal_account": {
                "type": "string",
                "nullable": true,
                "description": "The associated paypal account."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "payout_base": {
        "properties": {
          "description": {
            "type": "string",
            "nullable": true,
            "description": "An optional brief description of what this payout is for."
          },
          "end_date": {
            "type": "integer",
            "description": "All approved referrals through this day will be included in the payout."
          },
          "live_mode": {
            "type": "boolean",
            "description": "Set to `true` if this payout is in live mode, and set to `false` if it is in test mode."
          },
          "manual": {
            "type": "boolean",
            "description": "Whether or not this payout was created manually or automatically from approved referrals."
          },
          "total_commission_amount": {
            "type": "integer",
            "description": "The amount in cents that will be paid out to the affiliate. For manual payouts, this is set directly. For automatic payouts, this is calculated from the sum of approved referrals."
          }
        }
      },
      "payout_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/payout_base"
          },
          {
            "properties": {
              "affiliation": {
                "type": "string",
                "description": "The UUID of the affiliation."
              }
            }
          }
        ]
      },
      "payout_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/payout_base"
          },
          {
            "properties": {
              "currency": {
                "type": "string",
                "description": "Three-letter ISO currency code, in lowercase. If not set, this value will fallback to the default `Account` currency."
              },
              "status": {
                "type": "string",
                "description": "The status of the payout â€“ one of `completed` or `processing`."
              },
              "affiliation": {
                "type": "string",
                "description": "The associated affiliation."
              },
              "payout_group": {
                "type": "string",
                "nullable": true,
                "description": "The associated payout group."
              },
              "payout_email": {
                "type": "string",
                "nullable": true,
                "description": "The affiliate's payout email address."
              },
              "referrals": {
                "type": "object",
                "nullable": true,
                "description": "A list of associated referrals."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "payout_group_body": {
        "properties": {
          "end_date": {
            "type": "integer",
            "description": "All approved referrals through this day will be included in the payout."
          },
          "live_mode": {
            "type": "boolean",
            "description": "Set to `true` if this payout group is in live mode, and set to `false` if it is in test mode."
          },
          "min_commission_amount": {
            "type": "integer",
            "nullable": true,
            "description": "The minimum amount of commission that must be earned before a payout is generated for an affiliate."
          }
        }
      },
      "payout_group_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/payout_group_body"
          },
          {
            "properties": {
              "currency": {
                "type": "string",
                "description": "The currency of the payout group."
              },
              "payouts": {
                "type": "object",
                "nullable": true,
                "description": "A list of associated payouts."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "period_body": {
        "properties": {
          "end_at": {
            "type": "integer",
            "nullable": true,
            "description": "End of the period. This will be `null` when the period is for a subscription with a one-time price."
          }
        }
      },
      "period_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/period_body"
          },
          {
            "properties": {
              "ad_hoc_amount": {
                "type": "integer",
                "nullable": true,
                "description": "The amount to use for this period when the associated price is `ad_hoc=true`."
              },
              "next_payment_retry_at": {
                "type": "integer",
                "nullable": true,
                "description": "The time at which payment will be automatically retried."
              },
              "payment_retry_count": {
                "type": "integer",
                "description": "Number of payment retries made for this period, from the perspective of the payment retry schedule. Only automatic retries increment the count."
              },
              "payoff": {
                "type": "boolean",
                "description": "Indicates whether or not this period paid off all remaining periods."
              },
              "quantity": {
                "type": "integer",
                "description": "The quantity of products being purchased."
              },
              "renewal": {
                "type": "boolean",
                "description": "Whether or not this period has been generated automatically for a subscription renewal."
              },
              "renewal_reminder_sent_at": {
                "type": "integer",
                "nullable": true,
                "description": "The time at which the renewal reminder notification was sent to the customer."
              },
              "restoral": {
                "type": "boolean",
                "description": "Whether or not this period was generated from a subscription restoral."
              },
              "skip_proration": {
                "type": "boolean",
                "description": "Whether or not proration should be skipped when generating this period's checkout."
              },
              "start_at": {
                "type": "integer",
                "nullable": true,
                "description": "Start of the period."
              },
              "status": {
                "type": "string",
                "description": "The current status of this period, which can be one of `pending`, `payment_failed`, `paid`, `processing`, or `void`."
              },
              "checkout": {
                "type": "string",
                "nullable": true,
                "description": "The associated checkout."
              },
              "price": {
                "type": "string",
                "description": "The associated price."
              },
              "subscription": {
                "type": "string",
                "description": "The associated subscription."
              },
              "variant": {
                "type": "string",
                "nullable": true,
                "description": "The associated variant."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "price_base": {
        "allOf": [
          {
            "properties": {
              "ad_hoc": {
                "type": "boolean",
                "default": false,
                "description": "Whether or not this price accepts ad hoc amounts â€“ also known as custom or user-defined amounts."
              },
              "ad_hoc_max_amount": {
                "type": "integer",
                "nullable": true,
                "description": "The maximum ad hoc amount in cents to be allowed, represented as a whole integer. For example `9900` is equivalent to `$99`."
              },
              "ad_hoc_min_amount": {
                "type": "integer",
                "nullable": true,
                "description": "The minimum ad hoc amount in cents to be allowed, represented as a whole integer. For example `9900` is equivalent to `$99`. If left blank, this will be interpreted as `0`."
              },
              "amount": {
                "type": "integer",
                "nullable": true,
                "description": "The amount in cents to be charged, represented as a whole integer. For example `9900` is equivalent to `$99`. If `ad_hoc=true` the `amount` is optional."
              },
              "archived": {
                "type": "boolean",
                "description": "Whether or not this price is archived."
              },
              "license_activation_limit": {
                "type": "integer",
                "nullable": true,
                "description": "The max number of activations allowed per license. If `null`, this value will inherit from the value set on `Product`."
              },
              "name": {
                "type": "string",
                "nullable": true,
                "description": "The price name, meant to be displayable to the customer."
              },
              "portal_subscription_update_enabled": {
                "type": "boolean",
                "description": "Whether existing subscriptions can be switched to this price from the customer dashboard. If set to false, existing subscriptions cannot be switched to this price, preventing customers from upgrading or downgrading their subscription to this price option."
              },
              "position": {
                "type": "integer",
                "nullable": true,
                "description": "The ordering position of this price when displayed to customers."
              },
              "recurring_interval": {
                "type": "string",
                "nullable": true,
                "description": "The frequency at which a subscription is billed. One of `day`, `week`, `month`, or `year`. Only applicable during creation."
              },
              "recurring_interval_count": {
                "type": "integer",
                "nullable": true,
                "description": "The number of intervals (specified in the `recurring_interval` attribute) between subscription billings. For example, `recurring_interval=month` and `recurring_interval_count=3` bills every 3 months. The total duration of a billing cycle is not allowed to exceed 1 year. Only applicable during creation."
              },
              "recurring_period_count": {
                "type": "integer",
                "nullable": true,
                "description": "The number of periods a subscription with this price will renew for. After this amount of periods, the subscription will move to the `complete` state. Only applicable during creation."
              },
              "revoke_after_days": {
                "type": "integer",
                "nullable": true,
                "description": "The number of days after which the purchase associated with this price will be automatically revoked. This can be used to create time-limited access for a one-time or finite recurring price."
              },
              "revoke_purchases_on_completed": {
                "type": "boolean",
                "description": "Whether or not purchases for this price should be revoked when subscriptions transition to the `complete` state."
              },
              "restart_subscription_on_completed": {
                "type": "boolean",
                "description": "Whether installment subscriptions using this price should be automatically restarted when they reach the completed state."
              },
              "setup_fee_amount": {
                "type": "integer",
                "nullable": true,
                "description": "The amount in cents to be charged as a setup fee on the first billing period of a recurring price."
              },
              "setup_fee_enabled": {
                "type": "boolean",
                "description": "Whether or not this price has a setup fee."
              },
              "setup_fee_name": {
                "type": "string",
                "nullable": true,
                "description": "The name that will display for the setup fee on the first billing period."
              },
              "setup_fee_trial_enabled": {
                "type": "boolean",
                "description": "Whether or not the setup fee should be deferred until the trial period ends. If set to true, the setup fee will not be charged until the trial period ends."
              },
              "scratch_amount": {
                "type": "integer",
                "nullable": true,
                "description": "The amount in cents that should be shown as the original amount before any price reductions, also known as the pre-sale price."
              },
              "trial_duration_days": {
                "type": "integer",
                "nullable": true,
                "description": "The default number of trial days when subscribing a customer to this price."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_metadata"
          }
        ]
      },
      "price_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/price_base"
          },
          {
            "properties": {
              "product": {
                "type": "string",
                "description": "The UUID of the product. Only applicable during creation."
              },
              "renewal_price": {
                "type": "string",
                "description": "The UUID of the renewal price."
              }
            }
          }
        ]
      },
      "price_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/price_base"
          },
          {
            "properties": {
              "archived_at": {
                "type": "integer",
                "nullable": true,
                "description": "Time at which the object was archived. Measured in seconds since the Unix epoch."
              },
              "currency": {
                "type": "string",
                "description": "Three-letter ISO currency code, in lowercase. This value will match the `Account` currency."
              },
              "full_amount": {
                "type": "integer",
                "description": "The full amount to be charged across all periods, represented as a whole integer. For prices without a `recurring_period_count` defined this is the same as `amount`. For finite prices, this is equal to `amount` * `recurring_period_count`. For example, a price that has an amount of $25 and is set to recur over 4 periods, will have a `full_amount` of $100."
              },
              "current_version": {
                "type": "boolean",
                "description": "Whether or not this object represents the current version of this price. (This will be `false` if the association was created to this price before it was altered. In this case, we will lookup the version of the price at the time it was associated.)"
              },
              "current_swap": {
                "type": "string",
                "nullable": true,
                "description": "The current swap for this price."
              },
              "product": {
                "type": "string",
                "description": "The associated product."
              },
              "renewal_price": {
                "type": "string",
                "nullable": true,
                "description": "The associated reneal price. If present, subscriptions will be updated to this price when they renew."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_discarded_timestamp"
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "processor_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "properties": {
              "approved": {
                "type": "boolean",
                "description": "Whether or not the connected processor account has been approved to process payments. (This is controlled by the processing platform â€“ i.e. Stripe, PayPal, etc.)"
              },
              "enabled": {
                "type": "boolean",
                "description": "Whether or not this processor is currently enabled to proccess new payments. (This is controlled within SureCart.)"
              },
              "live_mode": {
                "type": "boolean",
                "description": "Set to `true` if this processor is for live mode, and set to `false` if it is for test mode."
              },
              "processor_type": {
                "type": "string",
                "description": "The type of processor â€“ one of `mock`, `mollie`, `paypal`, `paystack`, or `stripe`."
              },
              "processor_data": {
                "type": "object",
                "description": "Data that is specific to the `processor_type` and necessary for integrating with this processor on the client. For example, this could include client public keys, account IDs, etc."
              },
              "recurring_enabled": {
                "type": "boolean",
                "description": "Whether or not this processor is setup to handle recurring payments."
              },
              "supported_currencies": {
                "type": "array",
                "nullable": true,
                "description": "A list of currencies that this processor supports. If `null`, this processor supports all currencies."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "product_base": {
        "allOf": [
          {
            "properties": {
              "allow_out_of_stock_purchases": {
                "type": "boolean",
                "description": "Whether or not to allow purchases of this product when stock runs out. If true, the stock levels for this can go below zero."
              },
              "archived": {
                "type": "boolean",
                "description": "Whether or not this product is archived."
              },
              "auto_fulfill_enabled": {
                "type": "boolean",
                "description": "Whether or not this product should be auto fulfilled when it is purchased. This can only be `true` when `shipping_enabled` is `false`."
              },
              "cataloged_at": {
                "type": "integer",
                "description": "The time when the product was added or made available. This value is used for sorting products on shop pages."
              },
              "description": {
                "type": "string",
                "nullable": true,
                "description": "The product description, meant to be displayable to the customer."
              },
              "featured": {
                "type": "boolean",
                "description": "Whether or not this product is featured."
              },
              "licensing_enabled": {
                "type": "boolean",
                "description": "Whether or not licensing is enabled for this product."
              },
              "license_activation_limit": {
                "type": "integer",
                "nullable": true,
                "description": "The max number of activations allowed per license. If `null`, then unlimited license activations are allowed. (The activation limit can also be set on `Price` which will override this value.)"
              },
              "name": {
                "type": "string",
                "description": "The product name, meant to be displayable to the customer."
              },
              "product_collections": {
                "type": "array",
                "nullable": true,
                "description": "The UUIDs of all the product collections that this product belongs to. (This attribute is also aliased as `product_collection_ids`.)"
              },
              "purchase_limit": {
                "type": "integer",
                "nullable": true,
                "description": "The max number of times the product can be purchased by a customer. If `null`, then unlimited purchases are allowed."
              },
              "recurring": {
                "type": "boolean",
                "default": false,
                "description": "Whether the product is for a one-time purchase or a recurring (subscription) purchase."
              },
              "reviews_enabled": {
                "type": "boolean",
                "description": "Whether or not reviews are enabled for this product."
              },
              "shipping_enabled": {
                "type": "boolean",
                "description": "If set to `true` checkouts with this product will require a full shipping address."
              },
              "sku": {
                "type": "string",
                "nullable": true,
                "description": "The stock keeping unit for this product. If the `Product` has variants, each variant has a specific `sku`."
              },
              "status": {
                "type": "string",
                "description": "The status of this product â€“ one of `draft` or `published`."
              },
              "slug": {
                "type": "string",
                "description": "A unique and URL friendly string that represents this product. (This will be auto-generated when a product is created if not explicitly set.)"
              },
              "solicit_reviews": {
                "type": "boolean",
                "description": "Whether or not to solicit reviews for this product with automatic emails to customers."
              },
              "stock_enabled": {
                "type": "boolean",
                "description": "Whether or not stock will be tracked for this product."
              },
              "tax_category": {
                "type": "string",
                "nullable": true,
                "description": "The tax category/code that matches this product â€“ one of `digital`, `tangible`, `service`, or `saas`."
              },
              "tax_enabled": {
                "type": "boolean",
                "description": "If set to `true` this product is considered taxable."
              },
              "weight": {
                "type": "number",
                "description": "The product weight, meant to be displayable to the customer."
              },
              "weight_unit": {
                "type": "string",
                "description": "The weight unit for this product â€“ one of `lb`, `oz`, `kg`, `g`."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_metadata"
          }
        ]
      },
      "product_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/product_base"
          },
          {
            "properties": {
              "commission_structure": {
                "description": "The commission structure to use when calculating referral commissions for this specific product.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/commission_structure_base"
                  }
                ]
              },
              "current_release_download": {
                "type": "string",
                "description": "The UUID of the current release download."
              },
              "product_group": {
                "type": "string",
                "description": "The UUID of the product group."
              },
              "shipping_profile": {
                "type": "string",
                "description": "The UUID of the shipping profile."
              },
              "stock_adjustment": {
                "type": "integer",
                "description": "The amount to adjust the stock by. This can be a positive or negative number."
              },
              "reviews": {
                "type": "array",
                "description": "A list of associated reviews.",
                "items": {
                  "$ref": "#/components/schemas/review_body"
                }
              },
              "variant_options": {
                "type": "array",
                "description": "A list of this product's variant options.",
                "items": {
                  "$ref": "#/components/schemas/variant_option_body"
                }
              },
              "variants": {
                "type": "array",
                "description": "A list of this product's variants.",
                "items": {
                  "$ref": "#/components/schemas/variant_body"
                }
              }
            }
          }
        ]
      },
      "product_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/product_base"
          },
          {
            "properties": {
              "archived_at": {
                "type": "integer",
                "nullable": true,
                "description": "Time at which the object was archived. Measured in seconds since the Unix epoch."
              },
              "available_stock": {
                "type": "integer",
                "description": "The total amount of stock available for purchase. This is the total `stock` on hand minus `held_stock`."
              },
              "average_stars": {
                "type": "string",
                "description": "The average stars for this product based on published reviews."
              },
              "commission_structure": {
                "type": "string",
                "description": "The associated commission structure.",
                "nullable": true
              },
              "current_release_download": {
                "type": "string",
                "nullable": true,
                "description": "The associated current release download."
              },
              "held_stock": {
                "type": "integer",
                "description": "The total amount of stock being held by unfulfilled line items."
              },
              "metrics": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string",
                    "description": "The currency that was used to calculate these metrics. This will always be set to the account's currency."
                  },
                  "max_price_amount": {
                    "type": "integer",
                    "nullable": true,
                    "description": "The maximum `amount` among this product's prices (including variant price overrides)."
                  },
                  "min_price_amount": {
                    "type": "integer",
                    "nullable": true,
                    "description": "The minimum `amount` among this product's prices (including variant price overrides)."
                  },
                  "prices_count": {
                    "type": "integer",
                    "nullable": true,
                    "description": "The total number of prices that belong to this product."
                  }
                }
              },
              "downloads": {
                "type": "object",
                "nullable": true,
                "description": "A list of associated downloads."
              },
              "reviews_breakdown": {
                "type": "object",
                "description": "A histogram breakdown of the reviews for this product."
              },
              "featured_product_media": {
                "type": "string",
                "nullable": true,
                "description": "The featured (first) product media."
              },
              "prices": {
                "type": "object",
                "nullable": true,
                "description": "A list of associated prices."
              },
              "product_group": {
                "type": "string",
                "nullable": true,
                "description": "The associated product group."
              },
              "product_medias": {
                "type": "object",
                "nullable": true,
                "description": "A list of associated product medias."
              },
              "shipping_profile": {
                "type": "string",
                "nullable": true,
                "description": "The associated shipping profile."
              },
              "stock": {
                "type": "integer",
                "description": "The total amount of stock on hand for this variant."
              },
              "reviews": {
                "type": "object",
                "nullable": true,
                "description": "A list of associated reviews."
              },
              "variant_options": {
                "type": "object",
                "nullable": true,
                "description": "A list of associated variant options."
              },
              "variants": {
                "type": "object",
                "nullable": true,
                "description": "A list of associated variants."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_discarded_timestamp"
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "product_collection_base": {
        "allOf": [
          {
            "properties": {
              "name": {
                "type": "string",
                "description": "A name for this product collection that will be visible to customers."
              },
              "description": {
                "type": "string",
                "description": "The product collection description, meant to be displayable to the customer.",
                "nullable": true
              },
              "position": {
                "type": "integer",
                "nullable": true,
                "description": "The ordering position of this product collection when displayed to customers."
              },
              "slug": {
                "type": "string",
                "description": "A unique and URL friendly string that represents this product collection. (This will be auto-generated when a product collection is created if not explicitly set.)"
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_metadata"
          }
        ]
      },
      "product_collection_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/product_collection_base"
          },
          {
            "properties": {
              "image": {
                "type": "string",
                "description": "The UUID of the media."
              }
            }
          }
        ]
      },
      "product_collection_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/product_collection_base"
          },
          {
            "properties": {
              "image": {
                "type": "string",
                "nullable": true,
                "description": "The associated media."
              },
              "products_count": {
                "type": "integer",
                "description": "The number of products in this collection."
              },
              "products": {
                "type": "object",
                "nullable": true,
                "description": "A list of associated products."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "product_group_body": {
        "allOf": [
          {
            "properties": {
              "archived": {
                "type": "boolean",
                "description": "Whether or not this product group is archived."
              },
              "name": {
                "type": "string",
                "description": "The product groupâ€™s name, meant to be displayable to the customer."
              },
              "purchase_limit": {
                "type": "integer",
                "nullable": true,
                "description": "The max number of times the product group can be purchased by a customer. If `null`, then unlimited purchases are allowed."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_metadata"
          }
        ]
      },
      "product_group_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/product_group_body"
          },
          {
            "properties": {
              "archived_at": {
                "type": "integer",
                "nullable": true,
                "description": "Time at which the object was archived. Measured in seconds since the Unix epoch."
              },
              "products": {
                "type": "object",
                "nullable": true,
                "description": "A list of associated products."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "product_media_base": {
        "allOf": [
          {
            "properties": {
              "alt": {
                "type": "string",
                "nullable": true,
                "description": "The HTML alt attribute for the product media."
              },
              "position": {
                "type": "integer",
                "nullable": true,
                "description": "The ordering position of this product media when displayed to customers."
              },
              "title": {
                "type": "string",
                "nullable": true,
                "description": "The HTML title attribute for the product media."
              },
              "url": {
                "type": "string",
                "nullable": true,
                "description": "Instead of attaching a `Media` record, a public URL can be set. If set, this URL will be used to serve the product media asset."
              }
            }
          }
        ]
      },
      "product_media_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/product_media_base"
          },
          {
            "properties": {
              "media": {
                "type": "string",
                "nullable": true,
                "description": "The UUID of the media."
              },
              "product": {
                "type": "string",
                "description": "The UUID of the product."
              }
            }
          }
        ]
      },
      "product_media_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/product_media_base"
          },
          {
            "properties": {
              "media": {
                "type": "string",
                "nullable": true,
                "description": "The associated media."
              },
              "product": {
                "type": "string",
                "description": "The associated product."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "promotion_base": {
        "allOf": [
          {
            "properties": {
              "archived": {
                "type": "boolean",
                "description": "Whether or not this promotion is archived."
              },
              "code": {
                "type": "string",
                "description": "The customer-facing code. Regardless of case, this code must be unique across all promotion codes on your account. If left blank, we will generate one automatically."
              },
              "expired": {
                "type": "boolean",
                "description": "Whether or not this promotion has expired."
              },
              "max_redemptions": {
                "type": "integer",
                "nullable": true,
                "description": "Maximum number of times this coupon can be redeemed in total across all customers."
              },
              "redeem_by": {
                "type": "integer",
                "nullable": true,
                "description": "Date after which the coupon can no longer be redeemed."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_metadata"
          }
        ]
      },
      "promotion_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/promotion_base"
          },
          {
            "properties": {
              "affiliation": {
                "type": "string",
                "nullable": true,
                "description": "The UUID of the affiliation"
              },
              "coupon": {
                "type": "string",
                "description": "The UUID of the coupon."
              },
              "customer": {
                "type": "string",
                "description": "The UUID of the customer."
              }
            }
          }
        ]
      },
      "promotion_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/promotion_base"
          },
          {
            "properties": {
              "archived_at": {
                "type": "integer",
                "nullable": true,
                "description": "Time at which the object was archived. Measured in seconds since the Unix epoch."
              },
              "affiliation": {
                "type": "string",
                "nullable": true,
                "description": "The associated affiliation."
              },
              "coupon": {
                "type": "string",
                "description": "The associated coupon."
              },
              "customer": {
                "type": "string",
                "nullable": true,
                "description": "The associated customer that this promotion can be used by."
              },
              "discounts": {
                "type": "object",
                "nullable": true,
                "description": "A list of associated discounts (only redeemed discounts)."
              },
              "expired": {
                "type": "boolean",
                "description": "Taking into account the above properties, whether this promotion can still be used."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_discarded_timestamp"
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "public": {
        "account_response": {
          "allOf": [
            {
              "$ref": "#/components/schemas/model_identifiers"
            },
            {
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The account name."
                },
                "slug": {
                  "type": "string",
                  "description": "The account slug."
                }
              }
            },
            {
              "$ref": "#/components/schemas/model_timestamps"
            }
          ]
        },
        "checkout_response": {
          "allOf": [
            {
              "$ref": "#/components/schemas/model_identifiers"
            },
            {
              "$ref": "#/components/schemas/checkout_base"
            },
            {
              "$ref": "#/components/schemas/model_timestamps"
            }
          ]
        },
        "click_base": {
          "properties": {
            "referrer": {
              "type": "string",
              "nullable": true,
              "description": "The referrer of the click."
            },
            "url": {
              "type": "string",
              "description": "The URL of the click."
            }
          }
        },
        "click_body": {
          "allOf": [
            {
              "$ref": "#/components/schemas/public/click_base"
            },
            {
              "properties": {
                "affiliation_code": {
                  "type": "string",
                  "description": "The code of the associatied affiliation."
                }
              }
            }
          ]
        },
        "click_response": {
          "allOf": [
            {
              "$ref": "#/components/schemas/model_identifiers"
            },
            {
              "$ref": "#/components/schemas/public/click_base"
            },
            {
              "properties": {
                "domain": {
                  "type": "string",
                  "description": "The domain of the click."
                },
                "expires_at": {
                  "type": "integer",
                  "description": "Time at which the click expires. Measured in seconds since the Unix epoch."
                }
              }
            },
            {
              "$ref": "#/components/schemas/model_timestamps"
            }
          ]
        },
        "country_response": {
          "allOf": [
            {
              "properties": {
                "address_formats": {
                  "type": "object",
                  "description": "The address formats of the country."
                },
                "address_labels": {
                  "type": "object",
                  "description": "The address labels of the country."
                },
                "city_required": {
                  "type": "boolean",
                  "description": "Whether the city is required for the country."
                },
                "full_name": {
                  "type": "string",
                  "description": "The full name of the country."
                },
                "iso_code": {
                  "type": "string",
                  "description": "The ISO code of the country."
                },
                "postal_code_required": {
                  "type": "boolean",
                  "description": "Whether the postal code is required for the country."
                },
                "states": {
                  "type": "array",
                  "description": "The states of the country."
                },
                "state_required": {
                  "type": "boolean",
                  "description": "Whether the state is required for the country."
                }
              }
            }
          ]
        },
        "license_response": {
          "allOf": [
            {
              "$ref": "#/components/schemas/model_identifiers"
            },
            {
              "$ref": "#/components/schemas/license_base_response"
            },
            {
              "properties": {
                "current_release": {
                  "type": "string",
                  "nullable": true,
                  "description": "The current release media."
                },
                "price": {
                  "type": "string",
                  "description": "The associated price."
                },
                "product": {
                  "type": "string",
                  "description": "The associated product."
                },
                "variant": {
                  "type": "string",
                  "nullable": true,
                  "description": "The associated variant."
                }
              }
            },
            {
              "$ref": "#/components/schemas/model_timestamps"
            }
          ]
        }
      },
      "purchase_base": {
        "properties": {
          "revoke_at": {
            "type": "integer",
            "nullable": true,
            "description": "Time at which the purchase should be revoked."
          }
        }
      },
      "purchase_full_base": {
        "allOf": [
          {
            "$ref": "#/components/schemas/purchase_base"
          },
          {
            "properties": {
              "license_key": {
                "type": "string",
                "nullable": true,
                "description": "The key that will be used on the generated license from this purchase. (Only applicable when the purchase generates a license.)"
              },
              "quantity": {
                "type": "integer",
                "description": "The quantity of products purchased."
              }
            }
          }
        ]
      },
      "purchase_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/purchase_full_base"
          },
          {
            "properties": {
              "customer": {
                "type": "string",
                "description": "The UUID of the customer."
              },
              "price": {
                "type": "string",
                "description": "The UUID of the price."
              },
              "variant": {
                "type": "string",
                "description": "The UUID of the variant."
              }
            }
          }
        ]
      },
      "purchase_update_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/purchase_base"
          }
        ]
      },
      "purchase_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/purchase_base"
          },
          {
            "properties": {
              "live_mode": {
                "type": "boolean",
                "description": "Set to `true` if this purchase is in live mode, and set to `false` if it is in test mode."
              },
              "revoked": {
                "type": "boolean",
                "description": "Whether or not this purchase is revoked."
              },
              "revoked_at": {
                "type": "integer",
                "nullable": true,
                "description": "Time at which the purchase was revoked. Measured in seconds since the Unix epoch."
              },
              "revoke_at": {
                "type": "integer",
                "nullable": true,
                "description": "Time at which the purchase should be revoked."
              },
              "customer": {
                "type": "string",
                "description": "The associated customer."
              },
              "initial_order": {
                "type": "string",
                "nullable": true,
                "description": "The first order that initiated this purchase."
              },
              "license": {
                "type": "string",
                "nullable": true,
                "description": "The associated license."
              },
              "license_key": {
                "type": "string",
                "nullable": true,
                "description": "License key for subscriptions"
              },
              "line_items": {
                "type": "object",
                "nullable": true,
                "description": "The associated line items."
              },
              "price": {
                "type": "string",
                "description": "The associated price."
              },
              "product": {
                "type": "string",
                "description": "The associated product."
              },
              "subscription": {
                "type": "string",
                "nullable": true,
                "description": "The associated subscription."
              },
              "variant": {
                "type": "string",
                "nullable": true,
                "description": "The associated variant."
              },
              "review": {
                "type": "string",
                "nullable": true,
                "description": "The associated review."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "referral_base": {
        "properties": {
          "commission_amount": {
            "type": "integer",
            "description": "The amount in cents that will be paid out to the affiliate for this referral."
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "A brief description of what this referral is for."
          },
          "live_mode": {
            "type": "boolean",
            "description": "Set to `true` if this referral is in live mode, and set to `false` if it is in test mode."
          }
        }
      },
      "referral_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/referral_base"
          },
          {
            "properties": {
              "affiliation": {
                "type": "string",
                "description": "The UUID of the affiliation."
              },
              "checkout": {
                "type": "string",
                "description": "The UUID of the checkout."
              }
            }
          }
        ]
      },
      "referral_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/referral_base"
          },
          {
            "properties": {
              "currency": {
                "type": "string",
                "description": "Three-letter ISO currency code, in lowercase. If not set, this value will fallback to the default `Account` currency."
              },
              "manual": {
                "type": "boolean",
                "description": "Whether or not this referral was created manually or automatically from a tracked click associated with a checkout."
              },
              "status": {
                "type": "string",
                "description": "The status of the referral â€“ one of `approved`, `canceled`, `denied`, `paid`, or `reviewing`."
              },
              "refund_reduction_amount": {
                "type": "integer",
                "description": "The amount in cents that is reduced from the original commission amount due to refunds."
              },
              "affiliation": {
                "type": "string",
                "description": "The associated affiliation."
              },
              "attributed_click": {
                "type": "string",
                "nullable": true,
                "description": "The associated attributed click."
              },
              "checkout": {
                "type": "string",
                "nullable": true,
                "description": "The associated checkout."
              },
              "payout": {
                "type": "string",
                "nullable": true,
                "description": "The associated payout."
              },
              "referral_items": {
                "type": "object",
                "nullable": true,
                "description": "A list of associated referral items."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "referral_item_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "properties": {
              "commission_amount": {
                "type": "integer",
                "description": "The amount in cents that will be paid out to the affiliate for this referral item."
              },
              "line_item": {
                "type": "string",
                "description": "The associated line item."
              },
              "referral": {
                "type": "string",
                "description": "The associated referral."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "refund_base": {
        "allOf": [
          {
            "properties": {
              "amount": {
                "type": "integer",
                "description": "The amount in cents that was refunded, represented as a whole integer. For example `9900` is equivalent to `$99`."
              },
              "reason": {
                "type": "string",
                "description": "The reason for this refund, which can be one of `duplicate`, `fraudulent`, `requested_by_customer`, or `expired_uncaptured_charge`."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_metadata"
          }
        ]
      },
      "refund_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/refund_base"
          },
          {
            "properties": {
              "charge": {
                "type": "string",
                "description": "The UUID of the charge."
              },
              "refund_items": {
                "type": "array",
                "description": "A list of this refund's items.",
                "items": {
                  "$ref": "#/components/schemas/refund_item_body"
                }
              },
              "return_request": {
                "type": "string",
                "description": "The UUID of the return request."
              }
            }
          }
        ]
      },
      "refund_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/refund_base"
          },
          {
            "properties": {
              "charge": {
                "type": "string",
                "description": "The associated charge."
              },
              "currency": {
                "type": "string",
                "description": "Three-letter ISO currency code, in lowercase."
              },
              "customer": {
                "type": "string",
                "description": "The associated customer."
              },
              "external_refund_id": {
                "type": "string",
                "description": "The external processor ID representing this refund."
              },
              "failure_reason": {
                "type": "string",
                "nullable": true,
                "description": "The reason this refund failed, which can currently only be `insufficient_funds`."
              },
              "live_mode": {
                "type": "boolean",
                "description": "Set to `true` if this refund is in live mode, and set to `false` if it is in test mode."
              },
              "refund_items": {
                "type": "object",
                "nullable": true,
                "description": "A list of associated refund items."
              },
              "return_request": {
                "type": "string",
                "nullable": true,
                "description": "The associated return request."
              },
              "status": {
                "type": "string",
                "description": "The current status of this refund, which can be one of `pending`, `succeeded`, `failed`, or `canceled`."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "refund_item_base": {
        "allOf": [
          {
            "properties": {
              "restock": {
                "type": "boolean",
                "description": "Whether or not the associated line item should be restocked."
              },
              "revoke_purchase": {
                "type": "boolean",
                "description": "Whether or not the associated purchase should be revoked."
              },
              "quantity": {
                "type": "integer",
                "description": "The quantity of products being returned. This must be less than or equal to the fulfilled quantity of the associated line item."
              }
            }
          }
        ]
      },
      "refund_item_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/refund_item_base"
          },
          {
            "properties": {
              "line_item": {
                "type": "string",
                "description": "The UUID of the line item."
              }
            }
          }
        ]
      },
      "refund_item_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/refund_item_base"
          },
          {
            "properties": {
              "line_item": {
                "type": "string",
                "description": "The associated line item."
              },
              "refund": {
                "type": "string",
                "description": "The associated refund."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "return_item_base": {
        "allOf": [
          {
            "properties": {
              "note": {
                "type": "string",
                "description": "A note to capture extra details about this return item. This is required when the return reason is `other`.",
                "nullable": true
              },
              "return_reason": {
                "type": "string",
                "description": "The reason for returning the item â€“ one of `color`, `defective`, `not_as_described`, `other`, `size_too_large`, `size_too_small`, `style`, `unknown`, `unwanted`, or `wrong_item`. The list of these reasons can be fetched from the `/return_reasons` endpoint.",
                "nullable": false
              },
              "quantity": {
                "type": "integer",
                "description": "The quantity of products being returned. This must be less than or equal to the fulfilled quantity of the associated line item."
              }
            }
          }
        ]
      },
      "return_item_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/return_item_base"
          },
          {
            "properties": {
              "line_item": {
                "type": "string",
                "description": "The UUID of the line item."
              }
            }
          }
        ]
      },
      "return_item_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/return_item_base"
          },
          {
            "properties": {
              "return_reason_description": {
                "type": "string",
                "description": "The full description of the return reason.",
                "nullable": false
              },
              "return_request": {
                "type": "string",
                "description": "The associated return request."
              },
              "line_item": {
                "type": "string",
                "description": "The associated line item."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "return_request_base": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_metadata"
          }
        ]
      },
      "return_request_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/return_request_base"
          },
          {
            "properties": {
              "order": {
                "type": "string",
                "description": "The UUID of the order."
              },
              "return_items": {
                "type": "array",
                "description": "A list of this return request's items.",
                "items": {
                  "$ref": "#/components/schemas/return_item_body"
                }
              }
            }
          }
        ]
      },
      "return_request_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/return_request_base"
          },
          {
            "properties": {
              "number": {
                "type": "string",
                "description": "The unique identifier for this return request that is auto generated based on this account's order protocol."
              },
              "order": {
                "type": "string",
                "description": "The associated order."
              },
              "return_items": {
                "type": "object",
                "nullable": true,
                "description": "A list of associated return items."
              },
              "status": {
                "type": "string",
                "description": "The current status of this return request â€“ either `open` or `complete`."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "review_base": {
        "allOf": [
          {
            "properties": {
              "title": {
                "type": "string",
                "nullable": true,
                "description": "The title of the review."
              },
              "body": {
                "type": "string",
                "nullable": true,
                "description": "The content/body of the review."
              },
              "stars": {
                "type": "number",
                "format": "float",
                "nullable": true,
                "description": "The numerical rating provided in the review. Can be a decimal from 1.0 to 5.0."
              }
            }
          }
        ]
      },
      "review_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/review_base"
          },
          {
            "properties": {
              "customer": {
                "type": "string",
                "description": "The UUID of the customer who wrote the review."
              },
              "product": {
                "type": "string",
                "description": "The UUID of the product being reviewed."
              },
              "purchase": {
                "type": "string",
                "nullable": true,
                "description": "The UUID of the purchase of product."
              }
            }
          }
        ]
      },
      "review_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/review_base"
          },
          {
            "properties": {
              "status": {
                "type": "string",
                "nullable": true,
                "description": "The status of the review (e.g. `in_review`, `published`, `unpublished`)."
              },
              "verified": {
                "type": "boolean",
                "description": "Indicates whether the reviewer has purchased the product (based on presence of a purchase)."
              },
              "customer": {
                "type": "string",
                "description": "The customer who wrote the review."
              },
              "product": {
                "type": "string",
                "description": "The associated product."
              },
              "purchase": {
                "type": "string",
                "nullable": true,
                "description": "The associated purchase."
              },
              "review_medias": {
                "type": "object",
                "nullable": true,
                "description": "A list of associated review medias."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_discarded_timestamp"
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "review_media_base": {
        "allOf": [
          {
            "properties": {
              "alt": {
                "type": "string",
                "nullable": true,
                "description": "The HTML alt attribute for the review media."
              },
              "title": {
                "type": "string",
                "nullable": true,
                "description": "The HTML title attribute for the review media."
              },
              "url": {
                "type": "string",
                "nullable": true,
                "description": "Instead of attaching a `Media` record, a public URL can be set. If set, this URL will be used to serve the review media asset."
              }
            }
          }
        ]
      },
      "review_media_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/review_media_base"
          },
          {
            "properties": {
              "media": {
                "type": "string",
                "nullable": true,
                "description": "The UUID of the media."
              },
              "review": {
                "type": "string",
                "description": "The UUID of the review."
              }
            }
          }
        ]
      },
      "review_media_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/review_media_base"
          },
          {
            "properties": {
              "media": {
                "type": "string",
                "nullable": true,
                "description": "The associated media."
              },
              "review": {
                "type": "string",
                "description": "The associated review."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "review_protocol_base": {
        "properties": {
          "reviews_enabled": {
            "type": "boolean",
            "description": "If set to `true`, reviews will be enabled globally for all products in the account. Individual products must also have reviews enabled for reviews to be shown."
          },
          "solicit_reviews": {
            "type": "boolean",
            "description": "If set to `true`, review solicitation emails will be sent to customers who have purchased products. Individual products must also have solicitation enabled."
          },
          "solicit_reviews_after_days": {
            "type": "integer",
            "description": "The number of days after an order is fulfilled that a review solicitation email will be sent to the customer."
          }
        }
      },
      "review_protocol_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/review_protocol_base"
          }
        ]
      },
      "review_protocol_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/review_protocol_base"
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "rule_schema_attribute": {
        "properties": {
          "key": {
            "type": "string",
            "description": "The attribute key that can be used in rule conditions (e.g., `subtotal_amount`, `customer.created_at`)."
          },
          "metadata": {
            "type": "boolean",
            "description": "Whether this attribute represents a metadata field."
          },
          "supported_values": {
            "type": "array",
            "description": "A list of allowed values that can be used for comparison. Empty array if no specific values are enforced.",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string",
            "description": "The data type of the attribute. One of `numeric`, `string`, or `date`."
          },
          "operators": {
            "type": "array",
            "description": "The list of comparison operators available for this attribute (e.g., `is`, `is_not`, `is_more_than`).",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "rule_schema_response": {
        "properties": {
          "object": {
            "type": "string",
            "description": "A string describing the object type returned."
          },
          "schema_id": {
            "type": "string",
            "description": "The unique identifier for this rule schema (e.g., `auto_fee__checkout`, `auto_fee__line_item`)."
          },
          "attributes": {
            "type": "array",
            "description": "The list of attributes available for building rule conditions.",
            "items": {
              "$ref": "#/components/schemas/rule_schema_attribute"
            }
          }
        }
      },
      "list_response": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "A string describing the object type returned."
          },
          "pagination": {
            "type": "object",
            "properties": {
              "count": {
                "type": "integer",
                "description": "The total number of items."
              },
              "limit": {
                "type": "integer",
                "nullable": true,
                "description": "The number of items per page. The default is `20` and the maximum is `100`."
              },
              "page": {
                "type": "integer",
                "nullable": true,
                "description": "The current page."
              }
            }
          },
          "data": {
            "type": "array",
            "description": "An array of objects."
          }
        }
      },
      "model_destroy_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "properties": {
              "deleted": {
                "type": "boolean",
                "description": "Whether or not this object was succesfully deleted."
              }
            }
          }
        ]
      },
      "model_identifiers": {
        "properties": {
          "id": {
            "type": "string",
            "nullable": true,
            "description": "The UUID of the specific object."
          },
          "object": {
            "type": "string",
            "description": "A string describing the object type returned."
          }
        }
      },
      "model_metadata": {
        "properties": {
          "metadata": {
            "type": "object",
            "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format."
          }
        }
      },
      "model_timestamps": {
        "properties": {
          "created_at": {
            "type": "integer",
            "nullable": true,
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch."
          },
          "updated_at": {
            "type": "integer",
            "nullable": true,
            "description": "Time at which the object was last updated. Measured in seconds since the Unix epoch."
          }
        }
      },
      "model_discarded_timestamp": {
        "properties": {
          "discarded_at": {
            "type": "integer",
            "nullable": true,
            "description": "Time at which the object was discarded. Measured in seconds since the Unix epoch."
          }
        }
      },
      "stats_response": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "A string describing the object type returned."
          },
          "query": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "nullable": true,
                "description": "The end of the date range for the query."
              },
              "end_at": {
                "type": "integer",
                "description": "The end of the date range for the query."
              },
              "interval": {
                "type": "string",
                "nullable": true,
                "description": "The interval that is set for the query."
              },
              "start_at": {
                "type": "integer",
                "description": "The start of the date range for the query."
              }
            }
          },
          "data": {
            "type": "array",
            "description": "An array of objects."
          }
        }
      },
      "static_list_response": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "A string describing the object type returned."
          },
          "data": {
            "type": "array",
            "description": "An array of objects."
          }
        }
      },
      "shipping_fee_base": {
        "properties": {
          "amount": {
            "type": "integer",
            "description": "The amount in cents to be added or subtracted, represented as an integer. For example `9900` is equivalent to `$99`."
          },
          "description": {
            "type": "string",
            "description": "A short description of the shipping fee."
          }
        }
      },
      "shipping_fee_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/shipping_fee_base"
          },
          {
            "properties": {
              "checkout": {
                "type": "string",
                "description": "The UUID of the checkout."
              }
            }
          }
        ]
      },
      "shipping_fee_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/shipping_fee_base"
          },
          {
            "properties": {
              "fee_type": {
                "type": "string",
                "description": "The type of shipping_fee â€“ one of `auto` or `manual`."
              },
              "checkout": {
                "type": "string",
                "description": "The associated checkout."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "shipping_method_body": {
        "allOf": [
          {
            "properties": {
              "name": {
                "type": "string",
                "description": "A name for this shipping method that will be visible to customers."
              },
              "description": {
                "type": "string",
                "description": "A short description for this shipping method that will be visible to customers.",
                "nullable": true
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_metadata"
          }
        ]
      },
      "shipping_method_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/shipping_method_body"
          },
          {
            "properties": {
              "shipping_rates": {
                "type": "object",
                "nullable": true,
                "description": "A list of associated shipping rates."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "shipping_profile_base": {
        "allOf": [
          {
            "properties": {
              "name": {
                "type": "string",
                "description": "A name for this shipping profile that will be visible to customers."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_metadata"
          }
        ]
      },
      "shipping_profile_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/shipping_zone_base"
          },
          {
            "properties": {
              "fallback_shipping_zone": {
                "type": "string",
                "nullable": true,
                "description": "The UUID of the shipping zone that should be the fallback when a specific shipping zone does not match the checkout's shipping address. This is commonly referred to as a \"Rest of World\" shipping zone."
              }
            }
          }
        ]
      },
      "shipping_profile_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/shipping_profile_base"
          },
          {
            "properties": {
              "default": {
                "type": "boolean",
                "description": "Whether or not this shipping profile is the default for the account."
              },
              "fallback_shipping_zone": {
                "type": "string",
                "nullable": true,
                "description": "The associated fallback shipping zone."
              },
              "products": {
                "type": "object",
                "nullable": true,
                "description": "A list of associated products."
              },
              "shipping_zones": {
                "type": "object",
                "nullable": true,
                "description": "A list of associated shipping zones."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "shipping_protocol_body": {
        "properties": {
          "shipping_enabled": {
            "type": "boolean",
            "description": "If set to `true` a shipping choice will be required for checkouts that have `shipping_enabled` products."
          }
        }
      },
      "shipping_protocol_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/shipping_protocol_body"
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "shipping_rate_base": {
        "allOf": [
          {
            "properties": {
              "amount": {
                "type": "integer",
                "description": "The amount in cents to be charged, represented as a whole integer. For example `9900` is equivalent to `$99`."
              },
              "rate_type": {
                "type": "string",
                "description": "The calculation strategy for this shipping rate â€“ one of `amount`, `flat`, or `weight`. If `amount`, this shipping rate will be applicable to checkouts that have a `subtotal_amount` within the min/max amount range. If `flat`, this rate will be applicable to all line items. If `weight`, this rate will be applicable to line items that have a combined weight within the min/max weight range."
              },
              "min_amount": {
                "type": "integer",
                "description": "The minimum `subtotal_amount` of a checkout for this rate to apply."
              },
              "max_amount": {
                "type": "integer",
                "nullable": true,
                "description": "The maximum `subtotal_amount` of a checkout for this rate to apply."
              },
              "min_weight": {
                "type": "number",
                "description": "The minimum combined `weight` of a line item for this rate to apply."
              },
              "max_weight": {
                "type": "number",
                "nullable": true,
                "description": "The maximum combined `weight` of a line item for this rate to apply."
              },
              "weight_unit": {
                "type": "string",
                "description": "The weight unit for this shipping rate â€“ one of `lb`, `oz`, `kg`, `g`."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_metadata"
          }
        ]
      },
      "shipping_rate_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/shipping_rate_base"
          },
          {
            "properties": {
              "shipping_zone": {
                "type": "string",
                "description": "The UUID of the shipping zone."
              },
              "shipping_method": {
                "type": "string",
                "description": "The UUID of the shipping method."
              }
            }
          }
        ]
      },
      "shipping_rate_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/shipping_rate_base"
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          },
          {
            "properties": {
              "currency": {
                "type": "string",
                "description": "Three-letter ISO currency code, in lowercase. This value will match the `Account` currency."
              },
              "shipping_zone": {
                "type": "string",
                "description": "The associated shipping zone."
              },
              "shipping_method": {
                "type": "string",
                "description": "The associated shipping method."
              }
            }
          }
        ]
      },
      "shipping_zone_base": {
        "allOf": [
          {
            "properties": {
              "name": {
                "type": "string",
                "description": "A name for this shipping zone that will be visible to customers."
              },
              "territories": {
                "type": "array",
                "description": "The specific territories that this shipping zone covers.",
                "items": {
                  "type": "object",
                  "properties": {
                    "country": {
                      "type": "string",
                      "description": "The country associated with the territory."
                    },
                    "states": {
                      "type": "array",
                      "description": "List of states within the country.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_metadata"
          }
        ]
      },
      "shipping_zone_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/shipping_zone_base"
          },
          {
            "properties": {
              "shipping_profile": {
                "type": "string",
                "description": "The UUID of the shipping profile."
              }
            }
          }
        ]
      },
      "shipping_zone_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/shipping_zone_base"
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          },
          {
            "properties": {
              "shipping_profile": {
                "type": "string",
                "description": "The associated shipping profile."
              },
              "shipping_rates": {
                "type": "object",
                "nullable": true,
                "description": "A list of associated shipping rates."
              }
            }
          }
        ]
      },
      "subscription_base": {
        "allOf": [
          {
            "properties": {
              "ad_hoc_amount": {
                "type": "integer",
                "nullable": true,
                "description": "The amount to use for this subscription when the associated price is `ad_hoc=true`."
              },
              "affiliation_expires_at": {
                "type": "integer",
                "nullable": true,
                "description": "Time at which the affiliation will expire."
              },
              "cancel_at_period_end": {
                "type": "boolean",
                "description": "If the subscription is set to cancel at the end of the current period. You can use this attribute to determine whether a subscription that has a `status` of `active` is scheduled to be canceled at the end of the current period."
              },
              "live_mode": {
                "type": "boolean",
                "description": "Set to `true` if this subscription is in live mode, and set to `false` if it is in test mode."
              },
              "manual_payment": {
                "type": "boolean",
                "description": "Whether or not this subscription should finalize checkouts during renewal with the `manual_payment=true` option."
              },
              "quantity": {
                "type": "integer",
                "description": "The quantity of products being purchased."
              },
              "restore_at": {
                "type": "integer",
                "nullable": true,
                "description": "The time at which this subscription will automatically be restored. This can only be set if the subscription is canceled or set to cancel at period end."
              },
              "restart_on_completed": {
                "type": "boolean",
                "description": "Whether installment subscriptions should be automatically restarted when they reach the completed state. When the subscription is created, this value will be inherited from the price `restart_subscription_on_completed` value."
              },
              "tax_enabled": {
                "type": "boolean",
                "description": "Whether or not tax is enabled for this subscription. This will default to the account's `tax_protocol.tax_enabled` value when the subscription is created."
              },
              "trial_end_at": {
                "type": "integer",
                "nullable": true,
                "description": "If the subscription has a trial, the end of that trial."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_metadata"
          }
        ]
      },
      "subscription_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/subscription_base"
          },
          {
            "properties": {
              "affiliation": {
                "type": "string",
                "description": "The affiliation associated with this subscription."
              },
              "currency": {
                "type": "string",
                "description": "Three-letter ISO currency code, in lowercase. This value will match the `Account` currency."
              },
              "customer": {
                "type": "string",
                "description": "The UUID of the customer."
              },
              "discount": {
                "description": "The parameters of the discount to be applied to this subscription.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/discount_body"
                  }
                ]
              },
              "imported": {
                "type": "boolean",
                "description": "Whether or not this subscription is being imported from another platform. If `true`, the `first_sc_period_start_at` value must be set."
              },
              "manual_payment_method": {
                "type": "string",
                "description": "The UUID of the manual payment method."
              },
              "first_sc_period_start_at": {
                "type": "integer",
                "nullable": true,
                "description": "The time at which the next period should start for this subscription. This value should be set when importing subscriptions to maintain the billing cycle. (This value is only applicable during subscription creation.)"
              },
              "payment_method": {
                "type": "string",
                "description": "The UUID of the payment method."
              },
              "price": {
                "type": "string",
                "description": "The UUID of the price."
              },
              "purge_pending_update": {
                "type": "boolean",
                "description": "When set to `true` the `pending_update` will be cleared."
              },
              "shipping_method": {
                "type": "string",
                "nullable": true,
                "description": "The UUID of the shipping method."
              },
              "variant": {
                "type": "string",
                "description": "The UUID of the variant."
              }
            }
          }
        ]
      },
      "subscription_cancel_body": {
        "properties": {
          "restore_at": {
            "type": "integer",
            "nullable": true,
            "description": "The time at which this subscription will automatically be restored. This can only be set if the subscription is canceled or set to cancel at period end."
          }
        }
      },
      "subscription_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/subscription_base"
          },
          {
            "properties": {
              "current_period_end_at": {
                "type": "integer",
                "nullable": true,
                "description": "End of the current period that the subscription is in. At the end of this period, a new period will be created. This will be `null` when the subscription has a one-time price."
              },
              "current_period_start_at": {
                "type": "integer",
                "nullable": true,
                "description": "Start of the current period that the subscription is in."
              },
              "ended_at": {
                "type": "integer",
                "nullable": true,
                "description": "If the subscription has ended, the date the subscription ended."
              },
              "finite": {
                "type": "boolean",
                "description": "Whether or not this subscription belongs to a price with a set `recurring_period_count`, meaning it has a defined end."
              },
              "last_renewal_reminder_sent_at": {
                "type": "integer",
                "nullable": true,
                "description": "Time at which the last renewal reminder notification sent. Measured in seconds since the Unix epoch."
              },
              "pending_update": {
                "type": "object",
                "properties": {
                  "price": {
                    "type": "string",
                    "description": "The UUID of the price this subscription will be updated to at the end of the current period."
                  },
                  "quantity": {
                    "type": "integer",
                    "description": "The quantity of products being purchased at the end of the current period."
                  }
                }
              },
              "portal_url": {
                "type": "string",
                "nullable": true,
                "description": "A URL that will redirect to this subscription's correct portal page (hosted or external)."
              },
              "price_readonly": {
                "type": "boolean",
                "description": "Whether or not the price of this subscription can be modified. If `true`, the price is locked and cannot be changed"
              },
              "remaining_period_count": {
                "type": "integer",
                "nullable": true,
                "description": "The number of periods remaining before this subscription ends. This count is reduced when a period is paid."
              },
              "subtotal_amount": {
                "type": "integer",
                "description": "Total of the subscription before discounts or taxes are applied."
              },
              "status": {
                "type": "string",
                "description": "The current status of this subscription, which can be one of `incomplete`, `trialing`, `active`, `past_due`, `canceled`, or `completed`."
              },
              "affiliation": {
                "type": "object",
                "nullable": true,
                "description": "The affiliation associated with this subscription."
              },
              "current_cancellation_act": {
                "type": "string",
                "nullable": true,
                "description": "The associated current cancellation act."
              },
              "current_period": {
                "type": "string",
                "description": "The associated current period."
              },
              "customer": {
                "type": "string",
                "description": "The associated customer."
              },
              "discount": {
                "type": "string",
                "nullable": true,
                "description": "The associated discount."
              },
              "manual_payment_method": {
                "type": "string",
                "nullable": true,
                "description": "The associated manual payment method."
              },
              "payment_method": {
                "type": "string",
                "nullable": true,
                "description": "The associated payment method."
              },
              "periods": {
                "type": "object",
                "nullable": true,
                "description": "The associated periods."
              },
              "price": {
                "type": "string",
                "description": "The associated price."
              },
              "purchase": {
                "type": "string",
                "nullable": true,
                "description": "The associated purchase."
              },
              "shipping_method": {
                "type": "string",
                "nullable": true,
                "description": "The associated shipping_method."
              },
              "variant": {
                "type": "string",
                "nullable": true,
                "description": "The associated variant."
              },
              "variant_options": {
                "type": "array",
                "nullable": true,
                "description": "An array of the associated variant's options."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "subscription_protocol_body": {
        "properties": {
          "bypass_duplicate_trials": {
            "type": "boolean",
            "description": "Whether or not to skip the trial period for a product if the customer has already been in a trial."
          },
          "cancel_behavior": {
            "type": "string",
            "description": "Controls how subscription cancellations should be handled â€“ one of `immediate` or `pending`."
          },
          "cancel_window_enabled": {
            "type": "boolean",
            "description": "Whether or not the subscription cancel window is enabled."
          },
          "cancel_window_days": {
            "type": "integer",
            "description": "The number of days prior to a subscription renewing that the cancel option will be visible to customers."
          },
          "default_payment_method_detach_enabled": {
            "type": "boolean",
            "description": "Whether or not default payment methods can be removed."
          },
          "default_payment_method_fallback_enabled": {
            "type": "boolean",
            "description": "Whether or not the customer's default payment method should be used as a fallback when a subscription does not have a payment method."
          },
          "downgrade_behavior": {
            "type": "string",
            "description": "Controls how subscription changes should be handled when downgrading â€“ one of `immediate` or `pending`."
          },
          "payment_retry_window_weeks": {
            "type": "integer",
            "description": "The number of weeks to retry failed subscription payments before canceling the subscription."
          },
          "preservation_enabled": {
            "type": "boolean",
            "description": "Whether or not subscription preservation is enabled."
          },
          "preservation_locales": {
            "type": "object",
            "description": "A collection of locale strings that will be used when displaying the subscription preservation flow to customers. These strings have access to the following liquid variables: `amount` and `name`."
          },
          "remind_at_period_percent_remaining": {
            "type": "number",
            "description": "Specifies the percentage of time remaining in the subscription period at which a reminder should be sent. For example, if set to 25%, the reminder will be triggered when there is 25% of the subscription period remaining."
          },
          "remind_after_days": {
            "type": "integer",
            "nullable": true,
            "description": "Specifies the minimum number of days that must pass since the last reminder (or subscription creation if no reminder has been sent) before a new reminder can be sent. For example, if set to 180, a reminder will only be sent if at least 180 days have passed since the last reminder. This prevents reminders from being sent too frequently across multiple subscription periods."
          },
          "require_upfront_payment_method": {
            "type": "boolean",
            "description": "Whether or not a payment method should be required for subscriptions that have an initial period amount of $0 (free trial or coupon)."
          },
          "revoke_purchases_on_past_due": {
            "type": "boolean",
            "description": "Whether or not a purchase should be revoked when a subscription becomes past_due. If the subscription transitions to the `active` or `trialing` state the associated purchase will be automatically invoked again."
          },
          "upgrade_behavior": {
            "type": "string",
            "description": "Controls how subscription changes should be handled when upgrading â€“ one of `immediate` or `pending`."
          }
        }
      },
      "subscription_protocol_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/subscription_protocol_body"
          },
          {
            "properties": {
              "preservation_coupon": {
                "type": "string",
                "description": "The associated coupon that is applied to subscriptions when a cancellation reason with `coupon_enabled=true` is selected and the susbcription is preserved."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "swap_base": {
        "allOf": [
          {
            "properties": {
              "archived": {
                "type": "boolean",
                "description": "Whether or not this swap is archived."
              },
              "description": {
                "type": "string",
                "nullable": true,
                "description": "A description of this swap. This text will be visibile to customers in the checkout summary when offered the swap."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_metadata"
          }
        ]
      },
      "swap_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/swap_base"
          },
          {
            "properties": {
              "price": {
                "type": "string",
                "description": "The UUID of the price to swap from."
              },
              "swap_price": {
                "type": "string",
                "description": "The UUID of the price to swap to."
              }
            }
          }
        ]
      },
      "swap_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/swap_base"
          },
          {
            "properties": {
              "archived_at": {
                "type": "integer",
                "nullable": true,
                "description": "Time at which the object was archived. Measured in seconds since the Unix epoch."
              },
              "price": {
                "type": "string",
                "description": "The associated price to swap from."
              },
              "swap_price": {
                "type": "string",
                "description": "The associated price to swap to."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_discarded_timestamp"
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "tax_identifier_body": {
        "properties": {
          "number": {
            "type": "string",
            "nullable": true,
            "description": "The tax ID number."
          },
          "number_type": {
            "type": "string",
            "description": "The type of tax ID number."
          }
        }
      },
      "tax_identifier_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/tax_identifier_body"
          },
          {
            "properties": {
              "eu_vat_verified": {
                "type": "boolean",
                "description": "Whether or not this a verified EU VAT number based on regex validation and an attempted VIES check."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "tax_override_body": {
        "properties": {
          "shipping": {
            "type": "boolean",
            "description": "Whether or not this tax override applies to shipping."
          },
          "rate": {
            "type": "number",
            "nullable": true,
            "description": "The tax rate to use for this tax override."
          },
          "product_collection": {
            "type": "string",
            "description": "The UUID of the product collection. (Not required if `shipping=true`.)"
          },
          "tax_zone": {
            "type": "string",
            "description": "The UUID of the tax zone."
          }
        }
      },
      "tax_override_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/tax_override_body"
          },
          {
            "properties": {
              "product_collection": {
                "type": "string",
                "nullable": true,
                "description": "The associated product collection."
              },
              "tax_zone": {
                "type": "string",
                "description": "The associated tax_zone."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "tax_protocol_base": {
        "properties": {
          "ca_tax_enabled": {
            "type": "boolean",
            "description": "If set to `true` GST taxes will be calculated for all Canadian provinces."
          },
          "default_rate": {
            "type": "number",
            "nullable": true,
            "description": "The default tax rate to use for checkouts when a specific `tax_registration` is not found. This will only apply if `default_tax_enabled=true`."
          },
          "default_tax_enabled": {
            "type": "boolean",
            "description": "Whether or not to use the `default_rate` when a specific `tax_registration` is not found."
          },
          "eu_micro_exemption_enabled": {
            "type": "boolean",
            "description": "If set to `true` VAT taxes will be calculated using the account's home country VAT rate."
          },
          "eu_tax_enabled": {
            "type": "boolean",
            "description": "If set to `true` VAT taxes will be calculated for all EU countries."
          },
          "tax_behavior": {
            "type": "string",
            "description": "Determines how taxes will be calculated. One of `exclusive` or `inclusive`."
          },
          "tax_enabled": {
            "type": "boolean",
            "description": "If set to `true` taxes will be automatically calculated."
          },
          "eu_vat_required": {
            "type": "boolean",
            "description": "Whether or not an `eu_vat` tax identifier is required when a customer's address is in the EU."
          },
          "eu_vat_unverified_behavior": {
            "type": "string",
            "description": "Determines how `eu_vat` tax identifiers will be handled when they are not verified against VIES. One of `apply_reverse_charge`, `error`, or `skip_reverse_charge`."
          },
          "eu_vat_local_reverse_charge": {
            "type": "boolean",
            "description": "Whether or not reverse charge should be applied when the customer's address is in the same country as the tax protocol address."
          }
        }
      },
      "tax_protocol_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/tax_protocol_base"
          },
          {
            "properties": {
              "address": {
                "description": "The associated address used for tax calculations",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/address_body"
                  }
                ]
              },
              "ca_tax_identifier": {
                "description": "The tax identifier to be used for all Canadian provinces.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/tax_identifier_body"
                  }
                ]
              },
              "eu_tax_identifier": {
                "description": "The tax identifier to be used for all EU countries.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/tax_identifier_body"
                  }
                ]
              }
            }
          }
        ]
      },
      "tax_protocol_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/tax_protocol_base"
          },
          {
            "properties": {
              "address": {
                "type": "string",
                "nullable": true,
                "description": "The associated address used for tax calculations."
              },
              "ca_tax_identifier": {
                "type": "string",
                "nullable": true,
                "description": "The associated Canadian tax identifier."
              },
              "eu_tax_identifier": {
                "type": "string",
                "nullable": true,
                "description": "The associated EU tax identifier."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "tax_registration_body": {
        "properties": {
          "label": {
            "type": "string",
            "nullable": true,
            "description": "The tax label for this tax registration. If blank, the default tax label from the tax zone will be used."
          },
          "manual_rate": {
            "type": "number",
            "nullable": true,
            "description": "The manual tax rate to use for this tax registration."
          },
          "tax_identifier": {
            "description": "The tax identifier to set for this tax registration.",
            "allOf": [
              {
                "$ref": "#/components/schemas/tax_identifier_body"
              }
            ]
          },
          "tax_zone": {
            "type": "string",
            "description": "The UUID of the tax zone."
          }
        }
      },
      "tax_registration_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/tax_registration_body"
          },
          {
            "properties": {
              "tax_identifier": {
                "type": "string",
                "nullable": true,
                "description": "The associated tax identifier."
              },
              "tax_zone": {
                "type": "string",
                "description": "The associated tax_zone."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "tax_zone_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "properties": {
              "country": {
                "type": "string",
                "description": "The country code."
              },
              "country_name": {
                "type": "string",
                "description": "The full country name."
              },
              "default_rate": {
                "type": "number",
                "description": "The default tax rate for the tax zone."
              },
              "default_label": {
                "type": "string",
                "description": "The label used to describe the default tax rate."
              },
              "manual": {
                "type": "boolean",
                "description": "Whether or not tax registrations for this zone require a `manual_rate`."
              },
              "region": {
                "type": "string",
                "description": "The tax region this zone is in."
              },
              "state": {
                "type": "string",
                "description": "The state/province code."
              },
              "state_name": {
                "type": "string",
                "description": "The full state/province name."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "tracking_body": {
        "allOf": [
          {
            "properties": {
              "number": {
                "type": "string",
                "description": "The tracking number provided by the courier."
              },
              "url": {
                "type": "string",
                "nullable": true,
                "description": "The URL to track this shipment on the courier's website. (This is inferred from the tracking number for some couriers.)"
              }
            }
          }
        ]
      },
      "tracking_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/tracking_body"
          },
          {
            "properties": {
              "courier_name": {
                "type": "string",
                "nullable": true,
                "description": "The name of the courier for this shipment. (This is inferred from the tracking number for some couriers.)"
              },
              "fulfillment": {
                "type": "string",
                "description": "The associated fulfillment."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "upsell_base": {
        "allOf": [
          {
            "properties": {
              "amount_off": {
                "type": "integer",
                "nullable": true,
                "description": "Amount (in the `currency` of the price) that will be taken off line items associated with this upsell."
              },
              "duplicate_purchase_behavior": {
                "type": "string",
                "description": "How to handle duplicate purchases of the product â€“ can be one of `allow`, `block_within_checkout`, or `block`."
              },
              "fee_description": {
                "type": "string",
                "description": "The description for this upsell which will be visible to customers."
              },
              "percent_off": {
                "type": "number",
                "nullable": true,
                "description": "Percent that will be taken off line items associated with this upsell."
              },
              "replacement_behavior": {
                "type": "string",
                "description": "Whether or not to replace line items in the associated checkout. Replacement occurs when a line item is upsold. Possible values include:\n- `none` (default): No line items will be replaced.\n- `all`: All line items will be replaced.\n"
              },
              "step": {
                "type": "string",
                "description": "Where this upsell falls in position within the upsell funnel â€“ can be one of `initial`, `accepted`, or `declined`."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_metadata"
          }
        ]
      },
      "upsell_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/upsell_base"
          },
          {
            "properties": {
              "price": {
                "type": "string",
                "description": "The UUID of the price."
              },
              "upsell_funnel": {
                "type": "string",
                "description": "The UUID of the upsell funnel."
              }
            }
          }
        ]
      },
      "upsell_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/upsell_base"
          },
          {
            "properties": {
              "price": {
                "type": "string",
                "description": "The associated price."
              },
              "upsell_funnel": {
                "type": "string",
                "description": "The associated upsell funnel."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_discarded_timestamp"
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "upsell_funnel_base": {
        "allOf": [
          {
            "properties": {
              "archived": {
                "type": "boolean",
                "description": "Whether or not this upsell funnel is archived."
              },
              "enabled": {
                "type": "boolean",
                "description": "Whether or not this upsell funnel is enabled."
              },
              "filter_match_type": {
                "type": "string",
                "nullable": true,
                "description": "The matching strategy to use when filtering upsell funnels â€“ can be `null` or one of `all`, `any`, `none`. If `null`, the upsell funnel will not be filtered and will be applicable to all checkouts."
              },
              "filter_price_ids": {
                "type": "array",
                "description": "The prices to filter this upsell funnel by."
              },
              "filter_product_ids": {
                "type": "array",
                "description": "The products to filter this upsell funnel by."
              },
              "name": {
                "type": "string",
                "nullable": true,
                "description": "A name for this upsell that will be visible to customers."
              },
              "priority": {
                "type": "integer",
                "description": "The priority of this upsell in relation to other upsells. Must be in the range of `1` - `5` with `5` being the highest priority and `1` being the lowest."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_metadata"
          }
        ]
      },
      "upsell_funnel_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/upsell_funnel_base"
          }
        ]
      },
      "upsell_funnel_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/upsell_funnel_base"
          },
          {
            "properties": {
              "archived_at": {
                "type": "integer",
                "nullable": true,
                "description": "Time at which the object was archived. Measured in seconds since the Unix epoch."
              },
              "upsells": {
                "type": "object",
                "nullable": true,
                "description": "A list of associated upsells."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_discarded_timestamp"
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "user_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "properties": {
              "email": {
                "type": "string",
                "description": "The email address of the user."
              },
              "first_name": {
                "type": "string",
                "description": "The first name of the user."
              },
              "last_name": {
                "type": "string",
                "description": "The last name of the user."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "variant_base": {
        "allOf": [
          {
            "properties": {
              "amount": {
                "type": "integer",
                "nullable": true,
                "description": "The amount in cents to be charged, represented as a whole integer for this specific integer. If empty, the regular `Price` amount will be used. If the `Product` has multiple prices, then this amount will be ignored and the selected `Price` amount will be used."
              },
              "allow_out_of_stock_purchases": {
                "type": "boolean",
                "nullable": true,
                "description": "Whether or not to allow purchases of this variant when stock runs out. If true, the stock levels for this variant can go below zero. If `null`, inherits from the product."
              },
              "auto_fulfill_enabled": {
                "type": "boolean",
                "nullable": true,
                "description": "Whether or not this variant should be auto fulfilled when it is purchased. This can only be `true` when `shipping_enabled` is `false`. If `null`, inherits from the product."
              },
              "license_activation_limit": {
                "type": "integer",
                "nullable": true,
                "description": "The max number of activations allowed per license. If `null`, inherits from the product or price."
              },
              "option_1": {
                "type": "string",
                "description": "The value for the first variant option."
              },
              "option_2": {
                "type": "string",
                "nullable": true,
                "description": "The value for the second variant option."
              },
              "option_3": {
                "type": "string",
                "nullable": true,
                "description": "The value for the third variant option."
              },
              "position": {
                "type": "integer",
                "nullable": true,
                "description": "The ordering position of this variant when displayed to customers."
              },
              "purchase_limit": {
                "type": "integer",
                "nullable": true,
                "description": "The max number of times this variant can be purchased by a customer. If `null`, inherits from the product."
              },
              "shipping_enabled": {
                "type": "boolean",
                "nullable": true,
                "description": "If set to `true` checkouts with this variant will require a full shipping address. If `null`, inherits from the product."
              },
              "sku": {
                "type": "string",
                "nullable": true,
                "description": "The stock keeping unit for this variant."
              },
              "stock_enabled": {
                "type": "boolean",
                "nullable": true,
                "description": "Whether or not stock will be tracked for this variant. If `null`, inherits from the product."
              },
              "tax_category": {
                "type": "string",
                "nullable": true,
                "description": "The tax category/code that matches this variant. If `null`, inherits from the product."
              },
              "tax_enabled": {
                "type": "boolean",
                "nullable": true,
                "description": "If set to `true`, this variant is considered taxable. If `null`, inherits from the product."
              },
              "weight": {
                "type": "number",
                "nullable": true,
                "description": "The variant weight, meant to be displayable to the customer. If `null`, inherits from the product."
              },
              "weight_unit": {
                "type": "string",
                "nullable": true,
                "description": "The weight unit for this variant. If `null`, inherits from the product."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_metadata"
          }
        ]
      },
      "variant_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/variant_base"
          },
          {
            "properties": {
              "image": {
                "type": "string",
                "description": "The UUID of the media."
              },
              "product": {
                "type": "string",
                "description": "The UUID of the product."
              },
              "stock_adjustment": {
                "type": "integer",
                "description": "The amount to adjust the stock by. This can be a positive or negative number."
              }
            }
          }
        ]
      },
      "variant_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/variant_base"
          },
          {
            "properties": {
              "available_stock": {
                "type": "integer",
                "description": "The total amount of stock available for purchase. This is the total `stock` on hand minus `held_stock`."
              },
              "currency": {
                "type": "string",
                "description": "Three-letter ISO currency code, in lowercase. This is inherited from the price."
              },
              "current_version": {
                "type": "boolean",
                "description": "Whether or not this object represents the current version of this variant. (This will be `false` if the association was created to this variant before it was altered. In this case, we will lookup the version of the variant at the time it was associated.)"
              },
              "g_weight": {
                "type": "number",
                "nullable": true,
                "description": "The weight of this variant in grams. If `null`, inherits from the product."
              },
              "held_stock": {
                "type": "integer",
                "description": "The total amount of stock being held by unfulfilled line items."
              },
              "image": {
                "type": "string",
                "nullable": true,
                "description": "The associated media."
              },
              "option_names": {
                "type": "array",
                "description": "An array of the associated product's variant option names."
              },
              "product": {
                "type": "string",
                "description": "The associated product."
              },
              "stock": {
                "type": "integer",
                "description": "The total amount of stock on hand for this product."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "variant_option_body": {
        "allOf": [
          {
            "properties": {
              "display_type": {
                "type": "string",
                "description": "The display type of the variant option â€“ one of \"radio\" or \"dropdown\"."
              },
              "name": {
                "type": "string",
                "description": "The variant option's name â€“ i.e. Size, Color, etc."
              },
              "position": {
                "type": "integer",
                "nullable": true,
                "description": "The ordering position of this variant option when displayed to customers."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_metadata"
          }
        ]
      },
      "variant_option_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/variant_option_body"
          },
          {
            "properties": {
              "product": {
                "type": "string",
                "description": "The associated product."
              },
              "values": {
                "type": "array",
                "description": "A list of values for this variant option. (These are inferred from the values set on variants.)"
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "verification_code_body": {
        "properties": {
          "email": {
            "type": "string",
            "description": "The email to send the verification code to."
          }
        }
      },
      "verification_code_verify_body": {
        "properties": {
          "code": {
            "type": "string",
            "description": "The code that was sent to the email."
          },
          "email": {
            "type": "string",
            "description": "The email the verification code was sent to."
          }
        }
      },
      "verification_code_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "properties": {
              "email": {
                "type": "string",
                "description": "The email the verification code was sent to."
              },
              "verified": {
                "type": "boolean",
                "description": "Whether or not this verification code has been verified."
              },
              "verified_at": {
                "type": "integer",
                "nullable": true,
                "description": "Date when the verification code was verified."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      },
      "webhook_endpoint_body": {
        "properties": {
          "description": {
            "type": "string",
            "nullable": true,
            "description": "An optional description of what this webhook endpoint is used for."
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether or not this webhook endpoint is active."
          },
          "url": {
            "type": "string",
            "description": "The URL of this webhook endpoint."
          },
          "webhook_events": {
            "type": "array",
            "description": "The webhook events that this webhook endpoint should send webhooks for. For example, if `webhook_events=[\"order.created\"]` then the webhook endpoint will only send webhooks when the `order.created` event occurs.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "webhook_endpoint_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/model_identifiers"
          },
          {
            "$ref": "#/components/schemas/webhook_endpoint_body"
          },
          {
            "properties": {
              "automation_service": {
                "type": "string",
                "nullable": true,
                "description": "The automation service that this webhook endpoint is pointed at. One of `suretriggers` or `zapier`."
              },
              "erroring_grace_period_ends_at": {
                "type": "integer",
                "nullable": true,
                "description": "The time at which this webhook endpoint will be disabled if it continues to error."
              },
              "erroring_grace_period_started_at": {
                "type": "integer",
                "nullable": true,
                "description": "The time at which this webhook endpoint started erroring. A webhook endpoint is considered to be erroring when it returns a non 2xx response code. After 3 days, with 40% or more of requests erroring, the webhook endpoint will be disabled."
              },
              "signing_secret": {
                "type": "string",
                "description": "The webhook endpointâ€™s signing secret, used to generate webhook signatures."
              }
            }
          },
          {
            "$ref": "#/components/schemas/model_timestamps"
          }
        ]
      }
    }
  },
  "tags": [
    {
      "name": "Abandonded Checkouts",
      "description": "An abandonded checkout represents a customer's most recent incomplete checkout.\nWhen a checkout is associated with a customer and is left unpaid for 30 minutes a corresponding abandoned checkout is created. Only one abandoned checkout will be created per customer every 10 days."
    },
    {
      "name": "Abandoned Checkout Protocols",
      "description": "An abandoned checkout protocol represents the abandoned checkout settings for an account."
    },
    {
      "name": "Accounts",
      "description": "This is an object representing a SureCart account. You can retrieve it to see properties on the account like it's current - name or default currency."
    },
    {
      "name": "Activations",
      "description": "An activation represents a single use of a license."
    },
    {
      "name": "Affiliation Products",
      "description": "An affiliation product allows for setting a specific commission structure for a product and affiliation."
    },
    {
      "name": "Affiliation Protocols",
      "description": "An affiliation protocol represents the affiliate settings for an account."
    },
    {
      "name": "Affiliation Requests",
      "description": "An affiliation request represents a request from an affiliate to join an account's affiliate program."
    },
    {
      "name": "Affiliations",
      "description": "An affiliation represents a relationship between an affiliate and an account."
    },
    {
      "name": "Balance Transactions",
      "description": "You may modify a customer's balance by creating a balance transaction, which increments or decrements the customer's balance by the specified amount."
    },
    {
      "name": "Balances",
      "description": "Each customer has a balance value for each currency, which denotes a debit or credit that's automatically applied to their next invoice upon finalizing."
    },
    {
      "name": "Brands",
      "description": "A brand represents the design and branding settings for an account."
    },
    {
      "name": "Bulk Actions",
      "description": "A bulk action is a way to perform a single action on multiple resources at once."
    },
    {
      "name": "Bumps",
      "description": "A bump represents a price that will be conditionally recommended to customers during checkout. Bumps are displayed below the checkout summary and offer an easy way to add additional products to the checkout. They are a more powerful alternative to swaps, but they are more intrusive to the checkout experience."
    },
    {
      "name": "Cancellation Acts",
      "description": "A cancellation act represents a customer attempt to cancel a subscription."
    },
    {
      "name": "Cancellation Reasons",
      "description": "Cancellation reasons are specific reasons that a customer can select from when cancelling a subscription."
    },
    {
      "name": "Charges",
      "description": "A Charge represents a credit or debit card transaction that was captured through one of your processors. Only succesfully captured charges are recorded in SureCart."
    },
    {
      "name": "Checkouts",
      "description": "A checkout represents a collection of one-time and/or subscription products that a customer intends to purchase."
    },
    {
      "name": "Checkout Portal Protocols",
      "description": "A checkout portal protocol represents the checkout portal settings for an account."
    },
    {
      "name": "Clicks",
      "description": "A click is a record of a customer clicking on an affiliate link. Click records are associated with checkouts to create referrals."
    },
    {
      "name": "Coupons",
      "description": "A coupon contains information about a percent-off or amount-off discount.\nThe coupon object can be used to discount either one-time payments or subscriptions. There are some additional parameters that apply to subscriptions, but are not applicable to one-time payments, such as duration. Regardless of what duration is set to, it only applies once for one-time payments."
    },
    {
      "name": "Customer Links",
      "description": "Customer links are temporary objects that allow access to customers through email lookup.\nEach customer link is valid for the greater of 1 hour after it's `created_at` time or 1 hour after it's `first_used_at` time. This means that if a customer link is not used within the first hour it expires. If a customer link is used within the first hour then it is valid for another hour starting from the time it was first used. So, a customer link that is used 30min after it's created will be valid for a total of 1hr 30min."
    },
    {
      "name": "Customer Notification Protocols",
      "description": "A customer notification protocol represents the customer notification settings for an account."
    },
    {
      "name": "Customers",
      "description": "Customer objects allow you to perform recurring charges, and to track multiple charges, that are associated with the same customer."
    },
    {
      "name": "Customer Portal Protocols",
      "description": "A customer portal protocol represents the customer portal settings for an account."
    },
    {
      "name": "Display Currencies",
      "description": "Display currencies are the currencies that are available to customers from the currency selector on your store."
    },
    {
      "name": "Downloads",
      "description": "Downloads represent the medias that can be downloaded when a specific product is purchased."
    },
    {
      "name": "Events",
      "description": "Events are our way of letting you know when something interesting happens in your account. When an interesting event occurs, we create a new `Event` object. For example, when a subscription updates, we create a `subscription.updated` event."
    },
    {
      "name": "Exports",
      "description": "Exports allow you to download your raw data from your SureCart account."
    },
    {
      "name": "Fees",
      "description": "A fee represents an additional amount added or subtracted from a specific line item."
    },
    {
      "name": "Fulfillment Items",
      "description": "A fulfillment item represents a specific line item being shipped to a customer within a fulfillment."
    },
    {
      "name": "Fulfillments",
      "description": "A fulfillment represents a shipment of products within an order to a customer."
    },
    {
      "name": "Imports",
      "description": "Imports allow you to upload raw data into your SureCart account to batch create customers, products, subscriptions, etc."
    },
    {
      "name": "Invoices",
      "description": "Invoices are statements of amounts owed by a customer. They wrap a checkout and can be configured to collect payment automatically or be sent to the customer for payment."
    },
    {
      "name": "Licenses",
      "description": "A license represents permission for a customer to use a specific product. Each license has an auto-generated `key` which can be used with the public license endpoints."
    },
    {
      "name": "Line Items",
      "description": "A line item represents a price and it's quantity being purchased by a customer within a checkout."
    },
    {
      "name": "Manual Charges",
      "description": "A manual charge represents record of a payment that was captured outside of SureCart."
    },
    {
      "name": "Manual Payment Methods",
      "description": "Manual payment methods are used to allow customers to checkout with manual approval â€“ i.e. cash on delivery, bank transfers, etc."
    },
    {
      "name": "Medias",
      "description": "Medias represent files that are hosted on our servers. Medias are uploaded directly to the underlying hosting service. To learn more about how medias work, please contact support."
    },
    {
      "name": "Notes",
      "description": "Notes are snippets of text that can be attached to objects to provide extra context. Notes can be added to `Customer`, `Order`, and `Subscription` objects."
    },
    {
      "name": "Order Protocols",
      "description": "A order protocol represents the order settings for an account."
    },
    {
      "name": "Orders",
      "description": "An order is a customer's completed request to purchase one or more products. An order is created when a checkout is paid."
    },
    {
      "name": "Payment Failures",
      "description": "A payment failure represents an attempt to pay a checkout that failed."
    },
    {
      "name": "Payment Intents",
      "description": "A payment intent represents the process of collecting a payment method from your customer."
    },
    {
      "name": "Payment Methods",
      "description": "Payment method objects represent your customer's payment instruments."
    },
    {
      "name": "Payout Groups",
      "description": "A payout group represents a group of payouts that are created together."
    },
    {
      "name": "Payouts",
      "description": "A payout represents a payment to an affiliate."
    },
    {
      "name": "Periods",
      "description": "A period represents a billing interval for a subscription."
    },
    {
      "name": "Prices",
      "description": "Prices define the unit cost, currency, and (optional) billing cycle for both recurring and one-time purchases of products. Products help you track inventory or provisioning, and prices help you track payment terms. Different physical goods or levels of service should be represented by products, and pricing options should be represented by prices.\nThis approach lets you change prices without having to change your provisioning scheme. For example, you might have a single \\\"gold\\\" product that has prices for $10/month, $100/year, and â‚¬9 once."
    },
    {
      "name": "Processors",
      "description": "A processor represents a connection to a third-party payment processor like Stripe."
    },
    {
      "name": "Product Collections",
      "description": "A list of related products - used to categorize products."
    },
    {
      "name": "Product Groups",
      "description": "A group of related products â€“ used to configure which products a customer can switch between when updating a subscription."
    },
    {
      "name": "Product Medias",
      "description": "Product medias represent a product's images."
    },
    {
      "name": "Products",
      "description": "Products describe the specific goods or services you offer to your customers. For example, you might offer a Standard and Premium version of your goods or service; each version would be a separate Product. They can be used in conjunction with Prices to configure pricing and Subscriptions."
    },
    {
      "name": "Promotions",
      "description": "A Promotion represents a customer-redeemable code for a coupon. It can be used to create multiple codes for a single coupon."
    },
    {
      "name": "Purchases",
      "description": "A purchase represents a specific product that a customer has paid for (one-time products), or is currently paying for (recurring products via a subscription). The purchase model is a summary of all products that a customer current should have \"access\" to."
    },
    {
      "name": "Referral Items",
      "description": "A referral item represents a specific line item within a referral."
    },
    {
      "name": "Referrals",
      "description": "A referral represents a checkout that is associated with an affiliate."
    },
    {
      "name": "Refunds",
      "description": "Refund objects allow you to refund a charge that has previously been created but not yet refunded. Funds will be refunded to the credit or debit card that was originally charged."
    },
    {
      "name": "Return Items",
      "description": "A return item represents a specific line item being returned from a customer within a return request."
    },
    {
      "name": "Return Requests",
      "description": "A return request represents a return of products within an order from a customer."
    },
    {
      "name": "Reviews",
      "description": "A review represents a customer's review of a product."
    },
    {
      "name": "Review Medias",
      "description": "Review medias represent the media that is associated with a review."
    },
    {
      "name": "Review Protocols",
      "description": "A review protocol represents the review settings for an account."
    },
    {
      "name": "Shipping Methods",
      "description": "Shipping methods represent the different speeds/classes of shipping that a store offers â€“ i.e. `Express`, `Ground`, etc."
    },
    {
      "name": "Shipping Profiles",
      "description": "A shipping profile is a grouping of products that have the same shipping zones and rates. Each product can belong to one shipping profile."
    },
    {
      "name": "Shipping Protocols",
      "description": "A shipping protocol represents the shipping settings for an account."
    },
    {
      "name": "Shipping Rates",
      "description": "Shipping rates represent the specific rules for determining the cost of shipping based on the products within a checkout."
    },
    {
      "name": "Shipping Zones",
      "description": "A shipping zone represents a geographical (group of countries) boundary for setting specific shipping rates within a shipping profile."
    },
    {
      "name": "Statistics",
      "description": "A group of endpoints that provide high level statistics on resources."
    },
    {
      "name": "Subscription Protocols",
      "description": "A subscription protocol represents the subscription settings for an account."
    },
    {
      "name": "Subscriptions",
      "description": "A Subscription represents a recurring schedule to charge a customer on one of your processors."
    },
    {
      "name": "Swaps",
      "description": "A swap represents a price that will be conditionally recommended to customers during checkout. Swaps are displayed in the checkout summary and can be easily toggled on or off. They are non-intrusive alternative to bumps, and offer customers an easy way to flip between two prices."
    },
    {
      "name": "Tax Overrides",
      "description": "A tax override is a manual tax rate that will be applied to products in a collection or shipping within a specific tax zone."
    },
    {
      "name": "Tax Protocols",
      "description": "A tax protocol represents the tax settings for an account."
    },
    {
      "name": "Tax Registrations",
      "description": "A tax registration represents a tax zone that is enabled for an account. Taxes will not be calculated for checkouts within a tax zone unless a matching tax registration exists."
    },
    {
      "name": "Tax Zones",
      "description": "A tax zone represents a geographic area (country and state combinations) that taxes can be calculated for."
    },
    {
      "name": "Trackings",
      "description": "A tracking represents the tracking number information from a shipping courier."
    },
    {
      "name": "Upsell Funnels",
      "description": "An upsell funnel represents a group of upsells that will be presented to customers after checkout in a specific order."
    },
    {
      "name": "Upsells",
      "description": "An upsell represents a price (maybe discounted) that will be offered to customers after checkout."
    },
    {
      "name": "Variant Options",
      "description": "Variant options represent the custom properties of a product â€“ i.e. `Size`, `Color`, etc."
    },
    {
      "name": "Variant Values",
      "description": "Variant values represent the custom values of a specific variant option. For example, a variant option named `Color` could have variant values of `Red` and `Blue`."
    },
    {
      "name": "Variants",
      "description": "A variant represents one version of a product with several options. Each product can have a maximum of three variant options and a maximum of 100 variants."
    },
    {
      "name": "Verification Codes",
      "description": "Verification codes are short-lived authentication codes that can be used to verify access to an email address. They provide a secure way of granting access to the customer portal without requiring the customer to have a password.\nEach verification code is valid for 10 minutes, and you are limited to creating 1 every minute per email address."
    },
    {
      "name": "Webhook Endpoints",
      "description": "You can configure webhook endpoints via the API to be notified about events that happen in your SureCart account.\nMost users configure webhooks from the dashboard, which provides a user interface for registering and testing your webhook endpoints."
    }
  ],
  "paths": {
    "/v1/fulfillment_items": {
      "get": {
        "summary": "List",
        "tags": [
          "Fulfillment Items"
        ],
        "operationId": "list_fulfillment_item",
        "description": "Returns a list of your fulfillment items.",
        "parameters": [
          {
            "name": "fulfillment_ids[]",
            "in": "query",
            "description": "Only return objects that belong to the given fulfillments.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Only return objects with the given IDs.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of items to be returned, between 1 and 100.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of items you want returned.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "object": "list",
                  "pagination": {
                    "count": 1,
                    "limit": 20,
                    "page": 1,
                    "url": "/v1/fulfillment_items"
                  },
                  "data": [
                    {
                      "id": "3005baa7-6bf4-495f-87e6-9034a5f5aacc",
                      "object": "fulfillment_item",
                      "quantity": 1,
                      "g_weight": 0.0,
                      "unit_g_weight": 0.0,
                      "fulfillment": "8e5a1e46-9492-4614-a4c9-839b7eab8d0d",
                      "line_item": "0ad342d4-a318-4114-ac2a-b3475079cacc",
                      "created_at": 1761733342,
                      "updated_at": 1761733342
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/list_response"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fulfillment_items/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve",
        "tags": [
          "Fulfillment Items"
        ],
        "operationId": "retrieve_fulfillment_item",
        "description": "Retrieves details of a specific fulfillment item.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "id": "43b7dd7b-4a42-4757-acc4-cfcdf051c316",
                  "object": "fulfillment_item",
                  "quantity": 1,
                  "g_weight": 0.0,
                  "unit_g_weight": 0.0,
                  "fulfillment": "227d8bcf-3def-495d-9137-001a1e07fca7",
                  "line_item": "c8daa038-5288-4be4-bbbd-67107b28ce68",
                  "created_at": 1761733342,
                  "updated_at": 1761733342
                },
                "schema": {
                  "$ref": "#/components/schemas/fulfillment_item_response"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fulfillments": {
      "get": {
        "summary": "List",
        "tags": [
          "Fulfillments"
        ],
        "operationId": "list_fulfillment",
        "description": "Returns a list of your fulfillments.",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "description": "Only return objects with the given IDs.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of items to be returned, between 1 and 100.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "order_ids[]",
            "in": "query",
            "description": "Only return objects that belong to the given orders.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of items you want returned.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "shipment_status[]",
            "in": "query",
            "description": "Only return objects with the given shipment status.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "object": "list",
                  "pagination": {
                    "count": 1,
                    "limit": 20,
                    "page": 1,
                    "url": "/v1/fulfillments"
                  },
                  "data": [
                    {
                      "id": "dd11785e-df2d-46c7-b614-12ed0a4427ef",
                      "object": "fulfillment",
                      "notifications_enabled": false,
                      "number": "0000-F",
                      "shipment_status": "unshipped",
                      "g_weight": 0.0,
                      "order": "dd4f60da-8abb-488c-8c90-43e9ffb288f3",
                      "created_at": 1761733343,
                      "updated_at": 1761733343
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/list_response"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create",
        "tags": [
          "Fulfillments"
        ],
        "operationId": "create_fulfillment",
        "description": "Creates a new fulfillment.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "id": "8c0ed796-6c22-4a52-a2c9-883b91d1d608",
                  "object": "fulfillment",
                  "notifications_enabled": false,
                  "number": "0000-F1",
                  "shipment_status": "unshippable",
                  "g_weight": 0.0,
                  "order": "a93174df-59e9-4bc3-861f-cdcce9b761f3",
                  "created_at": 1761733345,
                  "updated_at": 1761733345
                },
                "schema": {
                  "$ref": "#/components/schemas/fulfillment_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fulfillment": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/fulfillment_body"
                      }
                    ]
                  }
                },
                "example": {
                  "fulfillment": {
                    "order": "a93174df-59e9-4bc3-861f-cdcce9b761f3",
                    "fulfillment_items": [
                      {
                        "line_item": "c12640e4-f946-4851-9bee-3b14120449c4",
                        "quantity": 1
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/fulfillments/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve",
        "tags": [
          "Fulfillments"
        ],
        "operationId": "retrieve_fulfillment",
        "description": "Retrieves details of a specific fulfillment.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "id": "c2104a75-de55-4b5e-8fb4-b5960ad17352",
                  "object": "fulfillment",
                  "notifications_enabled": false,
                  "number": "0000-F",
                  "shipment_status": "unshipped",
                  "g_weight": 0.0,
                  "order": "310a4be5-ab9d-4e4a-9e87-ef68df1da50f",
                  "created_at": 1761733346,
                  "updated_at": 1761733346
                },
                "schema": {
                  "$ref": "#/components/schemas/fulfillment_response"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update",
        "tags": [
          "Fulfillments"
        ],
        "operationId": "update_fulfillment",
        "description": "Updates a specific fulfillment.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "id": "abe29aae-d007-4cbc-9a24-aef990125228",
                  "object": "fulfillment",
                  "notifications_enabled": false,
                  "number": "0000-F",
                  "shipment_status": "unshippable",
                  "g_weight": 0.0,
                  "order": "54dc0f73-a871-4363-9474-1afad48097da",
                  "created_at": 1761733347,
                  "updated_at": 1761733347
                },
                "schema": {
                  "$ref": "#/components/schemas/fulfillment_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fulfillment": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/fulfillment_body"
                      }
                    ]
                  }
                },
                "example": {
                  "fulfillment": {
                    "trackings": [
                      {
                        "number": "1Z879E930346834440"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete",
        "tags": [
          "Fulfillments"
        ],
        "operationId": "delete_fulfillment",
        "description": "Deletes a specific fulfillment.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "id": "8f69737a-2d86-4fc1-ad7e-6ace3584f194",
                  "object": "fulfillment",
                  "deleted": true
                },
                "schema": {
                  "$ref": "#/components/schemas/model_destroy_response"
                }
              }
            }
          }
        }
      }
    },
    "/v1/return_items": {
      "get": {
        "summary": "List",
        "tags": [
          "Return Items"
        ],
        "operationId": "list_return_item",
        "description": "Returns a list of your return items.",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "description": "Only return objects with the given IDs.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of items to be returned, between 1 and 100.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of items you want returned.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "return_request_ids[]",
            "in": "query",
            "description": "Only return objects that belong to the given return requests.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "object": "list",
                  "pagination": {
                    "count": 1,
                    "limit": 20,
                    "page": 1,
                    "url": "/v1/return_items"
                  },
                  "data": [
                    {
                      "id": "09505267-05ad-48df-ac05-36c154c867c6",
                      "object": "return_item",
                      "note": null,
                      "return_reason": "wrong_item",
                      "return_reason_description": "Received the wrong item",
                      "quantity": 1,
                      "return_request": "a2c6a772-0212-49ca-915a-1d9c838c2cb3",
                      "line_item": "2e340b85-3487-4b38-9b00-49eb01b355e4",
                      "created_at": 1761733417,
                      "updated_at": 1761733417
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/list_response"
                }
              }
            }
          }
        }
      }
    },
    "/v1/return_items/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve",
        "tags": [
          "Return Items"
        ],
        "operationId": "retrieve_return_item",
        "description": "Retrieves details of a specific return item.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "id": "2827164e-1ced-4356-8cb4-b5249914be99",
                  "object": "return_item",
                  "note": null,
                  "return_reason": "wrong_item",
                  "return_reason_description": "Received the wrong item",
                  "quantity": 1,
                  "return_request": "32f8c517-74c5-44af-ae55-128a8fb9db82",
                  "line_item": "54db4c75-939e-44a8-80d4-48fd527bc8f9",
                  "created_at": 1761733418,
                  "updated_at": 1761733418
                },
                "schema": {
                  "$ref": "#/components/schemas/return_item_response"
                }
              }
            }
          }
        }
      }
    },
    "/v1/return_requests": {
      "get": {
        "summary": "List",
        "tags": [
          "Return Requests"
        ],
        "operationId": "list_return_request",
        "description": "Returns a list of your return requests.",
        "parameters": [
          {
            "name": "ids[]",
            "in": "query",
            "description": "Only return objects with the given IDs.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of items to be returned, between 1 and 100.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "order_ids[]",
            "in": "query",
            "description": "Only return objects that belong to the given orders.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of items you want returned.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "status[]",
            "in": "query",
            "description": "Only return objects with the given status.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "object": "list",
                  "pagination": {
                    "count": 1,
                    "limit": 20,
                    "page": 1,
                    "url": "/v1/return_requests"
                  },
                  "data": [
                    {
                      "id": "76541011-9f5a-4b36-8548-29bdc0abf401",
                      "object": "return_request",
                      "number": "0000-R",
                      "status": "open",
                      "order": "76fe05de-7475-43fd-b12c-1722f14d1131",
                      "created_at": 1761733419,
                      "updated_at": 1761733419
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/list_response"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create",
        "tags": [
          "Return Requests"
        ],
        "operationId": "create_return_request",
        "description": "Creates a new return request.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "id": "a302403f-60f9-4b9f-b2f5-23e84eba2150",
                  "object": "return_request",
                  "number": "0000-R1",
                  "status": "open",
                  "order": "e4d388e5-f242-4ae4-abf7-caee4d32ce13",
                  "created_at": 1761733420,
                  "updated_at": 1761733420
                },
                "schema": {
                  "$ref": "#/components/schemas/return_request_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "return_request": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/return_request_body"
                      }
                    ]
                  }
                },
                "example": {
                  "return_request": {
                    "order": "e4d388e5-f242-4ae4-abf7-caee4d32ce13",
                    "return_items": [
                      {
                        "line_item": "bf17f195-8e6c-45d3-9bd2-b2d700cb6f6a",
                        "quantity": 1,
                        "return_reason_id": "wrong_item"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/return_requests/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve",
        "tags": [
          "Return Requests"
        ],
        "operationId": "retrieve_return_request",
        "description": "Retrieves details of a specific return request.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "id": "e01d33cd-aeca-4146-8f04-639c41aa2aa4",
                  "object": "return_request",
                  "number": "0000-R",
                  "status": "open",
                  "order": "4ec8d62a-9cf2-4b2f-9e9a-0100c4a9b09d",
                  "created_at": 1761733421,
                  "updated_at": 1761733421
                },
                "schema": {
                  "$ref": "#/components/schemas/return_request_response"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update",
        "tags": [
          "Return Requests"
        ],
        "operationId": "update_return_request",
        "description": "Updates a specific return request.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "id": "9277efb9-6702-4ffb-933a-3b7838fa809e",
                  "object": "return_request",
                  "number": "0000-R",
                  "status": "open",
                  "order": "559cf5f7-30f7-4f32-91ea-045c27e5c6b4",
                  "created_at": 1761733422,
                  "updated_at": 1761733422
                },
                "schema": {
                  "$ref": "#/components/schemas/return_request_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "return_request": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/return_request_body"
                      }
                    ]
                  }
                },
                "example": {
                  "return_request": {
                    "metadata": {
                      "test": "test"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete",
        "tags": [
          "Return Requests"
        ],
        "operationId": "delete_return_request",
        "description": "Deletes a specific return request.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "id": "698a394b-5c5f-4176-a0df-2271f7abf367",
                  "object": "return_request",
                  "deleted": true
                },
                "schema": {
                  "$ref": "#/components/schemas/model_destroy_response"
                }
              }
            }
          }
        }
      }
    },
    "/v1/return_requests/{id}/open": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "summary": "Open",
        "tags": [
          "Return Requests"
        ],
        "operationId": "open_return_request",
        "description": "Updates status of a specific return request to `open`.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "id": "c8f7c7a2-7aae-476b-b5b2-33a176ecf9b2",
                  "object": "return_request",
                  "number": "0000-R",
                  "status": "open",
                  "order": "39f02100-ff67-4127-ac95-f7b6ea6d2e36",
                  "created_at": 1761733424,
                  "updated_at": 1761733424
                },
                "schema": {
                  "$ref": "#/components/schemas/return_request_response"
                }
              }
            }
          }
        }
      }
    },
    "/v1/return_requests/{id}/complete": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "summary": "Complete",
        "tags": [
          "Return Requests"
        ],
        "operationId": "complete_return_request",
        "description": "Updates status of a specific return request to `complete`.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "id": "b86ce901-d87a-4a8d-8d17-39e8b48f9ad8",
                  "object": "return_request",
                  "number": "0000-R",
                  "status": "completed",
                  "order": "d32d6726-74ae-4b59-9bf2-db0d0074ffd5",
                  "created_at": 1761733425,
                  "updated_at": 1761733425
                },
                "schema": {
                  "$ref": "#/components/schemas/return_request_response"
                }
              }
            }
          }
        }
      }
    },
    "/v1/return_reasons": {
      "get": {
        "summary": "List Return Reasons",
        "tags": [
          "Return Requests"
        ],
        "operationId": "list_return_reasons_return_request",
        "description": "Returns a list of possible return reasons.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "object": "list",
                  "data": [
                    {
                      "id": "color",
                      "description": "Color"
                    },
                    {
                      "id": "defective",
                      "description": "Damaged or defective"
                    },
                    {
                      "id": "not_as_described",
                      "description": "Item not as described"
                    },
                    {
                      "id": "size_too_large",
                      "description": "Size was too large"
                    },
                    {
                      "id": "size_too_small",
                      "description": "Size was too small"
                    },
                    {
                      "id": "style",
                      "description": "Style"
                    },
                    {
                      "id": "unknown",
                      "description": "Unknown"
                    },
                    {
                      "id": "unwanted",
                      "description": "Customer changed their mind"
                    },
                    {
                      "id": "wrong_item",
                      "description": "Received the wrong item"
                    },
                    {
                      "id": "other",
                      "description": "Other"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/list_response"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shipping_methods": {
      "get": {
        "summary": "List",
        "tags": [
          "Shipping Methods"
        ],
        "operationId": "list_shipping_method",
        "description": "Returns a list of your shipping methods.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "object": "list",
                  "pagination": {
                    "count": 1,
                    "limit": 20,
                    "page": 1,
                    "url": "/v1/shipping_methods"
                  },
                  "data": [
                    {
                      "id": "1def1568-8352-4bf4-967a-a43dd2541e8a",
                      "object": "shipping_method",
                      "description": "Deliver within 1-2 days",
                      "name": "Express",
                      "created_at": 1761733430,
                      "updated_at": 1761733430
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/list_response"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create",
        "tags": [
          "Shipping Methods"
        ],
        "operationId": "create_shipping_method",
        "description": "Creates a new shipping method.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "id": "229d3eac-9925-4cb3-b19b-3b592537d823",
                  "object": "shipping_method",
                  "description": null,
                  "name": "Standard",
                  "created_at": 1761733430,
                  "updated_at": 1761733430
                },
                "schema": {
                  "$ref": "#/components/schemas/shipping_method_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shipping_method": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/shipping_method_body"
                      }
                    ]
                  }
                },
                "example": {
                  "shipping_method": {
                    "name": "Standard"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/shipping_methods/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve",
        "tags": [
          "Shipping Methods"
        ],
        "operationId": "retrieve_shipping_method",
        "description": "Retrieves details of a specific shipping method.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "id": "99b8bebf-b50f-4081-8246-5293b735d4af",
                  "object": "shipping_method",
                  "description": "Deliver within 1-2 days",
                  "name": "Express",
                  "created_at": 1761733430,
                  "updated_at": 1761733430
                },
                "schema": {
                  "$ref": "#/components/schemas/shipping_method_response"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update",
        "tags": [
          "Shipping Methods"
        ],
        "operationId": "update_shipping_method",
        "description": "Updates a specific shipping method.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "id": "f00f834c-ce9c-42a1-a67c-c9a2ef8dc8f6",
                  "object": "shipping_method",
                  "description": "Deliver within 1-2 days",
                  "name": "Fast",
                  "created_at": 1761733431,
                  "updated_at": 1761733431
                },
                "schema": {
                  "$ref": "#/components/schemas/shipping_method_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shipping_method": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/shipping_method_body"
                      }
                    ]
                  }
                },
                "example": {
                  "shipping_method": {
                    "name": "Fast"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/shipping_profiles": {
      "get": {
        "summary": "List",
        "tags": [
          "Shipping Profiles"
        ],
        "operationId": "list_shipping_profile",
        "description": "Returns a list of your shipping profiles.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "object": "list",
                  "pagination": {
                    "count": 1,
                    "limit": 20,
                    "page": 1,
                    "url": "/v1/shipping_profiles"
                  },
                  "data": [
                    {
                      "id": "ef155bd6-5eb8-4d5c-9437-2ecd81b61205",
                      "object": "shipping_profile",
                      "default": false,
                      "name": "General",
                      "fallback_shipping_zone": null,
                      "created_at": 1761733431,
                      "updated_at": 1761733431
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/list_response"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create",
        "tags": [
          "Shipping Profiles"
        ],
        "operationId": "create_shipping_profile",
        "description": "Creates a new shipping profile.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "id": "48743b73-9f3b-4693-945d-afc1fa7b7f00",
                  "object": "shipping_profile",
                  "default": false,
                  "name": "EU",
                  "fallback_shipping_zone": null,
                  "created_at": 1761733431,
                  "updated_at": 1761733431
                },
                "schema": {
                  "$ref": "#/components/schemas/shipping_profile_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shipping_profile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/shipping_profile_body"
                      }
                    ]
                  }
                },
                "example": {
                  "shipping_profile": {
                    "name": "EU"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/shipping_profiles/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve",
        "tags": [
          "Shipping Profiles"
        ],
        "operationId": "retrieve_shipping_profile",
        "description": "Retrieves details of a specific shipping profile.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "id": "44143678-abf3-4b79-bfb9-cc6433042279",
                  "object": "shipping_profile",
                  "default": false,
                  "name": "General",
                  "fallback_shipping_zone": null,
                  "created_at": 1761733431,
                  "updated_at": 1761733431
                },
                "schema": {
                  "$ref": "#/components/schemas/shipping_profile_response"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update",
        "tags": [
          "Shipping Profiles"
        ],
        "operationId": "update_shipping_profile",
        "description": "Updates a specific shipping profile.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "id": "d4af4df2-f6e9-440e-a957-76f23385d3d4",
                  "object": "shipping_profile",
                  "default": false,
                  "name": "India",
                  "fallback_shipping_zone": null,
                  "created_at": 1761733431,
                  "updated_at": 1761733431
                },
                "schema": {
                  "$ref": "#/components/schemas/shipping_profile_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shipping_profile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/shipping_profile_body"
                      }
                    ]
                  }
                },
                "example": {
                  "shipping_profile": {
                    "name": "India"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Shipping Profiles"
        ],
        "operationId": "delete_shipping_profile",
        "description": "Deletes a specific shipping profile.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "id": "f01baf80-e2a4-43d5-9829-86363094fb8e",
                  "object": "shipping_profile",
                  "deleted": true
                },
                "schema": {
                  "$ref": "#/components/schemas/model_destroy_response"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shipping_protocol": {
      "get": {
        "summary": "Retrieve",
        "tags": [
          "Shipping Protocols"
        ],
        "operationId": "retrieve_shipping_protocol",
        "description": "Retrieves details of the current account's shipping protocol.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "id": "186daa3f-1cd8-484e-900e-a595748e661b",
                  "object": "shipping_protocol",
                  "shipping_enabled": false,
                  "created_at": 1761733431,
                  "updated_at": 1761733431
                },
                "schema": {
                  "$ref": "#/components/schemas/shipping_protocol_response"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update",
        "tags": [
          "Shipping Protocols"
        ],
        "operationId": "update_shipping_protocol",
        "description": "Updates the current account's shipping protocol.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "id": "2caa42bc-4f85-401a-86c5-f035dd9e507a",
                  "object": "shipping_protocol",
                  "shipping_enabled": true,
                  "created_at": 1761733431,
                  "updated_at": 1761733432
                },
                "schema": {
                  "$ref": "#/components/schemas/shipping_protocol_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shipping_protocol": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/shipping_protocol_body"
                      }
                    ]
                  }
                },
                "example": {
                  "shipping_protocol": {
                    "shipping_enabled": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/shipping_rates": {
      "get": {
        "summary": "List",
        "tags": [
          "Shipping Rates"
        ],
        "operationId": "list_shipping_rate",
        "description": "Returns a list of your shipping rates.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of items to be returned, between 1 and 100.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of items you want returned.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "shipping_zone_ids[]",
            "in": "query",
            "description": "Only return objects that belong to the given shipping zone.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "object": "list",
                  "pagination": {
                    "count": 1,
                    "limit": 20,
                    "page": 1,
                    "url": "/v1/shipping_rates"
                  },
                  "data": [
                    {
                      "id": "eac657ab-b5c1-4a3c-afc0-20e35cdd74a8",
                      "object": "shipping_rate",
                      "amount": 750,
                      "currency": "usd",
                      "max_amount": null,
                      "min_amount": 0,
                      "max_weight": null,
                      "min_weight": 0.0,
                      "rate_type": "flat",
                      "weight_unit": "lb",
                      "shipping_method": "7f15be70-ece2-4bdc-9c93-b87641f60574",
                      "shipping_zone": "cc57f575-fcdd-406c-a4d8-27cf4a5ac165",
                      "created_at": 1761733432,
                      "updated_at": 1761733432
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/list_response"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create",
        "tags": [
          "Shipping Rates"
        ],
        "operationId": "create_shipping_rate",
        "description": "Creates a new shipping rate.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "id": "94718858-ede0-486c-b735-7053f135a8b6",
                  "object": "shipping_rate",
                  "amount": 650,
                  "currency": "usd",
                  "max_amount": 5000,
                  "min_amount": 0,
                  "max_weight": null,
                  "min_weight": 0.0,
                  "rate_type": "amount",
                  "weight_unit": "lb",
                  "shipping_method": "beceeda1-77f2-4bdc-b0b9-e358491c9d15",
                  "shipping_zone": "b478d439-8fc0-45d3-814d-65ba0bf8e992",
                  "created_at": 1761733432,
                  "updated_at": 1761733432
                },
                "schema": {
                  "$ref": "#/components/schemas/shipping_rate_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shipping_rate": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/shipping_rate_body"
                      }
                    ]
                  }
                },
                "example": {
                  "shipping_rate": {
                    "amount": 650,
                    "rate_type": "amount",
                    "shipping_zone_id": "b478d439-8fc0-45d3-814d-65ba0bf8e992",
                    "shipping_method_id": "beceeda1-77f2-4bdc-b0b9-e358491c9d15",
                    "min_amount": 0,
                    "max_amount": 5000
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/shipping_rates/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve",
        "tags": [
          "Shipping Rates"
        ],
        "operationId": "retrieve_shipping_rate",
        "description": "Retrieves details of a specific shipping rate.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "id": "73256d4d-8a9b-4c94-9503-c4590620937a",
                  "object": "shipping_rate",
                  "amount": 750,
                  "currency": "usd",
                  "max_amount": null,
                  "min_amount": 0,
                  "max_weight": null,
                  "min_weight": 0.0,
                  "rate_type": "flat",
                  "weight_unit": "lb",
                  "shipping_method": "db1d1d08-046a-4c09-9efd-15bc537b808b",
                  "shipping_zone": "2d151f73-5e66-47ab-ba9f-1d26a804659d",
                  "created_at": 1761733432,
                  "updated_at": 1761733432
                },
                "schema": {
                  "$ref": "#/components/schemas/shipping_rate_response"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update",
        "tags": [
          "Shipping Rates"
        ],
        "operationId": "update_shipping_rate",
        "description": "Updates a specific shipping rate.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "id": "33e52308-cf45-4fe9-b9f3-b3bea09e17c9",
                  "object": "shipping_rate",
                  "amount": 950,
                  "currency": "usd",
                  "max_amount": null,
                  "min_amount": 0,
                  "max_weight": null,
                  "min_weight": 0.0,
                  "rate_type": "flat",
                  "weight_unit": "lb",
                  "shipping_method": "a8f14788-d4fb-449b-a306-38374520693a",
                  "shipping_zone": "9951a452-8ab0-4283-b137-44df2489d60b",
                  "created_at": 1761733432,
                  "updated_at": 1761733432
                },
                "schema": {
                  "$ref": "#/components/schemas/shipping_rate_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shipping_rate": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/shipping_rate_body"
                      }
                    ]
                  }
                },
                "example": {
                  "shipping_rate": {
                    "amount": 950
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Shipping Rates"
        ],
        "operationId": "delete_shipping_rate",
        "description": "Deletes a specific shipping rate.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "id": "669c48a9-d440-4d78-bde1-ada70c001dd1",
                  "object": "shipping_rate",
                  "deleted": true
                },
                "schema": {
                  "$ref": "#/components/schemas/model_destroy_response"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shipping_zones": {
      "get": {
        "summary": "List",
        "tags": [
          "Shipping Zones"
        ],
        "operationId": "list_shipping_zone",
        "description": "Returns a list of your shipping zones.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of items to be returned, between 1 and 100.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of items you want returned.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "shipping_profile_ids[]",
            "in": "query",
            "description": "Only return objects that belong to the given shipping profile.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "object": "list",
                  "pagination": {
                    "count": 1,
                    "limit": 20,
                    "page": 1,
                    "url": "/v1/shipping_zones"
                  },
                  "data": [
                    {
                      "id": "aca57c32-a2d9-4e65-9115-066dc1c3ff10",
                      "object": "shipping_zone",
                      "name": "USA",
                      "territories": [
                        {
                          "country": "US",
                          "states": [
                            "NY",
                            "CA"
                          ]
                        }
                      ],
                      "shipping_profile": "f3c7c1ca-d665-4e0e-b2e6-bd0788cf6772",
                      "created_at": 1761733432,
                      "updated_at": 1761733432
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/list_response"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create",
        "tags": [
          "Shipping Zones"
        ],
        "operationId": "create_shipping_zone",
        "description": "Creates a new shipping zone.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "id": "7631d14d-b841-4e7f-868e-49d474b76ebb",
                  "object": "shipping_zone",
                  "name": "Canada",
                  "territories": [
                    {
                      "country": "US",
                      "states": [
                        "AK"
                      ]
                    }
                  ],
                  "shipping_profile": "dccebbc0-5721-4e11-a887-f9bc00f30301",
                  "created_at": 1761733433,
                  "updated_at": 1761733433
                },
                "schema": {
                  "$ref": "#/components/schemas/shipping_zone_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shipping_zone": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/shipping_zone_body"
                      }
                    ]
                  }
                },
                "example": {
                  "shipping_zone": {
                    "name": "Canada",
                    "shipping_profile_id": "dccebbc0-5721-4e11-a887-f9bc00f30301",
                    "territories": [
                      {
                        "country": "US",
                        "states": [
                          "AK"
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/shipping_zones/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve",
        "tags": [
          "Shipping Zones"
        ],
        "operationId": "retrieve_shipping_zone",
        "description": "Retrieves details of a specific shipping zone.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "id": "cfb7cebd-78b9-4bc2-91ee-e6e8cbbe97ad",
                  "object": "shipping_zone",
                  "name": "USA",
                  "territories": [
                    {
                      "country": "US",
                      "states": [
                        "NY",
                        "CA"
                      ]
                    }
                  ],
                  "shipping_profile": "3bf5f4d8-4ad0-43bb-ae55-f3a49edcabec",
                  "created_at": 1761733433,
                  "updated_at": 1761733433
                },
                "schema": {
                  "$ref": "#/components/schemas/shipping_zone_response"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update",
        "tags": [
          "Shipping Zones"
        ],
        "operationId": "update_shipping_zone",
        "description": "Updates a specific shipping zone.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "id": "53d5ca38-5ca9-41f4-b277-8d12487803ff",
                  "object": "shipping_zone",
                  "name": "USA",
                  "territories": [],
                  "shipping_profile": "0566ff7e-19d4-419a-9cc5-f864ae41d2af",
                  "created_at": 1761733433,
                  "updated_at": 1761733433
                },
                "schema": {
                  "$ref": "#/components/schemas/shipping_zone_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shipping_zone": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/shipping_zone_body"
                      }
                    ]
                  }
                },
                "example": {
                  "shipping_zone": {
                    "name": "USA"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Shipping Zones"
        ],
        "operationId": "delete_shipping_zone",
        "description": "Deletes a specific shipping zone.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "id": "423dd708-f895-4cf3-bd37-7431452ab57f",
                  "object": "shipping_zone",
                  "deleted": true
                },
                "schema": {
                  "$ref": "#/components/schemas/model_destroy_response"
                }
              }
            }
          }
        }
      }
    },
    "/v1/trackings": {
      "get": {
        "summary": "List",
        "tags": [
          "Trackings"
        ],
        "operationId": "list_tracking",
        "description": "Returns a list of your trackings.",
        "parameters": [
          {
            "name": "fulfillment_ids[]",
            "in": "query",
            "description": "Only return objects that belong to the given fulfillments.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Only return objects with the given IDs.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of items to be returned, between 1 and 100.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of items you want returned.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "object": "list",
                  "pagination": {
                    "count": 1,
                    "limit": 20,
                    "page": 1,
                    "url": "/v1/trackings"
                  },
                  "data": [
                    {
                      "id": "57dde92d-9aa6-4b05-af54-88eef1fabc56",
                      "object": "tracking",
                      "courier_name": "UPS",
                      "number": "1Z879E930346834440",
                      "url": "https://wwwapps.ups.com/WebTracking/track?track=yes&trackNums=1Z879E930346834440",
                      "fulfillment": "0dd62a99-6ab2-4eac-bf5b-593f2ca7aef8",
                      "created_at": 1761733448,
                      "updated_at": 1761733448
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/list_response"
                }
              }
            }
          }
        }
      }
    },
    "/v1/trackings/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve",
        "tags": [
          "Trackings"
        ],
        "operationId": "retrieve_tracking",
        "description": "Retrieves details of a specific tracking.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "id": "bbbd8723-957e-4267-93fb-12623638d0f3",
                  "object": "tracking",
                  "courier_name": "UPS",
                  "number": "1Z879E930346834440",
                  "url": "https://wwwapps.ups.com/WebTracking/track?track=yes&trackNums=1Z879E930346834440",
                  "fulfillment": "abf8c854-4262-4cd7-bff4-1c74e89fe345",
                  "created_at": 1761733449,
                  "updated_at": 1761733449
                },
                "schema": {
                  "$ref": "#/components/schemas/tracking_response"
                }
              }
            }
          }
        }
      }
    }
  },
  "info": {
    "title": "SureCart Shipping & Fulfillment API",
    "description": "Shipping configuration and fulfillment management including zones, rates, methods, and returns",
    "termsOfService": "https://surecart.com/terms-and-conditions",
    "version": "1.0"
  }
}